-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity writeV2calc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    voltagesBackup_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    voltagesBackup_ce0 : OUT STD_LOGIC;
    voltagesBackup_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    voltagesBackup_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    voltagesBackup_ce1 : OUT STD_LOGIC;
    voltagesBackup_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    simConfig_rowsToSimulate_V_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    simConfig_rowsToSimulate_V_empty_n : IN STD_LOGIC;
    simConfig_rowsToSimulate_V_read : OUT STD_LOGIC;
    simConfig_BLOCK_NUMBERS_V_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    simConfig_BLOCK_NUMBERS_V_empty_n : IN STD_LOGIC;
    simConfig_BLOCK_NUMBERS_V_read : OUT STD_LOGIC;
    Vi_idx_V_data_V_0_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    Vi_idx_V_data_V_0_empty_n : IN STD_LOGIC;
    Vi_idx_V_data_V_0_read : OUT STD_LOGIC;
    Vi_idx_V_data_V_1_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    Vi_idx_V_data_V_1_empty_n : IN STD_LOGIC;
    Vi_idx_V_data_V_1_read : OUT STD_LOGIC;
    Vi_idx_V_data_V_2_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    Vi_idx_V_data_V_2_empty_n : IN STD_LOGIC;
    Vi_idx_V_data_V_2_read : OUT STD_LOGIC;
    Vi_idx_V_data_V_3_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    Vi_idx_V_data_V_3_empty_n : IN STD_LOGIC;
    Vi_idx_V_data_V_3_read : OUT STD_LOGIC;
    fixedData_V_data_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fixedData_V_data_full_n : IN STD_LOGIC;
    fixedData_V_data_write : OUT STD_LOGIC;
    fixedData_V_tlast_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    fixedData_V_tlast_V_full_n : IN STD_LOGIC;
    fixedData_V_tlast_V_write : OUT STD_LOGIC;
    Vj_idx_V_data_V_0_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    Vj_idx_V_data_V_0_empty_n : IN STD_LOGIC;
    Vj_idx_V_data_V_0_read : OUT STD_LOGIC;
    Vj_idx_V_data_V_1_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    Vj_idx_V_data_V_1_empty_n : IN STD_LOGIC;
    Vj_idx_V_data_V_1_read : OUT STD_LOGIC;
    Vj_idx_V_data_V_2_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    Vj_idx_V_data_V_2_empty_n : IN STD_LOGIC;
    Vj_idx_V_data_V_2_read : OUT STD_LOGIC;
    Vj_idx_V_data_V_3_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    Vj_idx_V_data_V_3_empty_n : IN STD_LOGIC;
    Vj_idx_V_data_V_3_read : OUT STD_LOGIC;
    processedData_V_data_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    processedData_V_data_full_n : IN STD_LOGIC;
    processedData_V_data_write : OUT STD_LOGIC;
    processedData_V_data_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    processedData_V_data_1_full_n : IN STD_LOGIC;
    processedData_V_data_1_write : OUT STD_LOGIC;
    processedData_V_data_2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    processedData_V_data_2_full_n : IN STD_LOGIC;
    processedData_V_data_2_write : OUT STD_LOGIC;
    processedData_V_data_3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    processedData_V_data_3_full_n : IN STD_LOGIC;
    processedData_V_data_3_write : OUT STD_LOGIC );
end;


architecture behav of writeV2calc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv26_1 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal simConfig_rowsToSimulate_V_blk_n : STD_LOGIC;
    signal simConfig_BLOCK_NUMBERS_V_blk_n : STD_LOGIC;
    signal Vi_idx_V_data_V_0_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_3_i_i_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Vi_idx_V_data_V_1_blk_n : STD_LOGIC;
    signal Vi_idx_V_data_V_2_blk_n : STD_LOGIC;
    signal Vi_idx_V_data_V_3_blk_n : STD_LOGIC;
    signal fixedData_V_data_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_9_i_i_reg_420 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_i_reg_420_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal fixedData_V_tlast_V_blk_n : STD_LOGIC;
    signal Vj_idx_V_data_V_0_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal Vj_idx_V_data_V_1_blk_n : STD_LOGIC;
    signal Vj_idx_V_data_V_2_blk_n : STD_LOGIC;
    signal Vj_idx_V_data_V_3_blk_n : STD_LOGIC;
    signal processedData_V_data_blk_n : STD_LOGIC;
    signal processedData_V_data_1_blk_n : STD_LOGIC;
    signal processedData_V_data_2_blk_n : STD_LOGIC;
    signal processedData_V_data_3_blk_n : STD_LOGIC;
    signal t_V_reg_237 : STD_LOGIC_VECTOR (25 downto 0);
    signal simConfig_BLOCK_NUMB_reg_342 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal simConfig_rowsToSimu_reg_347 : STD_LOGIC_VECTOR (26 downto 0);
    signal i_V_fu_257_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_V_reg_355 : STD_LOGIC_VECTOR (11 downto 0);
    signal Vi_idx_V_data_V_00_status : STD_LOGIC;
    signal ap_block_state2 : BOOLEAN;
    signal tmp_data_0_V_reg_360 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_1_V_reg_365 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_2_V_reg_370 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_3_V_reg_375 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_data_reg_390 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_data_1_reg_395 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_reg_410 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_data_3_reg_415 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_i_i_fu_299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal fixedData_V_data1_status : STD_LOGIC;
    signal processedData_V_data1_status : STD_LOGIC;
    signal ap_block_state14_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal j_V_fu_304_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal j_V_reg_424 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_data_0_V_1_reg_429 : STD_LOGIC_VECTOR (26 downto 0);
    signal Vj_idx_V_data_V_00_status : STD_LOGIC;
    signal ap_block_state7_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_data_1_V_1_reg_434 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_2_V_1_reg_439 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_3_V_1_reg_444 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_block_state8_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp_data_0_reg_459 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state9_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal tmp_data_0_reg_459_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_1_12_reg_464 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_1_12_reg_464_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_13_reg_479 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_14_reg_484 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state6 : STD_LOGIC;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal t_V_1_reg_226 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_phi_mux_t_V_phi_fu_241_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_5_i_i_fu_279_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_i_i_fu_283_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_i_i_fu_287_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_i_i_fu_291_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_i_i_fu_326_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_1_i_i_fu_330_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_2_i_i_fu_334_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_3_i_i_fu_338_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal Vi_idx_V_data_V_00_update : STD_LOGIC;
    signal Vj_idx_V_data_V_00_update : STD_LOGIC;
    signal fixedData_V_data1_update : STD_LOGIC;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal processedData_V_data1_update : STD_LOGIC;
    signal t_V_1_cast_fu_248_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal t_V_cast_fu_295_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_402 : BOOLEAN;
    signal ap_condition_407 : BOOLEAN;
    signal ap_condition_412 : BOOLEAN;
    signal ap_condition_417 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((ap_const_logic_0 = Vi_idx_V_data_V_00_status) and (tmp_3_i_i_fu_252_p2 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_3_i_i_fu_252_p2 = ap_const_lv1_0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_1_reg_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                t_V_1_reg_226 <= i_V_reg_355;
            elsif ((not(((simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_1_reg_226 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    t_V_reg_237_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                t_V_reg_237 <= ap_const_lv26_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_9_i_i_reg_420 = ap_const_lv1_1))) then 
                t_V_reg_237 <= j_V_reg_424;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = Vi_idx_V_data_V_00_status) and (tmp_3_i_i_fu_252_p2 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                i_V_reg_355 <= i_V_fu_257_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                j_V_reg_424 <= j_V_fu_304_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                simConfig_BLOCK_NUMB_reg_342 <= simConfig_BLOCK_NUMBERS_V_dout;
                simConfig_rowsToSimu_reg_347 <= simConfig_rowsToSimulate_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_9_i_i_reg_420 <= tmp_9_i_i_fu_299_p2;
                tmp_9_i_i_reg_420_pp0_iter1_reg <= tmp_9_i_i_reg_420;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_9_i_i_reg_420 = ap_const_lv1_1))) then
                tmp_data_0_V_1_reg_429 <= Vj_idx_V_data_V_0_dout;
                tmp_data_1_V_1_reg_434 <= Vj_idx_V_data_V_1_dout;
                tmp_data_2_V_1_reg_439 <= Vj_idx_V_data_V_2_dout;
                tmp_data_3_V_1_reg_444 <= Vj_idx_V_data_V_3_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = Vi_idx_V_data_V_00_status) and (tmp_3_i_i_fu_252_p2 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_3_i_i_fu_252_p2 = ap_const_lv1_1))) then
                tmp_data_0_V_reg_360 <= Vi_idx_V_data_V_0_dout;
                tmp_data_1_V_reg_365 <= Vi_idx_V_data_V_1_dout;
                tmp_data_2_V_reg_370 <= Vi_idx_V_data_V_2_dout;
                tmp_data_3_V_reg_375 <= Vi_idx_V_data_V_3_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (tmp_9_i_i_reg_420 = ap_const_lv1_1))) then
                tmp_data_0_reg_459 <= voltagesBackup_q0;
                tmp_data_1_12_reg_464 <= voltagesBackup_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_data_0_reg_459_pp0_iter1_reg <= tmp_data_0_reg_459;
                tmp_data_1_12_reg_464_pp0_iter1_reg <= tmp_data_1_12_reg_464;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                tmp_data_1_reg_395 <= voltagesBackup_q1;
                tmp_data_reg_390 <= voltagesBackup_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_9_i_i_reg_420 = ap_const_lv1_1))) then
                tmp_data_2_13_reg_479 <= voltagesBackup_q0;
                tmp_data_3_14_reg_484 <= voltagesBackup_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                tmp_data_2_reg_410 <= voltagesBackup_q0;
                tmp_data_3_reg_415 <= voltagesBackup_q1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, simConfig_rowsToSimulate_V_empty_n, simConfig_BLOCK_NUMBERS_V_empty_n, ap_CS_fsm_state2, tmp_3_i_i_fu_252_p2, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0, Vi_idx_V_data_V_00_status, tmp_9_i_i_fu_299_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((ap_const_logic_0 = Vi_idx_V_data_V_00_status) and (tmp_3_i_i_fu_252_p2 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_3_i_i_fu_252_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((ap_const_logic_0 = Vi_idx_V_data_V_00_status) and (tmp_3_i_i_fu_252_p2 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_3_i_i_fu_252_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_9_i_i_fu_299_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_9_i_i_fu_299_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    Vi_idx_V_data_V_00_status <= (Vi_idx_V_data_V_3_empty_n and Vi_idx_V_data_V_2_empty_n and Vi_idx_V_data_V_1_empty_n and Vi_idx_V_data_V_0_empty_n);

    Vi_idx_V_data_V_00_update_assign_proc : process(ap_CS_fsm_state2, tmp_3_i_i_fu_252_p2, Vi_idx_V_data_V_00_status)
    begin
        if ((not(((ap_const_logic_0 = Vi_idx_V_data_V_00_status) and (tmp_3_i_i_fu_252_p2 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_3_i_i_fu_252_p2 = ap_const_lv1_1))) then 
            Vi_idx_V_data_V_00_update <= ap_const_logic_1;
        else 
            Vi_idx_V_data_V_00_update <= ap_const_logic_0;
        end if; 
    end process;


    Vi_idx_V_data_V_0_blk_n_assign_proc : process(Vi_idx_V_data_V_0_empty_n, ap_CS_fsm_state2, tmp_3_i_i_fu_252_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_3_i_i_fu_252_p2 = ap_const_lv1_1))) then 
            Vi_idx_V_data_V_0_blk_n <= Vi_idx_V_data_V_0_empty_n;
        else 
            Vi_idx_V_data_V_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Vi_idx_V_data_V_0_read <= Vi_idx_V_data_V_00_update;

    Vi_idx_V_data_V_1_blk_n_assign_proc : process(Vi_idx_V_data_V_1_empty_n, ap_CS_fsm_state2, tmp_3_i_i_fu_252_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_3_i_i_fu_252_p2 = ap_const_lv1_1))) then 
            Vi_idx_V_data_V_1_blk_n <= Vi_idx_V_data_V_1_empty_n;
        else 
            Vi_idx_V_data_V_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Vi_idx_V_data_V_1_read <= Vi_idx_V_data_V_00_update;

    Vi_idx_V_data_V_2_blk_n_assign_proc : process(Vi_idx_V_data_V_2_empty_n, ap_CS_fsm_state2, tmp_3_i_i_fu_252_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_3_i_i_fu_252_p2 = ap_const_lv1_1))) then 
            Vi_idx_V_data_V_2_blk_n <= Vi_idx_V_data_V_2_empty_n;
        else 
            Vi_idx_V_data_V_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Vi_idx_V_data_V_2_read <= Vi_idx_V_data_V_00_update;

    Vi_idx_V_data_V_3_blk_n_assign_proc : process(Vi_idx_V_data_V_3_empty_n, ap_CS_fsm_state2, tmp_3_i_i_fu_252_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_3_i_i_fu_252_p2 = ap_const_lv1_1))) then 
            Vi_idx_V_data_V_3_blk_n <= Vi_idx_V_data_V_3_empty_n;
        else 
            Vi_idx_V_data_V_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Vi_idx_V_data_V_3_read <= Vi_idx_V_data_V_00_update;
    Vj_idx_V_data_V_00_status <= (Vj_idx_V_data_V_3_empty_n and Vj_idx_V_data_V_2_empty_n and Vj_idx_V_data_V_1_empty_n and Vj_idx_V_data_V_0_empty_n);

    Vj_idx_V_data_V_00_update_assign_proc : process(ap_CS_fsm_pp0_stage1, tmp_9_i_i_reg_420, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_9_i_i_reg_420 = ap_const_lv1_1))) then 
            Vj_idx_V_data_V_00_update <= ap_const_logic_1;
        else 
            Vj_idx_V_data_V_00_update <= ap_const_logic_0;
        end if; 
    end process;


    Vj_idx_V_data_V_0_blk_n_assign_proc : process(Vj_idx_V_data_V_0_empty_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_9_i_i_reg_420, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_9_i_i_reg_420 = ap_const_lv1_1))) then 
            Vj_idx_V_data_V_0_blk_n <= Vj_idx_V_data_V_0_empty_n;
        else 
            Vj_idx_V_data_V_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Vj_idx_V_data_V_0_read <= Vj_idx_V_data_V_00_update;

    Vj_idx_V_data_V_1_blk_n_assign_proc : process(Vj_idx_V_data_V_1_empty_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_9_i_i_reg_420, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_9_i_i_reg_420 = ap_const_lv1_1))) then 
            Vj_idx_V_data_V_1_blk_n <= Vj_idx_V_data_V_1_empty_n;
        else 
            Vj_idx_V_data_V_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Vj_idx_V_data_V_1_read <= Vj_idx_V_data_V_00_update;

    Vj_idx_V_data_V_2_blk_n_assign_proc : process(Vj_idx_V_data_V_2_empty_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_9_i_i_reg_420, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_9_i_i_reg_420 = ap_const_lv1_1))) then 
            Vj_idx_V_data_V_2_blk_n <= Vj_idx_V_data_V_2_empty_n;
        else 
            Vj_idx_V_data_V_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Vj_idx_V_data_V_2_read <= Vj_idx_V_data_V_00_update;

    Vj_idx_V_data_V_3_blk_n_assign_proc : process(Vj_idx_V_data_V_3_empty_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_9_i_i_reg_420, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_9_i_i_reg_420 = ap_const_lv1_1))) then 
            Vj_idx_V_data_V_3_blk_n <= Vj_idx_V_data_V_3_empty_n;
        else 
            Vj_idx_V_data_V_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Vj_idx_V_data_V_3_read <= Vj_idx_V_data_V_00_update;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state15 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(tmp_9_i_i_reg_420_pp0_iter1_reg, ap_enable_reg_pp0_iter2, fixedData_V_data1_status, processedData_V_data1_status)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((processedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((fixedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(tmp_9_i_i_reg_420_pp0_iter1_reg, ap_enable_reg_pp0_iter2, fixedData_V_data1_status, processedData_V_data1_status)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((processedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((fixedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(tmp_9_i_i_reg_420_pp0_iter1_reg, ap_enable_reg_pp0_iter2, fixedData_V_data1_status, processedData_V_data1_status)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((processedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((fixedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1))));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_9_i_i_reg_420, tmp_9_i_i_reg_420_pp0_iter1_reg, ap_enable_reg_pp0_iter0, fixedData_V_data1_status, processedData_V_data1_status, Vj_idx_V_data_V_00_status)
    begin
                ap_block_pp0_stage1_01001 <= (((ap_const_logic_0 = Vj_idx_V_data_V_00_status) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_9_i_i_reg_420 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((processedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((fixedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)))));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_9_i_i_reg_420, tmp_9_i_i_reg_420_pp0_iter1_reg, ap_enable_reg_pp0_iter0, fixedData_V_data1_status, processedData_V_data1_status, Vj_idx_V_data_V_00_status)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_const_logic_0 = Vj_idx_V_data_V_00_status) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_9_i_i_reg_420 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((processedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((fixedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)))));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_9_i_i_reg_420, tmp_9_i_i_reg_420_pp0_iter1_reg, ap_enable_reg_pp0_iter0, fixedData_V_data1_status, processedData_V_data1_status, Vj_idx_V_data_V_00_status)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_const_logic_0 = Vj_idx_V_data_V_00_status) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_9_i_i_reg_420 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((processedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((fixedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)))));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_9_i_i_reg_420_pp0_iter1_reg, fixedData_V_data1_status, processedData_V_data1_status)
    begin
                ap_block_pp0_stage2_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((processedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((fixedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_9_i_i_reg_420_pp0_iter1_reg, fixedData_V_data1_status, processedData_V_data1_status)
    begin
                ap_block_pp0_stage2_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((processedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((fixedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_9_i_i_reg_420_pp0_iter1_reg, fixedData_V_data1_status, processedData_V_data1_status)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((processedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((fixedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1))));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_01001_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_9_i_i_reg_420_pp0_iter1_reg, fixedData_V_data1_status, processedData_V_data1_status)
    begin
                ap_block_pp0_stage3_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((processedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((fixedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_9_i_i_reg_420_pp0_iter1_reg, fixedData_V_data1_status, processedData_V_data1_status)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((processedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((fixedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_9_i_i_reg_420_pp0_iter1_reg, fixedData_V_data1_status, processedData_V_data1_status)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((processedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((fixedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, simConfig_rowsToSimulate_V_empty_n, simConfig_BLOCK_NUMBERS_V_empty_n)
    begin
                ap_block_state1 <= ((simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage1_iter1_assign_proc : process(tmp_9_i_i_reg_420_pp0_iter1_reg, fixedData_V_data1_status, processedData_V_data1_status)
    begin
                ap_block_state11_pp0_stage1_iter1 <= (((processedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((fixedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)));
    end process;


    ap_block_state12_pp0_stage2_iter1_assign_proc : process(tmp_9_i_i_reg_420_pp0_iter1_reg, fixedData_V_data1_status, processedData_V_data1_status)
    begin
                ap_block_state12_pp0_stage2_iter1 <= (((processedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((fixedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)));
    end process;


    ap_block_state13_pp0_stage3_iter1_assign_proc : process(tmp_9_i_i_reg_420_pp0_iter1_reg, fixedData_V_data1_status, processedData_V_data1_status)
    begin
                ap_block_state13_pp0_stage3_iter1 <= (((processedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((fixedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)));
    end process;


    ap_block_state14_pp0_stage0_iter2_assign_proc : process(tmp_9_i_i_reg_420_pp0_iter1_reg, fixedData_V_data1_status, processedData_V_data1_status)
    begin
                ap_block_state14_pp0_stage0_iter2 <= (((processedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((fixedData_V_data1_status = ap_const_logic_0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)));
    end process;


    ap_block_state2_assign_proc : process(tmp_3_i_i_fu_252_p2, Vi_idx_V_data_V_00_status)
    begin
                ap_block_state2 <= ((ap_const_logic_0 = Vi_idx_V_data_V_00_status) and (tmp_3_i_i_fu_252_p2 = ap_const_lv1_1));
    end process;

        ap_block_state6_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage1_iter0_assign_proc : process(tmp_9_i_i_reg_420, Vj_idx_V_data_V_00_status)
    begin
                ap_block_state7_pp0_stage1_iter0 <= ((ap_const_logic_0 = Vj_idx_V_data_V_00_status) and (tmp_9_i_i_reg_420 = ap_const_lv1_1));
    end process;

        ap_block_state8_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_402_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_01001)
    begin
                ap_condition_402 <= ((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_407_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_01001)
    begin
                ap_condition_407 <= ((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_412_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_01001)
    begin
                ap_condition_412 <= ((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_417_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_01001)
    begin
                ap_condition_417 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state6_assign_proc : process(tmp_9_i_i_fu_299_p2)
    begin
        if ((tmp_9_i_i_fu_299_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, tmp_3_i_i_fu_252_p2, Vi_idx_V_data_V_00_status)
    begin
        if ((not(((ap_const_logic_0 = Vi_idx_V_data_V_00_status) and (tmp_3_i_i_fu_252_p2 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_3_i_i_fu_252_p2 = ap_const_lv1_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_t_V_phi_fu_241_p4_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_9_i_i_reg_420, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, t_V_reg_237, j_V_reg_424)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_9_i_i_reg_420 = ap_const_lv1_1))) then 
            ap_phi_mux_t_V_phi_fu_241_p4 <= j_V_reg_424;
        else 
            ap_phi_mux_t_V_phi_fu_241_p4 <= t_V_reg_237;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, tmp_3_i_i_fu_252_p2, Vi_idx_V_data_V_00_status)
    begin
        if ((not(((ap_const_logic_0 = Vi_idx_V_data_V_00_status) and (tmp_3_i_i_fu_252_p2 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_3_i_i_fu_252_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    fixedData_V_data1_status <= (fixedData_V_tlast_V_full_n and fixedData_V_data_full_n);

    fixedData_V_data1_update_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, tmp_9_i_i_reg_420_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)))) then 
            fixedData_V_data1_update <= ap_const_logic_1;
        else 
            fixedData_V_data1_update <= ap_const_logic_0;
        end if; 
    end process;


    fixedData_V_data_blk_n_assign_proc : process(fixedData_V_data_full_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1, tmp_9_i_i_reg_420_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)))) then 
            fixedData_V_data_blk_n <= fixedData_V_data_full_n;
        else 
            fixedData_V_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fixedData_V_data_din_assign_proc : process(tmp_9_i_i_reg_420_pp0_iter1_reg, tmp_data_reg_390, tmp_data_1_reg_395, tmp_data_2_reg_410, tmp_data_3_reg_415, ap_condition_402, ap_condition_407, ap_condition_412, ap_condition_417)
    begin
        if ((tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) then
            if ((ap_const_boolean_1 = ap_condition_417)) then 
                fixedData_V_data_din <= tmp_data_3_reg_415;
            elsif ((ap_const_boolean_1 = ap_condition_412)) then 
                fixedData_V_data_din <= tmp_data_2_reg_410;
            elsif ((ap_const_boolean_1 = ap_condition_407)) then 
                fixedData_V_data_din <= tmp_data_1_reg_395;
            elsif ((ap_const_boolean_1 = ap_condition_402)) then 
                fixedData_V_data_din <= tmp_data_reg_390;
            else 
                fixedData_V_data_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            fixedData_V_data_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    fixedData_V_data_write <= fixedData_V_data1_update;

    fixedData_V_tlast_V_blk_n_assign_proc : process(fixedData_V_tlast_V_full_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1, tmp_9_i_i_reg_420_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)))) then 
            fixedData_V_tlast_V_blk_n <= fixedData_V_tlast_V_full_n;
        else 
            fixedData_V_tlast_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fixedData_V_tlast_V_din <= ap_const_lv1_0;
    fixedData_V_tlast_V_write <= fixedData_V_data1_update;
    i_V_fu_257_p2 <= std_logic_vector(unsigned(t_V_1_reg_226) + unsigned(ap_const_lv12_1));
    j_V_fu_304_p2 <= std_logic_vector(unsigned(ap_phi_mux_t_V_phi_fu_241_p4) + unsigned(ap_const_lv26_1));
    processedData_V_data1_status <= (processedData_V_data_full_n and processedData_V_data_3_full_n and processedData_V_data_2_full_n and processedData_V_data_1_full_n);

    processedData_V_data1_update_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, tmp_9_i_i_reg_420_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)))) then 
            processedData_V_data1_update <= ap_const_logic_1;
        else 
            processedData_V_data1_update <= ap_const_logic_0;
        end if; 
    end process;


    processedData_V_data_1_blk_n_assign_proc : process(processedData_V_data_1_full_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1, tmp_9_i_i_reg_420_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)))) then 
            processedData_V_data_1_blk_n <= processedData_V_data_1_full_n;
        else 
            processedData_V_data_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    processedData_V_data_1_din_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, tmp_9_i_i_reg_420_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, tmp_data_1_12_reg_464, tmp_data_1_12_reg_464_pp0_iter1_reg, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001, ap_block_pp0_stage3_01001, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1))) then 
            processedData_V_data_1_din <= tmp_data_1_12_reg_464_pp0_iter1_reg;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)))) then 
            processedData_V_data_1_din <= tmp_data_1_12_reg_464;
        else 
            processedData_V_data_1_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    processedData_V_data_1_write <= processedData_V_data1_update;

    processedData_V_data_2_blk_n_assign_proc : process(processedData_V_data_2_full_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1, tmp_9_i_i_reg_420_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)))) then 
            processedData_V_data_2_blk_n <= processedData_V_data_2_full_n;
        else 
            processedData_V_data_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    processedData_V_data_2_din <= tmp_data_2_13_reg_479;
    processedData_V_data_2_write <= processedData_V_data1_update;

    processedData_V_data_3_blk_n_assign_proc : process(processedData_V_data_3_full_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1, tmp_9_i_i_reg_420_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)))) then 
            processedData_V_data_3_blk_n <= processedData_V_data_3_full_n;
        else 
            processedData_V_data_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    processedData_V_data_3_din <= tmp_data_3_14_reg_484;
    processedData_V_data_3_write <= processedData_V_data1_update;

    processedData_V_data_blk_n_assign_proc : process(processedData_V_data_full_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1, tmp_9_i_i_reg_420_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)))) then 
            processedData_V_data_blk_n <= processedData_V_data_full_n;
        else 
            processedData_V_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    processedData_V_data_din_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, tmp_9_i_i_reg_420_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, tmp_data_0_reg_459, tmp_data_0_reg_459_pp0_iter1_reg, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001, ap_block_pp0_stage3_01001, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1))) then 
            processedData_V_data_din <= tmp_data_0_reg_459_pp0_iter1_reg;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_9_i_i_reg_420_pp0_iter1_reg = ap_const_lv1_1)))) then 
            processedData_V_data_din <= tmp_data_0_reg_459;
        else 
            processedData_V_data_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    processedData_V_data_write <= processedData_V_data1_update;

    simConfig_BLOCK_NUMBERS_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, simConfig_BLOCK_NUMBERS_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            simConfig_BLOCK_NUMBERS_V_blk_n <= simConfig_BLOCK_NUMBERS_V_empty_n;
        else 
            simConfig_BLOCK_NUMBERS_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    simConfig_BLOCK_NUMBERS_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, simConfig_rowsToSimulate_V_empty_n, simConfig_BLOCK_NUMBERS_V_empty_n)
    begin
        if ((not(((simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            simConfig_BLOCK_NUMBERS_V_read <= ap_const_logic_1;
        else 
            simConfig_BLOCK_NUMBERS_V_read <= ap_const_logic_0;
        end if; 
    end process;


    simConfig_rowsToSimulate_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, simConfig_rowsToSimulate_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            simConfig_rowsToSimulate_V_blk_n <= simConfig_rowsToSimulate_V_empty_n;
        else 
            simConfig_rowsToSimulate_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    simConfig_rowsToSimulate_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, simConfig_rowsToSimulate_V_empty_n, simConfig_BLOCK_NUMBERS_V_empty_n)
    begin
        if ((not(((simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            simConfig_rowsToSimulate_V_read <= ap_const_logic_1;
        else 
            simConfig_rowsToSimulate_V_read <= ap_const_logic_0;
        end if; 
    end process;

    t_V_1_cast_fu_248_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_1_reg_226),27));
    t_V_cast_fu_295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_t_V_phi_fu_241_p4),27));
    tmp_13_1_i_i_fu_330_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_1_V_1_reg_434),64));
    tmp_13_2_i_i_fu_334_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_2_V_1_reg_439),64));
    tmp_13_3_i_i_fu_338_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_3_V_1_reg_444),64));
    tmp_13_i_i_fu_326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_0_V_1_reg_429),64));
    tmp_3_i_i_fu_252_p2 <= "1" when (signed(t_V_1_cast_fu_248_p1) < signed(simConfig_rowsToSimu_reg_347)) else "0";
    tmp_5_i_i_fu_279_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_0_V_reg_360),64));
    tmp_6_i_i_fu_283_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_1_V_reg_365),64));
    tmp_7_i_i_fu_287_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_2_V_reg_370),64));
    tmp_8_i_i_fu_291_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_3_V_reg_375),64));
    tmp_9_i_i_fu_299_p2 <= "1" when (signed(t_V_cast_fu_295_p1) < signed(simConfig_BLOCK_NUMB_reg_342)) else "0";

    voltagesBackup_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_enable_reg_pp0_iter0, ap_CS_fsm_state3, ap_CS_fsm_state4, tmp_5_i_i_fu_279_p1, tmp_7_i_i_fu_287_p1, tmp_13_i_i_fu_326_p1, tmp_13_2_i_i_fu_334_p1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            voltagesBackup_address0 <= tmp_13_2_i_i_fu_334_p1(14 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            voltagesBackup_address0 <= tmp_13_i_i_fu_326_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            voltagesBackup_address0 <= tmp_7_i_i_fu_287_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            voltagesBackup_address0 <= tmp_5_i_i_fu_279_p1(14 - 1 downto 0);
        else 
            voltagesBackup_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    voltagesBackup_address1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_enable_reg_pp0_iter0, ap_CS_fsm_state3, ap_CS_fsm_state4, tmp_6_i_i_fu_283_p1, tmp_8_i_i_fu_291_p1, tmp_13_1_i_i_fu_330_p1, tmp_13_3_i_i_fu_338_p1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            voltagesBackup_address1 <= tmp_13_3_i_i_fu_338_p1(14 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            voltagesBackup_address1 <= tmp_13_1_i_i_fu_330_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            voltagesBackup_address1 <= tmp_8_i_i_fu_291_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            voltagesBackup_address1 <= tmp_6_i_i_fu_283_p1(14 - 1 downto 0);
        else 
            voltagesBackup_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    voltagesBackup_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            voltagesBackup_ce0 <= ap_const_logic_1;
        else 
            voltagesBackup_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    voltagesBackup_ce1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            voltagesBackup_ce1 <= ap_const_logic_1;
        else 
            voltagesBackup_ce1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
