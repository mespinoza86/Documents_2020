// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _readVoltages_HH_
#define _readVoltages_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct readVoltages : public sc_module {
    // Port declarations 30
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > voltagesBackup_address0;
    sc_out< sc_logic > voltagesBackup_ce0;
    sc_out< sc_logic > voltagesBackup_we0;
    sc_out< sc_lv<32> > voltagesBackup_d0;
    sc_out< sc_lv<14> > voltagesBackup_address1;
    sc_out< sc_logic > voltagesBackup_ce1;
    sc_out< sc_logic > voltagesBackup_we1;
    sc_out< sc_lv<32> > voltagesBackup_d1;
    sc_in< sc_lv<32> > V_SIZE_dout;
    sc_in< sc_logic > V_SIZE_empty_n;
    sc_out< sc_logic > V_SIZE_read;
    sc_in< sc_lv<32> > V_data_V_data_0_dout;
    sc_in< sc_logic > V_data_V_data_0_empty_n;
    sc_out< sc_logic > V_data_V_data_0_read;
    sc_in< sc_lv<32> > V_data_V_data_1_dout;
    sc_in< sc_logic > V_data_V_data_1_empty_n;
    sc_out< sc_logic > V_data_V_data_1_read;
    sc_in< sc_lv<32> > V_data_V_data_2_dout;
    sc_in< sc_logic > V_data_V_data_2_empty_n;
    sc_out< sc_logic > V_data_V_data_2_read;
    sc_in< sc_lv<32> > V_data_V_data_3_dout;
    sc_in< sc_logic > V_data_V_data_3_empty_n;
    sc_out< sc_logic > V_data_V_data_3_read;


    // Module declarations
    readVoltages(sc_module_name name);
    SC_HAS_PROCESS(readVoltages);

    ~readVoltages();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > V_SIZE_blk_n;
    sc_signal< sc_logic > V_data_V_data_0_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_11_i_i_fu_139_p2;
    sc_signal< sc_logic > V_data_V_data_1_blk_n;
    sc_signal< sc_logic > V_data_V_data_2_blk_n;
    sc_signal< sc_logic > V_data_V_data_3_blk_n;
    sc_signal< sc_lv<32> > V_SIZE_read_reg_208;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > tmp_data_0_reg_216;
    sc_signal< sc_logic > V_data_V_data_00_status;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<32> > tmp_data_1_reg_221;
    sc_signal< sc_lv<32> > tmp_data_2_reg_226;
    sc_signal< sc_lv<32> > tmp_data_3_reg_231;
    sc_signal< sc_lv<27> > i_V_fu_202_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<27> > p_i_i_reg_123;
    sc_signal< sc_lv<64> > tmp_19_i_i_fu_164_p1;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > tmp_19_1_i_i_fu_175_p1;
    sc_signal< sc_lv<64> > tmp_19_2_i_i_fu_186_p1;
    sc_signal< sc_lv<64> > tmp_19_3_i_i_fu_197_p1;
    sc_signal< sc_logic > V_data_V_data_00_update;
    sc_signal< sc_lv<32> > tmp_i_i_fu_135_p1;
    sc_signal< sc_lv<28> > lhs_V_fu_160_p1;
    sc_signal< sc_lv<28> > ret_V_i_i_fu_169_p2;
    sc_signal< sc_lv<27> > ret_V_1_i_i_fu_180_p2;
    sc_signal< sc_lv<27> > ret_V_2_i_i_fu_191_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<27> ap_const_lv27_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<28> ap_const_lv28_1;
    static const sc_lv<27> ap_const_lv27_2;
    static const sc_lv<27> ap_const_lv27_3;
    static const sc_lv<27> ap_const_lv27_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_V_SIZE_blk_n();
    void thread_V_SIZE_read();
    void thread_V_data_V_data_00_status();
    void thread_V_data_V_data_00_update();
    void thread_V_data_V_data_0_blk_n();
    void thread_V_data_V_data_0_read();
    void thread_V_data_V_data_1_blk_n();
    void thread_V_data_V_data_1_read();
    void thread_V_data_V_data_2_blk_n();
    void thread_V_data_V_data_2_read();
    void thread_V_data_V_data_3_blk_n();
    void thread_V_data_V_data_3_read();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_state1();
    void thread_ap_block_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_V_fu_202_p2();
    void thread_lhs_V_fu_160_p1();
    void thread_ret_V_1_i_i_fu_180_p2();
    void thread_ret_V_2_i_i_fu_191_p2();
    void thread_ret_V_i_i_fu_169_p2();
    void thread_tmp_11_i_i_fu_139_p2();
    void thread_tmp_19_1_i_i_fu_175_p1();
    void thread_tmp_19_2_i_i_fu_186_p1();
    void thread_tmp_19_3_i_i_fu_197_p1();
    void thread_tmp_19_i_i_fu_164_p1();
    void thread_tmp_i_i_fu_135_p1();
    void thread_voltagesBackup_address0();
    void thread_voltagesBackup_address1();
    void thread_voltagesBackup_ce0();
    void thread_voltagesBackup_ce1();
    void thread_voltagesBackup_d0();
    void thread_voltagesBackup_d1();
    void thread_voltagesBackup_we0();
    void thread_voltagesBackup_we1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
