// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "blockControl.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic blockControl::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic blockControl::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> blockControl::ap_ST_fsm_state1 = "1";
const sc_lv<4> blockControl::ap_ST_fsm_state2 = "10";
const sc_lv<4> blockControl::ap_ST_fsm_state3 = "100";
const sc_lv<4> blockControl::ap_ST_fsm_state4 = "1000";
const sc_lv<32> blockControl::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> blockControl::ap_const_lv32_2 = "10";
const sc_lv<32> blockControl::ap_const_lv32_3 = "11";
const sc_lv<32> blockControl::ap_const_lv32_1 = "1";
const bool blockControl::ap_const_boolean_1 = true;

blockControl::blockControl(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_getConductances_fu_70 = new getConductances("grp_getConductances_fu_70");
    grp_getConductances_fu_70->ap_clk(ap_clk);
    grp_getConductances_fu_70->ap_rst(ap_rst);
    grp_getConductances_fu_70->ap_start(grp_getConductances_fu_70_ap_start);
    grp_getConductances_fu_70->ap_done(grp_getConductances_fu_70_ap_done);
    grp_getConductances_fu_70->ap_idle(grp_getConductances_fu_70_ap_idle);
    grp_getConductances_fu_70->ap_ready(grp_getConductances_fu_70_ap_ready);
    grp_getConductances_fu_70->input_V_data_TDATA(input_V_data_TDATA);
    grp_getConductances_fu_70->input_V_data_TVALID(input_V_data_TVALID);
    grp_getConductances_fu_70->input_V_data_TREADY(grp_getConductances_fu_70_input_V_data_TREADY);
    grp_getConductances_fu_70->simConfig_rowsToSimulate_V_read(simConfig_rowsToSimu_reg_107);
    grp_getConductances_fu_70->simConfig_BLOCK_NUMBERS_V_read(simConfig_BLOCK_NUMB_reg_112);
    grp_getConductances_fu_70->C_data_V_data_0_din(grp_getConductances_fu_70_C_data_V_data_0_din);
    grp_getConductances_fu_70->C_data_V_data_0_full_n(C_data_V_data_0_full_n);
    grp_getConductances_fu_70->C_data_V_data_0_write(grp_getConductances_fu_70_C_data_V_data_0_write);
    grp_getConductances_fu_70->C_data_V_data_1_din(grp_getConductances_fu_70_C_data_V_data_1_din);
    grp_getConductances_fu_70->C_data_V_data_1_full_n(C_data_V_data_1_full_n);
    grp_getConductances_fu_70->C_data_V_data_1_write(grp_getConductances_fu_70_C_data_V_data_1_write);
    grp_getConductances_fu_70->C_data_V_data_2_din(grp_getConductances_fu_70_C_data_V_data_2_din);
    grp_getConductances_fu_70->C_data_V_data_2_full_n(C_data_V_data_2_full_n);
    grp_getConductances_fu_70->C_data_V_data_2_write(grp_getConductances_fu_70_C_data_V_data_2_write);
    grp_getConductances_fu_70->C_data_V_data_3_din(grp_getConductances_fu_70_C_data_V_data_3_din);
    grp_getConductances_fu_70->C_data_V_data_3_full_n(C_data_V_data_3_full_n);
    grp_getConductances_fu_70->C_data_V_data_3_write(grp_getConductances_fu_70_C_data_V_data_3_write);
    grp_getVoltages_fu_86 = new getVoltages("grp_getVoltages_fu_86");
    grp_getVoltages_fu_86->ap_clk(ap_clk);
    grp_getVoltages_fu_86->ap_rst(ap_rst);
    grp_getVoltages_fu_86->ap_start(grp_getVoltages_fu_86_ap_start);
    grp_getVoltages_fu_86->ap_done(grp_getVoltages_fu_86_ap_done);
    grp_getVoltages_fu_86->ap_idle(grp_getVoltages_fu_86_ap_idle);
    grp_getVoltages_fu_86->ap_ready(grp_getVoltages_fu_86_ap_ready);
    grp_getVoltages_fu_86->input_V_data_TDATA(input_V_data_TDATA);
    grp_getVoltages_fu_86->input_V_data_TVALID(input_V_data_TVALID);
    grp_getVoltages_fu_86->input_V_data_TREADY(grp_getVoltages_fu_86_input_V_data_TREADY);
    grp_getVoltages_fu_86->V_SIZE(V_SIZE_read_reg_102);
    grp_getVoltages_fu_86->V_data_V_data_0_din(grp_getVoltages_fu_86_V_data_V_data_0_din);
    grp_getVoltages_fu_86->V_data_V_data_0_full_n(V_data_V_data_0_full_n);
    grp_getVoltages_fu_86->V_data_V_data_0_write(grp_getVoltages_fu_86_V_data_V_data_0_write);
    grp_getVoltages_fu_86->V_data_V_data_1_din(grp_getVoltages_fu_86_V_data_V_data_1_din);
    grp_getVoltages_fu_86->V_data_V_data_1_full_n(V_data_V_data_1_full_n);
    grp_getVoltages_fu_86->V_data_V_data_1_write(grp_getVoltages_fu_86_V_data_V_data_1_write);
    grp_getVoltages_fu_86->V_data_V_data_2_din(grp_getVoltages_fu_86_V_data_V_data_2_din);
    grp_getVoltages_fu_86->V_data_V_data_2_full_n(V_data_V_data_2_full_n);
    grp_getVoltages_fu_86->V_data_V_data_2_write(grp_getVoltages_fu_86_V_data_V_data_2_write);
    grp_getVoltages_fu_86->V_data_V_data_3_din(grp_getVoltages_fu_86_V_data_V_data_3_din);
    grp_getVoltages_fu_86->V_data_V_data_3_full_n(V_data_V_data_3_full_n);
    grp_getVoltages_fu_86->V_data_V_data_3_write(grp_getVoltages_fu_86_V_data_V_data_3_write);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_C_data_V_data_0_din);
    sensitive << ( grp_getConductances_fu_70_C_data_V_data_0_din );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_C_data_V_data_0_write);
    sensitive << ( grp_getConductances_fu_70_C_data_V_data_0_write );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_C_data_V_data_1_din);
    sensitive << ( grp_getConductances_fu_70_C_data_V_data_1_din );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_C_data_V_data_1_write);
    sensitive << ( grp_getConductances_fu_70_C_data_V_data_1_write );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_C_data_V_data_2_din);
    sensitive << ( grp_getConductances_fu_70_C_data_V_data_2_din );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_C_data_V_data_2_write);
    sensitive << ( grp_getConductances_fu_70_C_data_V_data_2_write );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_C_data_V_data_3_din);
    sensitive << ( grp_getConductances_fu_70_C_data_V_data_3_din );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_C_data_V_data_3_write);
    sensitive << ( grp_getConductances_fu_70_C_data_V_data_3_write );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_V_SIZE_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( V_SIZE_empty_n );

    SC_METHOD(thread_V_SIZE_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_rowsToSimulate_V_empty_n );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );
    sensitive << ( V_SIZE_empty_n );

    SC_METHOD(thread_V_data_V_data_0_din);
    sensitive << ( grp_getVoltages_fu_86_V_data_V_data_0_din );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_V_data_V_data_0_write);
    sensitive << ( grp_getVoltages_fu_86_V_data_V_data_0_write );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_V_data_V_data_1_din);
    sensitive << ( grp_getVoltages_fu_86_V_data_V_data_1_din );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_V_data_V_data_1_write);
    sensitive << ( grp_getVoltages_fu_86_V_data_V_data_1_write );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_V_data_V_data_2_din);
    sensitive << ( grp_getVoltages_fu_86_V_data_V_data_2_din );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_V_data_V_data_2_write);
    sensitive << ( grp_getVoltages_fu_86_V_data_V_data_2_write );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_V_data_V_data_3_din);
    sensitive << ( grp_getVoltages_fu_86_V_data_V_data_3_din );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_V_data_V_data_3_write);
    sensitive << ( grp_getVoltages_fu_86_V_data_V_data_3_write );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( simConfig_rowsToSimulate_V_empty_n );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );
    sensitive << ( V_SIZE_empty_n );

    SC_METHOD(thread_ap_block_state1_ignore_call22);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( simConfig_rowsToSimulate_V_empty_n );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );
    sensitive << ( V_SIZE_empty_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( grp_getConductances_fu_70_ap_done );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_grp_getConductances_fu_70_ap_start);
    sensitive << ( grp_getConductances_fu_70_ap_start_reg );

    SC_METHOD(thread_grp_getVoltages_fu_86_ap_start);
    sensitive << ( grp_getVoltages_fu_86_ap_start_reg );

    SC_METHOD(thread_input_V_data_TREADY);
    sensitive << ( grp_getConductances_fu_70_input_V_data_TREADY );
    sensitive << ( grp_getVoltages_fu_86_input_V_data_TREADY );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( grp_getConductances_fu_70_ap_done );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_simConfig_BLOCK_NUMBERS_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );

    SC_METHOD(thread_simConfig_BLOCK_NUMBERS_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_rowsToSimulate_V_empty_n );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );
    sensitive << ( V_SIZE_empty_n );

    SC_METHOD(thread_simConfig_rowsToSimulate_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_rowsToSimulate_V_empty_n );

    SC_METHOD(thread_simConfig_rowsToSimulate_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_rowsToSimulate_V_empty_n );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );
    sensitive << ( V_SIZE_empty_n );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_rowsToSimulate_V_empty_n );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );
    sensitive << ( V_SIZE_empty_n );
    sensitive << ( grp_getConductances_fu_70_ap_done );
    sensitive << ( grp_getVoltages_fu_86_ap_done );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    grp_getConductances_fu_70_ap_start_reg = SC_LOGIC_0;
    grp_getVoltages_fu_86_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "blockControl_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, input_V_data_TDATA, "(port)input_V_data_TDATA");
    sc_trace(mVcdFile, input_V_data_TVALID, "(port)input_V_data_TVALID");
    sc_trace(mVcdFile, input_V_data_TREADY, "(port)input_V_data_TREADY");
    sc_trace(mVcdFile, simConfig_rowsToSimulate_V_dout, "(port)simConfig_rowsToSimulate_V_dout");
    sc_trace(mVcdFile, simConfig_rowsToSimulate_V_empty_n, "(port)simConfig_rowsToSimulate_V_empty_n");
    sc_trace(mVcdFile, simConfig_rowsToSimulate_V_read, "(port)simConfig_rowsToSimulate_V_read");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_dout, "(port)simConfig_BLOCK_NUMBERS_V_dout");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_empty_n, "(port)simConfig_BLOCK_NUMBERS_V_empty_n");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_read, "(port)simConfig_BLOCK_NUMBERS_V_read");
    sc_trace(mVcdFile, V_SIZE_dout, "(port)V_SIZE_dout");
    sc_trace(mVcdFile, V_SIZE_empty_n, "(port)V_SIZE_empty_n");
    sc_trace(mVcdFile, V_SIZE_read, "(port)V_SIZE_read");
    sc_trace(mVcdFile, V_data_V_data_0_din, "(port)V_data_V_data_0_din");
    sc_trace(mVcdFile, V_data_V_data_0_full_n, "(port)V_data_V_data_0_full_n");
    sc_trace(mVcdFile, V_data_V_data_0_write, "(port)V_data_V_data_0_write");
    sc_trace(mVcdFile, V_data_V_data_1_din, "(port)V_data_V_data_1_din");
    sc_trace(mVcdFile, V_data_V_data_1_full_n, "(port)V_data_V_data_1_full_n");
    sc_trace(mVcdFile, V_data_V_data_1_write, "(port)V_data_V_data_1_write");
    sc_trace(mVcdFile, V_data_V_data_2_din, "(port)V_data_V_data_2_din");
    sc_trace(mVcdFile, V_data_V_data_2_full_n, "(port)V_data_V_data_2_full_n");
    sc_trace(mVcdFile, V_data_V_data_2_write, "(port)V_data_V_data_2_write");
    sc_trace(mVcdFile, V_data_V_data_3_din, "(port)V_data_V_data_3_din");
    sc_trace(mVcdFile, V_data_V_data_3_full_n, "(port)V_data_V_data_3_full_n");
    sc_trace(mVcdFile, V_data_V_data_3_write, "(port)V_data_V_data_3_write");
    sc_trace(mVcdFile, C_data_V_data_0_din, "(port)C_data_V_data_0_din");
    sc_trace(mVcdFile, C_data_V_data_0_full_n, "(port)C_data_V_data_0_full_n");
    sc_trace(mVcdFile, C_data_V_data_0_write, "(port)C_data_V_data_0_write");
    sc_trace(mVcdFile, C_data_V_data_1_din, "(port)C_data_V_data_1_din");
    sc_trace(mVcdFile, C_data_V_data_1_full_n, "(port)C_data_V_data_1_full_n");
    sc_trace(mVcdFile, C_data_V_data_1_write, "(port)C_data_V_data_1_write");
    sc_trace(mVcdFile, C_data_V_data_2_din, "(port)C_data_V_data_2_din");
    sc_trace(mVcdFile, C_data_V_data_2_full_n, "(port)C_data_V_data_2_full_n");
    sc_trace(mVcdFile, C_data_V_data_2_write, "(port)C_data_V_data_2_write");
    sc_trace(mVcdFile, C_data_V_data_3_din, "(port)C_data_V_data_3_din");
    sc_trace(mVcdFile, C_data_V_data_3_full_n, "(port)C_data_V_data_3_full_n");
    sc_trace(mVcdFile, C_data_V_data_3_write, "(port)C_data_V_data_3_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, simConfig_rowsToSimulate_V_blk_n, "simConfig_rowsToSimulate_V_blk_n");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_blk_n, "simConfig_BLOCK_NUMBERS_V_blk_n");
    sc_trace(mVcdFile, V_SIZE_blk_n, "V_SIZE_blk_n");
    sc_trace(mVcdFile, V_SIZE_read_reg_102, "V_SIZE_read_reg_102");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, simConfig_rowsToSimu_reg_107, "simConfig_rowsToSimu_reg_107");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMB_reg_112, "simConfig_BLOCK_NUMB_reg_112");
    sc_trace(mVcdFile, grp_getConductances_fu_70_ap_start, "grp_getConductances_fu_70_ap_start");
    sc_trace(mVcdFile, grp_getConductances_fu_70_ap_done, "grp_getConductances_fu_70_ap_done");
    sc_trace(mVcdFile, grp_getConductances_fu_70_ap_idle, "grp_getConductances_fu_70_ap_idle");
    sc_trace(mVcdFile, grp_getConductances_fu_70_ap_ready, "grp_getConductances_fu_70_ap_ready");
    sc_trace(mVcdFile, grp_getConductances_fu_70_input_V_data_TREADY, "grp_getConductances_fu_70_input_V_data_TREADY");
    sc_trace(mVcdFile, grp_getConductances_fu_70_C_data_V_data_0_din, "grp_getConductances_fu_70_C_data_V_data_0_din");
    sc_trace(mVcdFile, grp_getConductances_fu_70_C_data_V_data_0_write, "grp_getConductances_fu_70_C_data_V_data_0_write");
    sc_trace(mVcdFile, grp_getConductances_fu_70_C_data_V_data_1_din, "grp_getConductances_fu_70_C_data_V_data_1_din");
    sc_trace(mVcdFile, grp_getConductances_fu_70_C_data_V_data_1_write, "grp_getConductances_fu_70_C_data_V_data_1_write");
    sc_trace(mVcdFile, grp_getConductances_fu_70_C_data_V_data_2_din, "grp_getConductances_fu_70_C_data_V_data_2_din");
    sc_trace(mVcdFile, grp_getConductances_fu_70_C_data_V_data_2_write, "grp_getConductances_fu_70_C_data_V_data_2_write");
    sc_trace(mVcdFile, grp_getConductances_fu_70_C_data_V_data_3_din, "grp_getConductances_fu_70_C_data_V_data_3_din");
    sc_trace(mVcdFile, grp_getConductances_fu_70_C_data_V_data_3_write, "grp_getConductances_fu_70_C_data_V_data_3_write");
    sc_trace(mVcdFile, grp_getVoltages_fu_86_ap_start, "grp_getVoltages_fu_86_ap_start");
    sc_trace(mVcdFile, grp_getVoltages_fu_86_ap_done, "grp_getVoltages_fu_86_ap_done");
    sc_trace(mVcdFile, grp_getVoltages_fu_86_ap_idle, "grp_getVoltages_fu_86_ap_idle");
    sc_trace(mVcdFile, grp_getVoltages_fu_86_ap_ready, "grp_getVoltages_fu_86_ap_ready");
    sc_trace(mVcdFile, grp_getVoltages_fu_86_input_V_data_TREADY, "grp_getVoltages_fu_86_input_V_data_TREADY");
    sc_trace(mVcdFile, grp_getVoltages_fu_86_V_data_V_data_0_din, "grp_getVoltages_fu_86_V_data_V_data_0_din");
    sc_trace(mVcdFile, grp_getVoltages_fu_86_V_data_V_data_0_write, "grp_getVoltages_fu_86_V_data_V_data_0_write");
    sc_trace(mVcdFile, grp_getVoltages_fu_86_V_data_V_data_1_din, "grp_getVoltages_fu_86_V_data_V_data_1_din");
    sc_trace(mVcdFile, grp_getVoltages_fu_86_V_data_V_data_1_write, "grp_getVoltages_fu_86_V_data_V_data_1_write");
    sc_trace(mVcdFile, grp_getVoltages_fu_86_V_data_V_data_2_din, "grp_getVoltages_fu_86_V_data_V_data_2_din");
    sc_trace(mVcdFile, grp_getVoltages_fu_86_V_data_V_data_2_write, "grp_getVoltages_fu_86_V_data_V_data_2_write");
    sc_trace(mVcdFile, grp_getVoltages_fu_86_V_data_V_data_3_din, "grp_getVoltages_fu_86_V_data_V_data_3_din");
    sc_trace(mVcdFile, grp_getVoltages_fu_86_V_data_V_data_3_write, "grp_getVoltages_fu_86_V_data_V_data_3_write");
    sc_trace(mVcdFile, grp_getConductances_fu_70_ap_start_reg, "grp_getConductances_fu_70_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_getVoltages_fu_86_ap_start_reg, "grp_getVoltages_fu_86_ap_start_reg");
    sc_trace(mVcdFile, ap_block_state1_ignore_call22, "ap_block_state1_ignore_call22");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

blockControl::~blockControl() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_getConductances_fu_70;
    delete grp_getVoltages_fu_86;
}

void blockControl::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(grp_getConductances_fu_70_ap_done.read(), ap_const_logic_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_getConductances_fu_70_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            grp_getConductances_fu_70_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_getConductances_fu_70_ap_ready.read())) {
            grp_getConductances_fu_70_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_getVoltages_fu_86_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, V_SIZE_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowsToSimulate_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read())))) {
            grp_getVoltages_fu_86_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_getVoltages_fu_86_ap_ready.read())) {
            grp_getVoltages_fu_86_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, V_SIZE_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowsToSimulate_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read())))) {
        V_SIZE_read_reg_102 = V_SIZE_dout.read();
        simConfig_BLOCK_NUMB_reg_112 = simConfig_BLOCK_NUMBERS_V_dout.read();
        simConfig_rowsToSimu_reg_107 = simConfig_rowsToSimulate_V_dout.read();
    }
}

void blockControl::thread_C_data_V_data_0_din() {
    C_data_V_data_0_din = grp_getConductances_fu_70_C_data_V_data_0_din.read();
}

void blockControl::thread_C_data_V_data_0_write() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        C_data_V_data_0_write = grp_getConductances_fu_70_C_data_V_data_0_write.read();
    } else {
        C_data_V_data_0_write = ap_const_logic_0;
    }
}

void blockControl::thread_C_data_V_data_1_din() {
    C_data_V_data_1_din = grp_getConductances_fu_70_C_data_V_data_1_din.read();
}

void blockControl::thread_C_data_V_data_1_write() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        C_data_V_data_1_write = grp_getConductances_fu_70_C_data_V_data_1_write.read();
    } else {
        C_data_V_data_1_write = ap_const_logic_0;
    }
}

void blockControl::thread_C_data_V_data_2_din() {
    C_data_V_data_2_din = grp_getConductances_fu_70_C_data_V_data_2_din.read();
}

void blockControl::thread_C_data_V_data_2_write() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        C_data_V_data_2_write = grp_getConductances_fu_70_C_data_V_data_2_write.read();
    } else {
        C_data_V_data_2_write = ap_const_logic_0;
    }
}

void blockControl::thread_C_data_V_data_3_din() {
    C_data_V_data_3_din = grp_getConductances_fu_70_C_data_V_data_3_din.read();
}

void blockControl::thread_C_data_V_data_3_write() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        C_data_V_data_3_write = grp_getConductances_fu_70_C_data_V_data_3_write.read();
    } else {
        C_data_V_data_3_write = ap_const_logic_0;
    }
}

void blockControl::thread_V_SIZE_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        V_SIZE_blk_n = V_SIZE_empty_n.read();
    } else {
        V_SIZE_blk_n = ap_const_logic_1;
    }
}

void blockControl::thread_V_SIZE_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, V_SIZE_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowsToSimulate_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read())))) {
        V_SIZE_read = ap_const_logic_1;
    } else {
        V_SIZE_read = ap_const_logic_0;
    }
}

void blockControl::thread_V_data_V_data_0_din() {
    V_data_V_data_0_din = grp_getVoltages_fu_86_V_data_V_data_0_din.read();
}

void blockControl::thread_V_data_V_data_0_write() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        V_data_V_data_0_write = grp_getVoltages_fu_86_V_data_V_data_0_write.read();
    } else {
        V_data_V_data_0_write = ap_const_logic_0;
    }
}

void blockControl::thread_V_data_V_data_1_din() {
    V_data_V_data_1_din = grp_getVoltages_fu_86_V_data_V_data_1_din.read();
}

void blockControl::thread_V_data_V_data_1_write() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        V_data_V_data_1_write = grp_getVoltages_fu_86_V_data_V_data_1_write.read();
    } else {
        V_data_V_data_1_write = ap_const_logic_0;
    }
}

void blockControl::thread_V_data_V_data_2_din() {
    V_data_V_data_2_din = grp_getVoltages_fu_86_V_data_V_data_2_din.read();
}

void blockControl::thread_V_data_V_data_2_write() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        V_data_V_data_2_write = grp_getVoltages_fu_86_V_data_V_data_2_write.read();
    } else {
        V_data_V_data_2_write = ap_const_logic_0;
    }
}

void blockControl::thread_V_data_V_data_3_din() {
    V_data_V_data_3_din = grp_getVoltages_fu_86_V_data_V_data_3_din.read();
}

void blockControl::thread_V_data_V_data_3_write() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        V_data_V_data_3_write = grp_getVoltages_fu_86_V_data_V_data_3_write.read();
    } else {
        V_data_V_data_3_write = ap_const_logic_0;
    }
}

void blockControl::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void blockControl::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void blockControl::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void blockControl::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void blockControl::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, V_SIZE_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowsToSimulate_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read()));
}

void blockControl::thread_ap_block_state1_ignore_call22() {
    ap_block_state1_ignore_call22 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, V_SIZE_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowsToSimulate_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read()));
}

void blockControl::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(grp_getConductances_fu_70_ap_done.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void blockControl::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void blockControl::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void blockControl::thread_grp_getConductances_fu_70_ap_start() {
    grp_getConductances_fu_70_ap_start = grp_getConductances_fu_70_ap_start_reg.read();
}

void blockControl::thread_grp_getVoltages_fu_86_ap_start() {
    grp_getVoltages_fu_86_ap_start = grp_getVoltages_fu_86_ap_start_reg.read();
}

void blockControl::thread_input_V_data_TREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        input_V_data_TREADY = grp_getVoltages_fu_86_input_V_data_TREADY.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_V_data_TREADY = grp_getConductances_fu_70_input_V_data_TREADY.read();
    } else {
        input_V_data_TREADY = ap_const_logic_0;
    }
}

void blockControl::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(grp_getConductances_fu_70_ap_done.read(), ap_const_logic_1))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void blockControl::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void blockControl::thread_simConfig_BLOCK_NUMBERS_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        simConfig_BLOCK_NUMBERS_V_blk_n = simConfig_BLOCK_NUMBERS_V_empty_n.read();
    } else {
        simConfig_BLOCK_NUMBERS_V_blk_n = ap_const_logic_1;
    }
}

void blockControl::thread_simConfig_BLOCK_NUMBERS_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, V_SIZE_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowsToSimulate_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read())))) {
        simConfig_BLOCK_NUMBERS_V_read = ap_const_logic_1;
    } else {
        simConfig_BLOCK_NUMBERS_V_read = ap_const_logic_0;
    }
}

void blockControl::thread_simConfig_rowsToSimulate_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        simConfig_rowsToSimulate_V_blk_n = simConfig_rowsToSimulate_V_empty_n.read();
    } else {
        simConfig_rowsToSimulate_V_blk_n = ap_const_logic_1;
    }
}

void blockControl::thread_simConfig_rowsToSimulate_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, V_SIZE_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowsToSimulate_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read())))) {
        simConfig_rowsToSimulate_V_read = ap_const_logic_1;
    } else {
        simConfig_rowsToSimulate_V_read = ap_const_logic_0;
    }
}

void blockControl::thread_start_out() {
    start_out = real_start.read();
}

void blockControl::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void blockControl::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, V_SIZE_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowsToSimulate_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_getVoltages_fu_86_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_getConductances_fu_70_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

