// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _I_calc_HH_
#define _I_calc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "getTotalCurrent.h"
#include "GapJunctionIP_fadd_32ns_32ns_32_8_full_dsp_1.h"
#include "I_calc_F_temp_data.h"

namespace ap_rtl {

struct I_calc : public sc_module {
    // Port declarations 41
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > output_r_TDATA;
    sc_out< sc_logic > output_r_TVALID;
    sc_in< sc_logic > output_r_TREADY;
    sc_out< sc_lv<1> > output_r_TLAST;
    sc_in< sc_lv<27> > simConfig_rowsToSimulate_V_dout;
    sc_in< sc_logic > simConfig_rowsToSimulate_V_empty_n;
    sc_out< sc_logic > simConfig_rowsToSimulate_V_read;
    sc_in< sc_lv<27> > simConfig_BLOCK_NUMBERS_V_dout;
    sc_in< sc_logic > simConfig_BLOCK_NUMBERS_V_empty_n;
    sc_out< sc_logic > simConfig_BLOCK_NUMBERS_V_read;
    sc_in< sc_lv<32> > F_acc_V_data_0_dout;
    sc_in< sc_logic > F_acc_V_data_0_empty_n;
    sc_out< sc_logic > F_acc_V_data_0_read;
    sc_in< sc_lv<32> > F_acc_V_data_1_dout;
    sc_in< sc_logic > F_acc_V_data_1_empty_n;
    sc_out< sc_logic > F_acc_V_data_1_read;
    sc_in< sc_lv<32> > F_acc_V_data_2_dout;
    sc_in< sc_logic > F_acc_V_data_2_empty_n;
    sc_out< sc_logic > F_acc_V_data_2_read;
    sc_in< sc_lv<32> > F_acc_V_data_3_dout;
    sc_in< sc_logic > F_acc_V_data_3_empty_n;
    sc_out< sc_logic > F_acc_V_data_3_read;
    sc_in< sc_lv<32> > V_acc_V_data_0_dout;
    sc_in< sc_logic > V_acc_V_data_0_empty_n;
    sc_out< sc_logic > V_acc_V_data_0_read;
    sc_in< sc_lv<32> > V_acc_V_data_1_dout;
    sc_in< sc_logic > V_acc_V_data_1_empty_n;
    sc_out< sc_logic > V_acc_V_data_1_read;
    sc_in< sc_lv<32> > V_acc_V_data_2_dout;
    sc_in< sc_logic > V_acc_V_data_2_empty_n;
    sc_out< sc_logic > V_acc_V_data_2_read;
    sc_in< sc_lv<32> > V_acc_V_data_3_dout;
    sc_in< sc_logic > V_acc_V_data_3_empty_n;
    sc_out< sc_logic > V_acc_V_data_3_read;


    // Module declarations
    I_calc(sc_module_name name);
    SC_HAS_PROCESS(I_calc);

    ~I_calc();

    sc_trace_file* mVcdFile;

    I_calc_F_temp_data* F_temp_data_U;
    I_calc_F_temp_data* V_temp_data_U;
    getTotalCurrent* grp_getTotalCurrent_fu_363;
    GapJunctionIP_fadd_32ns_32ns_32_8_full_dsp_1<1,8,32,32,32>* GapJunctionIP_fadd_32ns_32ns_32_8_full_dsp_1_U212;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > simConfig_rowsToSimulate_V_blk_n;
    sc_signal< sc_logic > simConfig_BLOCK_NUMBERS_V_blk_n;
    sc_signal< sc_logic > F_acc_V_data_0_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<1> > tmp_35_i_i_reg_531;
    sc_signal< sc_logic > F_acc_V_data_1_blk_n;
    sc_signal< sc_logic > F_acc_V_data_2_blk_n;
    sc_signal< sc_logic > F_acc_V_data_3_blk_n;
    sc_signal< sc_logic > V_acc_V_data_0_blk_n;
    sc_signal< sc_logic > V_acc_V_data_1_blk_n;
    sc_signal< sc_logic > V_acc_V_data_2_blk_n;
    sc_signal< sc_logic > V_acc_V_data_3_blk_n;
    sc_signal< sc_lv<32> > V_temp_data_i_i_load_3_reg_244;
    sc_signal< sc_lv<32> > F_temp_data_i_i_load_3_reg_256;
    sc_signal< sc_lv<32> > V_temp_data_i_i_load_2_reg_268;
    sc_signal< sc_lv<32> > F_temp_data_i_i_load_2_reg_280;
    sc_signal< sc_lv<32> > V_temp_data_i_i_load_1_reg_292;
    sc_signal< sc_lv<32> > F_temp_data_i_i_load_1_reg_304;
    sc_signal< sc_lv<32> > V_temp_data_i_i_load_reg_316;
    sc_signal< sc_lv<32> > F_temp_data_i_i_load_reg_328;
    sc_signal< sc_lv<26> > i_op_assign_reg_340;
    sc_signal< sc_lv<27> > simConfig_BLOCK_NUMB_reg_464;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<27> > simConfig_rowsToSimu_reg_469;
    sc_signal< sc_lv<26> > RowOfBlocks_V_fu_399_p2;
    sc_signal< sc_lv<26> > RowOfBlocks_V_reg_526;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_35_i_i_fu_409_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state20_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > tmp_35_i_i_reg_531_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_35_i_i_reg_531_pp0_iter2_reg;
    sc_signal< sc_lv<26> > block_fu_414_p2;
    sc_signal< sc_lv<26> > block_reg_535;
    sc_signal< sc_lv<32> > tmp_data_0_reg_540;
    sc_signal< sc_logic > F_acc_V_data_00_status;
    sc_signal< sc_logic > V_acc_V_data_00_status;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state13_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state21_pp0_stage1_iter2;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > tmp_data_1_reg_545;
    sc_signal< sc_lv<32> > tmp_data_2_reg_550;
    sc_signal< sc_lv<32> > tmp_data_3_reg_555;
    sc_signal< sc_lv<32> > tmp_data_0_9_reg_560;
    sc_signal< sc_lv<32> > tmp_data_1_9_reg_565;
    sc_signal< sc_lv<32> > tmp_data_2_9_reg_570;
    sc_signal< sc_lv<32> > tmp_data_3_9_reg_575;
    sc_signal< sc_lv<32> > grp_fu_378_p2;
    sc_signal< sc_lv<32> > tmp_53_i_i_reg_580;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<32> > tmp_54_i_i_reg_586;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state6_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state14_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<32> > tmp_53_1_i_i_reg_592;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state7_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state15_pp0_stage3_iter1;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<32> > tmp_54_1_i_i_reg_598;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_state8_pp0_stage4_iter0;
    sc_signal< bool > ap_block_state16_pp0_stage4_iter1;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_lv<32> > tmp_53_2_i_i_reg_604;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage5;
    sc_signal< bool > ap_block_state9_pp0_stage5_iter0;
    sc_signal< bool > ap_block_state17_pp0_stage5_iter1;
    sc_signal< bool > ap_block_pp0_stage5_11001;
    sc_signal< sc_lv<32> > tmp_54_2_i_i_reg_610;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage6;
    sc_signal< bool > ap_block_state10_pp0_stage6_iter0;
    sc_signal< bool > ap_block_state18_pp0_stage6_iter1;
    sc_signal< bool > ap_block_pp0_stage6_11001;
    sc_signal< sc_lv<32> > tmp_53_3_i_i_reg_616;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage7;
    sc_signal< bool > ap_block_state11_pp0_stage7_iter0;
    sc_signal< bool > ap_block_state19_pp0_stage7_iter1;
    sc_signal< bool > ap_block_pp0_stage7_11001;
    sc_signal< sc_lv<32> > tmp_54_3_i_i_reg_622;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<3> > row_fu_458_p2;
    sc_signal< sc_lv<3> > row_reg_631;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state4;
    sc_signal< bool > ap_block_pp0_stage7_subdone;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<2> > F_temp_data_address0;
    sc_signal< sc_logic > F_temp_data_ce0;
    sc_signal< sc_logic > F_temp_data_we0;
    sc_signal< sc_lv<32> > F_temp_data_d0;
    sc_signal< sc_lv<32> > F_temp_data_q0;
    sc_signal< sc_lv<2> > F_temp_data_address1;
    sc_signal< sc_logic > F_temp_data_ce1;
    sc_signal< sc_logic > F_temp_data_we1;
    sc_signal< sc_lv<32> > F_temp_data_d1;
    sc_signal< sc_lv<2> > V_temp_data_address0;
    sc_signal< sc_logic > V_temp_data_ce0;
    sc_signal< sc_logic > V_temp_data_we0;
    sc_signal< sc_lv<32> > V_temp_data_d0;
    sc_signal< sc_lv<32> > V_temp_data_q0;
    sc_signal< sc_lv<2> > V_temp_data_address1;
    sc_signal< sc_logic > V_temp_data_ce1;
    sc_signal< sc_logic > V_temp_data_we1;
    sc_signal< sc_lv<32> > V_temp_data_d1;
    sc_signal< sc_logic > grp_getTotalCurrent_fu_363_ap_start;
    sc_signal< sc_logic > grp_getTotalCurrent_fu_363_ap_done;
    sc_signal< sc_logic > grp_getTotalCurrent_fu_363_ap_idle;
    sc_signal< sc_logic > grp_getTotalCurrent_fu_363_ap_ready;
    sc_signal< sc_lv<32> > grp_getTotalCurrent_fu_363_output_r_TDATA;
    sc_signal< sc_logic > grp_getTotalCurrent_fu_363_output_r_TVALID;
    sc_signal< sc_logic > grp_getTotalCurrent_fu_363_output_r_TREADY;
    sc_signal< sc_lv<1> > grp_getTotalCurrent_fu_363_output_r_TLAST;
    sc_signal< sc_lv<2> > grp_getTotalCurrent_fu_363_F_temp_data_address0;
    sc_signal< sc_logic > grp_getTotalCurrent_fu_363_F_temp_data_ce0;
    sc_signal< sc_lv<2> > grp_getTotalCurrent_fu_363_V_temp_data_address0;
    sc_signal< sc_logic > grp_getTotalCurrent_fu_363_V_temp_data_ce0;
    sc_signal< sc_lv<26> > RowOfBlocks_V_2_reg_232;
    sc_signal< sc_lv<1> > exitcond_i_i_fu_452_p2;
    sc_signal< sc_lv<32> > ap_phi_mux_V_temp_data_i_i_load_3_phi_fu_248_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_F_temp_data_i_i_load_3_phi_fu_260_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > ap_phi_mux_V_temp_data_i_i_load_2_phi_fu_272_p4;
    sc_signal< bool > ap_block_pp0_stage7;
    sc_signal< sc_lv<32> > ap_phi_mux_F_temp_data_i_i_load_2_phi_fu_284_p4;
    sc_signal< bool > ap_block_pp0_stage6;
    sc_signal< sc_lv<32> > ap_phi_mux_V_temp_data_i_i_load_1_phi_fu_296_p4;
    sc_signal< bool > ap_block_pp0_stage5;
    sc_signal< sc_lv<32> > ap_phi_mux_F_temp_data_i_i_load_1_phi_fu_308_p4;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< sc_lv<32> > ap_phi_mux_V_temp_data_i_i_load_phi_fu_320_p4;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<32> > ap_phi_mux_F_temp_data_i_i_load_phi_fu_332_p4;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<26> > ap_phi_mux_i_op_assign_phi_fu_344_p4;
    sc_signal< sc_lv<3> > val_assign_reg_351;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_logic > grp_getTotalCurrent_fu_363_ap_start_reg;
    sc_signal< sc_logic > F_acc_V_data_00_update;
    sc_signal< sc_logic > V_acc_V_data_00_update;
    sc_signal< sc_lv<1> > tmp_i_i_fu_394_p2;
    sc_signal< sc_lv<32> > grp_fu_378_p0;
    sc_signal< sc_lv<32> > grp_fu_378_p1;
    sc_signal< sc_lv<27> > RowOfBlocks_V_1_cast_fu_390_p1;
    sc_signal< sc_lv<27> > i_op_assign_cast_fu_405_p1;
    sc_signal< sc_logic > grp_fu_378_ce;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< bool > ap_block_pp0_stage5_subdone;
    sc_signal< bool > ap_block_pp0_stage6_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state1;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_pp0_stage0;
    static const sc_lv<14> ap_ST_fsm_pp0_stage1;
    static const sc_lv<14> ap_ST_fsm_pp0_stage2;
    static const sc_lv<14> ap_ST_fsm_pp0_stage3;
    static const sc_lv<14> ap_ST_fsm_pp0_stage4;
    static const sc_lv<14> ap_ST_fsm_pp0_stage5;
    static const sc_lv<14> ap_ST_fsm_pp0_stage6;
    static const sc_lv<14> ap_ST_fsm_pp0_stage7;
    static const sc_lv<14> ap_ST_fsm_state22;
    static const sc_lv<14> ap_ST_fsm_state23;
    static const sc_lv<14> ap_ST_fsm_state24;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<26> ap_const_lv26_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<26> ap_const_lv26_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_F_acc_V_data_00_status();
    void thread_F_acc_V_data_00_update();
    void thread_F_acc_V_data_0_blk_n();
    void thread_F_acc_V_data_0_read();
    void thread_F_acc_V_data_1_blk_n();
    void thread_F_acc_V_data_1_read();
    void thread_F_acc_V_data_2_blk_n();
    void thread_F_acc_V_data_2_read();
    void thread_F_acc_V_data_3_blk_n();
    void thread_F_acc_V_data_3_read();
    void thread_F_temp_data_address0();
    void thread_F_temp_data_address1();
    void thread_F_temp_data_ce0();
    void thread_F_temp_data_ce1();
    void thread_F_temp_data_d0();
    void thread_F_temp_data_d1();
    void thread_F_temp_data_we0();
    void thread_F_temp_data_we1();
    void thread_RowOfBlocks_V_1_cast_fu_390_p1();
    void thread_RowOfBlocks_V_fu_399_p2();
    void thread_V_acc_V_data_00_status();
    void thread_V_acc_V_data_00_update();
    void thread_V_acc_V_data_0_blk_n();
    void thread_V_acc_V_data_0_read();
    void thread_V_acc_V_data_1_blk_n();
    void thread_V_acc_V_data_1_read();
    void thread_V_acc_V_data_2_blk_n();
    void thread_V_acc_V_data_2_read();
    void thread_V_acc_V_data_3_blk_n();
    void thread_V_acc_V_data_3_read();
    void thread_V_temp_data_address0();
    void thread_V_temp_data_address1();
    void thread_V_temp_data_ce0();
    void thread_V_temp_data_ce1();
    void thread_V_temp_data_d0();
    void thread_V_temp_data_d1();
    void thread_V_temp_data_we0();
    void thread_V_temp_data_we1();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_CS_fsm_pp0_stage6();
    void thread_ap_CS_fsm_pp0_stage7();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state3();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_pp0_stage5();
    void thread_ap_block_pp0_stage5_11001();
    void thread_ap_block_pp0_stage5_subdone();
    void thread_ap_block_pp0_stage6();
    void thread_ap_block_pp0_stage6_11001();
    void thread_ap_block_pp0_stage6_subdone();
    void thread_ap_block_pp0_stage7();
    void thread_ap_block_pp0_stage7_11001();
    void thread_ap_block_pp0_stage7_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp0_stage6_iter0();
    void thread_ap_block_state11_pp0_stage7_iter0();
    void thread_ap_block_state12_pp0_stage0_iter1();
    void thread_ap_block_state13_pp0_stage1_iter1();
    void thread_ap_block_state14_pp0_stage2_iter1();
    void thread_ap_block_state15_pp0_stage3_iter1();
    void thread_ap_block_state16_pp0_stage4_iter1();
    void thread_ap_block_state17_pp0_stage5_iter1();
    void thread_ap_block_state18_pp0_stage6_iter1();
    void thread_ap_block_state19_pp0_stage7_iter1();
    void thread_ap_block_state20_pp0_stage0_iter2();
    void thread_ap_block_state21_pp0_stage1_iter2();
    void thread_ap_block_state4_pp0_stage0_iter0();
    void thread_ap_block_state5_pp0_stage1_iter0();
    void thread_ap_block_state6_pp0_stage2_iter0();
    void thread_ap_block_state7_pp0_stage3_iter0();
    void thread_ap_block_state8_pp0_stage4_iter0();
    void thread_ap_block_state9_pp0_stage5_iter0();
    void thread_ap_condition_pp0_exit_iter0_state4();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_F_temp_data_i_i_load_1_phi_fu_308_p4();
    void thread_ap_phi_mux_F_temp_data_i_i_load_2_phi_fu_284_p4();
    void thread_ap_phi_mux_F_temp_data_i_i_load_3_phi_fu_260_p4();
    void thread_ap_phi_mux_F_temp_data_i_i_load_phi_fu_332_p4();
    void thread_ap_phi_mux_V_temp_data_i_i_load_1_phi_fu_296_p4();
    void thread_ap_phi_mux_V_temp_data_i_i_load_2_phi_fu_272_p4();
    void thread_ap_phi_mux_V_temp_data_i_i_load_3_phi_fu_248_p4();
    void thread_ap_phi_mux_V_temp_data_i_i_load_phi_fu_320_p4();
    void thread_ap_phi_mux_i_op_assign_phi_fu_344_p4();
    void thread_ap_ready();
    void thread_block_fu_414_p2();
    void thread_exitcond_i_i_fu_452_p2();
    void thread_grp_fu_378_ce();
    void thread_grp_fu_378_p0();
    void thread_grp_fu_378_p1();
    void thread_grp_getTotalCurrent_fu_363_ap_start();
    void thread_grp_getTotalCurrent_fu_363_output_r_TREADY();
    void thread_i_op_assign_cast_fu_405_p1();
    void thread_output_r_TDATA();
    void thread_output_r_TLAST();
    void thread_output_r_TVALID();
    void thread_row_fu_458_p2();
    void thread_simConfig_BLOCK_NUMBERS_V_blk_n();
    void thread_simConfig_BLOCK_NUMBERS_V_read();
    void thread_simConfig_rowsToSimulate_V_blk_n();
    void thread_simConfig_rowsToSimulate_V_read();
    void thread_tmp_35_i_i_fu_409_p2();
    void thread_tmp_i_i_fu_394_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
