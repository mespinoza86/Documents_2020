// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _getTotalCurrent_HH_
#define _getTotalCurrent_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "GapJunctionIP_fptrunc_64ns_32_2_1.h"
#include "GapJunctionIP_fpext_32ns_64_1_1.h"
#include "GapJunctionIP_dadd_64ns_64ns_64_8_full_dsp_1.h"
#include "GapJunctionIP_dmul_64ns_64ns_64_9_max_dsp_1.h"

namespace ap_rtl {

struct getTotalCurrent : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<3> > row_V;
    sc_out< sc_lv<32> > output_r_TDATA;
    sc_out< sc_logic > output_r_TVALID;
    sc_in< sc_logic > output_r_TREADY;
    sc_out< sc_lv<1> > output_r_TLAST;
    sc_in< sc_lv<26> > RowOfBlocks_V_read;
    sc_in< sc_lv<27> > simConfig_rowsToSimulate_V_read;
    sc_out< sc_lv<2> > F_temp_data_address0;
    sc_out< sc_logic > F_temp_data_ce0;
    sc_in< sc_lv<32> > F_temp_data_q0;
    sc_out< sc_lv<2> > V_temp_data_address0;
    sc_out< sc_logic > V_temp_data_ce0;
    sc_in< sc_lv<32> > V_temp_data_q0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<64> > ap_var_for_const1;
    sc_signal< sc_lv<64> > ap_var_for_const2;


    // Module declarations
    getTotalCurrent(sc_module_name name);
    SC_HAS_PROCESS(getTotalCurrent);

    ~getTotalCurrent();

    sc_trace_file* mVcdFile;

    GapJunctionIP_fptrunc_64ns_32_2_1<1,2,64,32>* GapJunctionIP_fptrunc_64ns_32_2_1_U195;
    GapJunctionIP_fpext_32ns_64_1_1<1,1,32,64>* GapJunctionIP_fpext_32ns_64_1_1_U196;
    GapJunctionIP_fpext_32ns_64_1_1<1,1,32,64>* GapJunctionIP_fpext_32ns_64_1_1_U197;
    GapJunctionIP_dadd_64ns_64ns_64_8_full_dsp_1<1,8,64,64,64>* GapJunctionIP_dadd_64ns_64ns_64_8_full_dsp_1_U198;
    GapJunctionIP_dmul_64ns_64ns_64_9_max_dsp_1<1,9,64,64,64>* GapJunctionIP_dmul_64ns_64ns_64_9_max_dsp_1_U199;
    GapJunctionIP_dmul_64ns_64ns_64_9_max_dsp_1<1,9,64,64,64>* GapJunctionIP_dmul_64ns_64ns_64_9_max_dsp_1_U200;
    sc_signal< sc_lv<22> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > output_r_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<1> > tmp_i_fu_126_p2;
    sc_signal< sc_lv<1> > tmp_i_reg_168;
    sc_signal< sc_lv<32> > F_temp_data_load_reg_173;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > V_temp_data_load_reg_178;
    sc_signal< sc_lv<64> > tmp_s_fu_100_p1;
    sc_signal< sc_lv<64> > tmp_s_reg_183;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > tmp_2_fu_103_p1;
    sc_signal< sc_lv<64> > tmp_2_reg_188;
    sc_signal< sc_lv<64> > grp_fu_110_p2;
    sc_signal< sc_lv<64> > tmp_1_reg_193;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<64> > grp_fu_115_p2;
    sc_signal< sc_lv<64> > tmp_3_reg_198;
    sc_signal< sc_lv<64> > grp_fu_106_p2;
    sc_signal< sc_lv<64> > tmp_4_reg_203;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<64> > tmp_fu_120_p1;
    sc_signal< sc_lv<32> > grp_fu_96_p1;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<28> > lhs_V_i_cast_fu_132_p1;
    sc_signal< sc_lv<28> > tmp_i_cast_fu_142_p1;
    sc_signal< sc_lv<28> > ret_V_fu_136_p2;
    sc_signal< sc_lv<1> > tmp_10_i_fu_146_p2;
    sc_signal< sc_logic > grp_fu_96_ce;
    sc_signal< sc_lv<22> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<22> ap_ST_fsm_state1;
    static const sc_lv<22> ap_ST_fsm_state2;
    static const sc_lv<22> ap_ST_fsm_state3;
    static const sc_lv<22> ap_ST_fsm_state4;
    static const sc_lv<22> ap_ST_fsm_state5;
    static const sc_lv<22> ap_ST_fsm_state6;
    static const sc_lv<22> ap_ST_fsm_state7;
    static const sc_lv<22> ap_ST_fsm_state8;
    static const sc_lv<22> ap_ST_fsm_state9;
    static const sc_lv<22> ap_ST_fsm_state10;
    static const sc_lv<22> ap_ST_fsm_state11;
    static const sc_lv<22> ap_ST_fsm_state12;
    static const sc_lv<22> ap_ST_fsm_state13;
    static const sc_lv<22> ap_ST_fsm_state14;
    static const sc_lv<22> ap_ST_fsm_state15;
    static const sc_lv<22> ap_ST_fsm_state16;
    static const sc_lv<22> ap_ST_fsm_state17;
    static const sc_lv<22> ap_ST_fsm_state18;
    static const sc_lv<22> ap_ST_fsm_state19;
    static const sc_lv<22> ap_ST_fsm_state20;
    static const sc_lv<22> ap_ST_fsm_state21;
    static const sc_lv<22> ap_ST_fsm_state22;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<64> ap_const_lv64_3FE999999999999A;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<64> ap_const_lv64_3FC999999999999A;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<28> ap_const_lv28_FFFFFFF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_F_temp_data_address0();
    void thread_F_temp_data_ce0();
    void thread_V_temp_data_address0();
    void thread_V_temp_data_ce0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_fu_96_ce();
    void thread_lhs_V_i_cast_fu_132_p1();
    void thread_output_r_TDATA();
    void thread_output_r_TDATA_blk_n();
    void thread_output_r_TLAST();
    void thread_output_r_TVALID();
    void thread_ret_V_fu_136_p2();
    void thread_tmp_10_i_fu_146_p2();
    void thread_tmp_fu_120_p1();
    void thread_tmp_i_cast_fu_142_p1();
    void thread_tmp_i_fu_126_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
