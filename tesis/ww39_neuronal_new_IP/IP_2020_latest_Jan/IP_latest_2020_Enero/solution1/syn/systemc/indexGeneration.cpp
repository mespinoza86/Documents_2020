// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "indexGeneration.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic indexGeneration::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic indexGeneration::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> indexGeneration::ap_ST_fsm_state1 = "1";
const sc_lv<3> indexGeneration::ap_ST_fsm_state2 = "10";
const sc_lv<3> indexGeneration::ap_ST_fsm_state3 = "100";
const sc_lv<32> indexGeneration::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> indexGeneration::ap_const_lv32_1 = "1";
const sc_lv<1> indexGeneration::ap_const_lv1_1 = "1";
const sc_lv<32> indexGeneration::ap_const_lv32_2 = "10";
const sc_lv<1> indexGeneration::ap_const_lv1_0 = "0";
const sc_lv<12> indexGeneration::ap_const_lv12_0 = "000000000000";
const sc_lv<27> indexGeneration::ap_const_lv27_1 = "1";
const sc_lv<27> indexGeneration::ap_const_lv27_2 = "10";
const sc_lv<27> indexGeneration::ap_const_lv27_3 = "11";
const sc_lv<12> indexGeneration::ap_const_lv12_1 = "1";
const sc_lv<2> indexGeneration::ap_const_lv2_0 = "00";
const sc_lv<14> indexGeneration::ap_const_lv14_1 = "1";
const sc_lv<14> indexGeneration::ap_const_lv14_2 = "10";
const sc_lv<14> indexGeneration::ap_const_lv14_3 = "11";
const sc_lv<27> indexGeneration::ap_const_lv27_4 = "100";
const bool indexGeneration::ap_const_boolean_1 = true;

indexGeneration::indexGeneration(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Vi_idx_V_data_V_01_status);
    sensitive << ( Vi_idx_V_data_V_0_full_n );
    sensitive << ( Vi_idx_V_data_V_1_full_n );
    sensitive << ( Vi_idx_V_data_V_2_full_n );
    sensitive << ( Vi_idx_V_data_V_3_full_n );

    SC_METHOD(thread_Vi_idx_V_data_V_01_update);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_12_i_i_fu_164_p2 );
    sensitive << ( Vi_idx_V_data_V_01_status );

    SC_METHOD(thread_Vi_idx_V_data_V_0_blk_n);
    sensitive << ( Vi_idx_V_data_V_0_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_12_i_i_fu_164_p2 );

    SC_METHOD(thread_Vi_idx_V_data_V_0_din);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_12_i_i_fu_164_p2 );
    sensitive << ( tmp_data_0_V_reg_134 );
    sensitive << ( Vi_idx_V_data_V_01_status );

    SC_METHOD(thread_Vi_idx_V_data_V_0_write);
    sensitive << ( Vi_idx_V_data_V_01_update );

    SC_METHOD(thread_Vi_idx_V_data_V_1_blk_n);
    sensitive << ( Vi_idx_V_data_V_1_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_12_i_i_fu_164_p2 );

    SC_METHOD(thread_Vi_idx_V_data_V_1_din);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_12_i_i_fu_164_p2 );
    sensitive << ( tmp_data_0_V_reg_134 );
    sensitive << ( Vi_idx_V_data_V_01_status );

    SC_METHOD(thread_Vi_idx_V_data_V_1_write);
    sensitive << ( Vi_idx_V_data_V_01_update );

    SC_METHOD(thread_Vi_idx_V_data_V_2_blk_n);
    sensitive << ( Vi_idx_V_data_V_2_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_12_i_i_fu_164_p2 );

    SC_METHOD(thread_Vi_idx_V_data_V_2_din);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_12_i_i_fu_164_p2 );
    sensitive << ( tmp_data_0_V_reg_134 );
    sensitive << ( Vi_idx_V_data_V_01_status );

    SC_METHOD(thread_Vi_idx_V_data_V_2_write);
    sensitive << ( Vi_idx_V_data_V_01_update );

    SC_METHOD(thread_Vi_idx_V_data_V_3_blk_n);
    sensitive << ( Vi_idx_V_data_V_3_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_12_i_i_fu_164_p2 );

    SC_METHOD(thread_Vi_idx_V_data_V_3_din);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_12_i_i_fu_164_p2 );
    sensitive << ( tmp_data_0_V_reg_134 );
    sensitive << ( Vi_idx_V_data_V_01_status );

    SC_METHOD(thread_Vi_idx_V_data_V_3_write);
    sensitive << ( Vi_idx_V_data_V_01_update );

    SC_METHOD(thread_Vj_idx_V_data_V_01_status);
    sensitive << ( Vj_idx_V_data_V_0_full_n );
    sensitive << ( Vj_idx_V_data_V_1_full_n );
    sensitive << ( Vj_idx_V_data_V_2_full_n );
    sensitive << ( Vj_idx_V_data_V_3_full_n );

    SC_METHOD(thread_Vj_idx_V_data_V_01_update);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_18_i_i_fu_194_p2 );
    sensitive << ( Vj_idx_V_data_V_01_status );

    SC_METHOD(thread_Vj_idx_V_data_V_0_blk_n);
    sensitive << ( Vj_idx_V_data_V_0_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_18_i_i_fu_194_p2 );

    SC_METHOD(thread_Vj_idx_V_data_V_0_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_18_i_i_fu_194_p2 );
    sensitive << ( Vj_idx_V_data_V_01_status );
    sensitive << ( column_V_fu_205_p3 );

    SC_METHOD(thread_Vj_idx_V_data_V_0_write);
    sensitive << ( Vj_idx_V_data_V_01_update );

    SC_METHOD(thread_Vj_idx_V_data_V_1_blk_n);
    sensitive << ( Vj_idx_V_data_V_1_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_18_i_i_fu_194_p2 );

    SC_METHOD(thread_Vj_idx_V_data_V_1_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_18_i_i_fu_194_p2 );
    sensitive << ( Vj_idx_V_data_V_01_status );
    sensitive << ( tmp_data_1_V_2_fu_218_p2 );

    SC_METHOD(thread_Vj_idx_V_data_V_1_write);
    sensitive << ( Vj_idx_V_data_V_01_update );

    SC_METHOD(thread_Vj_idx_V_data_V_2_blk_n);
    sensitive << ( Vj_idx_V_data_V_2_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_18_i_i_fu_194_p2 );

    SC_METHOD(thread_Vj_idx_V_data_V_2_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_18_i_i_fu_194_p2 );
    sensitive << ( Vj_idx_V_data_V_01_status );
    sensitive << ( tmp_data_2_V_2_fu_229_p2 );

    SC_METHOD(thread_Vj_idx_V_data_V_2_write);
    sensitive << ( Vj_idx_V_data_V_01_update );

    SC_METHOD(thread_Vj_idx_V_data_V_3_blk_n);
    sensitive << ( Vj_idx_V_data_V_3_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_18_i_i_fu_194_p2 );

    SC_METHOD(thread_Vj_idx_V_data_V_3_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_18_i_i_fu_194_p2 );
    sensitive << ( Vj_idx_V_data_V_01_status );
    sensitive << ( tmp_data_3_V_2_fu_240_p2 );

    SC_METHOD(thread_Vj_idx_V_data_V_3_write);
    sensitive << ( Vj_idx_V_data_V_01_update );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( simConfig_rowBegin_V_empty_n );
    sensitive << ( simConfig_rowEnd_V_empty_n );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( tmp_12_i_i_fu_164_p2 );
    sensitive << ( Vi_idx_V_data_V_01_status );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( tmp_18_i_i_fu_194_p2 );
    sensitive << ( Vj_idx_V_data_V_01_status );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_12_i_i_fu_164_p2 );
    sensitive << ( Vi_idx_V_data_V_01_status );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_12_i_i_fu_164_p2 );
    sensitive << ( Vi_idx_V_data_V_01_status );

    SC_METHOD(thread_block_V_fu_199_p2);
    sensitive << ( t_V_reg_145 );

    SC_METHOD(thread_column_V_fu_205_p3);
    sensitive << ( t_V_reg_145 );

    SC_METHOD(thread_rowOffset_V_1_fu_251_p2);
    sensitive << ( tmp_data_0_V_reg_134 );

    SC_METHOD(thread_simConfig_BLOCK_NUMBERS_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );

    SC_METHOD(thread_simConfig_BLOCK_NUMBERS_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_rowBegin_V_empty_n );
    sensitive << ( simConfig_rowEnd_V_empty_n );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );

    SC_METHOD(thread_simConfig_rowBegin_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_rowBegin_V_empty_n );

    SC_METHOD(thread_simConfig_rowBegin_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_rowBegin_V_empty_n );
    sensitive << ( simConfig_rowEnd_V_empty_n );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );

    SC_METHOD(thread_simConfig_rowEnd_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_rowEnd_V_empty_n );

    SC_METHOD(thread_simConfig_rowEnd_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_rowBegin_V_empty_n );
    sensitive << ( simConfig_rowEnd_V_empty_n );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );

    SC_METHOD(thread_t_V_cast_i_i_fu_190_p1);
    sensitive << ( t_V_reg_145 );

    SC_METHOD(thread_tmp_12_i_i_fu_164_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_12_i_i_fu_164_p2 );
    sensitive << ( tmp_cast_i_i_reg_267 );
    sensitive << ( Vi_idx_V_data_V_01_status );
    sensitive << ( tmp_cast_i_i_19_fu_160_p1 );

    SC_METHOD(thread_tmp_18_i_i_fu_194_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_18_i_i_fu_194_p2 );
    sensitive << ( simConfig_BLOCK_NUMB_reg_257 );
    sensitive << ( Vj_idx_V_data_V_01_status );
    sensitive << ( t_V_cast_i_i_fu_190_p1 );

    SC_METHOD(thread_tmp_cast_i_i_19_fu_160_p1);
    sensitive << ( tmp_data_0_V_reg_134 );

    SC_METHOD(thread_tmp_cast_i_i_fu_156_p1);
    sensitive << ( simConfig_rowEnd_V_dout );

    SC_METHOD(thread_tmp_data_1_V_2_fu_218_p2);
    sensitive << ( column_V_fu_205_p3 );

    SC_METHOD(thread_tmp_data_2_V_2_fu_229_p2);
    sensitive << ( column_V_fu_205_p3 );

    SC_METHOD(thread_tmp_data_3_V_2_fu_240_p2);
    sensitive << ( column_V_fu_205_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_rowBegin_V_empty_n );
    sensitive << ( simConfig_rowEnd_V_empty_n );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_12_i_i_fu_164_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_18_i_i_fu_194_p2 );
    sensitive << ( Vj_idx_V_data_V_01_status );
    sensitive << ( Vi_idx_V_data_V_01_status );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "indexGeneration_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, simConfig_rowBegin_V_dout, "(port)simConfig_rowBegin_V_dout");
    sc_trace(mVcdFile, simConfig_rowBegin_V_empty_n, "(port)simConfig_rowBegin_V_empty_n");
    sc_trace(mVcdFile, simConfig_rowBegin_V_read, "(port)simConfig_rowBegin_V_read");
    sc_trace(mVcdFile, simConfig_rowEnd_V_dout, "(port)simConfig_rowEnd_V_dout");
    sc_trace(mVcdFile, simConfig_rowEnd_V_empty_n, "(port)simConfig_rowEnd_V_empty_n");
    sc_trace(mVcdFile, simConfig_rowEnd_V_read, "(port)simConfig_rowEnd_V_read");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_dout, "(port)simConfig_BLOCK_NUMBERS_V_dout");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_empty_n, "(port)simConfig_BLOCK_NUMBERS_V_empty_n");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_read, "(port)simConfig_BLOCK_NUMBERS_V_read");
    sc_trace(mVcdFile, Vi_idx_V_data_V_0_din, "(port)Vi_idx_V_data_V_0_din");
    sc_trace(mVcdFile, Vi_idx_V_data_V_0_full_n, "(port)Vi_idx_V_data_V_0_full_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_0_write, "(port)Vi_idx_V_data_V_0_write");
    sc_trace(mVcdFile, Vi_idx_V_data_V_1_din, "(port)Vi_idx_V_data_V_1_din");
    sc_trace(mVcdFile, Vi_idx_V_data_V_1_full_n, "(port)Vi_idx_V_data_V_1_full_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_1_write, "(port)Vi_idx_V_data_V_1_write");
    sc_trace(mVcdFile, Vi_idx_V_data_V_2_din, "(port)Vi_idx_V_data_V_2_din");
    sc_trace(mVcdFile, Vi_idx_V_data_V_2_full_n, "(port)Vi_idx_V_data_V_2_full_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_2_write, "(port)Vi_idx_V_data_V_2_write");
    sc_trace(mVcdFile, Vi_idx_V_data_V_3_din, "(port)Vi_idx_V_data_V_3_din");
    sc_trace(mVcdFile, Vi_idx_V_data_V_3_full_n, "(port)Vi_idx_V_data_V_3_full_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_3_write, "(port)Vi_idx_V_data_V_3_write");
    sc_trace(mVcdFile, Vj_idx_V_data_V_0_din, "(port)Vj_idx_V_data_V_0_din");
    sc_trace(mVcdFile, Vj_idx_V_data_V_0_full_n, "(port)Vj_idx_V_data_V_0_full_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_0_write, "(port)Vj_idx_V_data_V_0_write");
    sc_trace(mVcdFile, Vj_idx_V_data_V_1_din, "(port)Vj_idx_V_data_V_1_din");
    sc_trace(mVcdFile, Vj_idx_V_data_V_1_full_n, "(port)Vj_idx_V_data_V_1_full_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_1_write, "(port)Vj_idx_V_data_V_1_write");
    sc_trace(mVcdFile, Vj_idx_V_data_V_2_din, "(port)Vj_idx_V_data_V_2_din");
    sc_trace(mVcdFile, Vj_idx_V_data_V_2_full_n, "(port)Vj_idx_V_data_V_2_full_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_2_write, "(port)Vj_idx_V_data_V_2_write");
    sc_trace(mVcdFile, Vj_idx_V_data_V_3_din, "(port)Vj_idx_V_data_V_3_din");
    sc_trace(mVcdFile, Vj_idx_V_data_V_3_full_n, "(port)Vj_idx_V_data_V_3_full_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_3_write, "(port)Vj_idx_V_data_V_3_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, simConfig_rowBegin_V_blk_n, "simConfig_rowBegin_V_blk_n");
    sc_trace(mVcdFile, simConfig_rowEnd_V_blk_n, "simConfig_rowEnd_V_blk_n");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_blk_n, "simConfig_BLOCK_NUMBERS_V_blk_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_0_blk_n, "Vi_idx_V_data_V_0_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_12_i_i_fu_164_p2, "tmp_12_i_i_fu_164_p2");
    sc_trace(mVcdFile, Vi_idx_V_data_V_1_blk_n, "Vi_idx_V_data_V_1_blk_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_2_blk_n, "Vi_idx_V_data_V_2_blk_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_3_blk_n, "Vi_idx_V_data_V_3_blk_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_0_blk_n, "Vj_idx_V_data_V_0_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_18_i_i_fu_194_p2, "tmp_18_i_i_fu_194_p2");
    sc_trace(mVcdFile, Vj_idx_V_data_V_1_blk_n, "Vj_idx_V_data_V_1_blk_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_2_blk_n, "Vj_idx_V_data_V_2_blk_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_3_blk_n, "Vj_idx_V_data_V_3_blk_n");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMB_reg_257, "simConfig_BLOCK_NUMB_reg_257");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, tmp_cast_i_i_fu_156_p1, "tmp_cast_i_i_fu_156_p1");
    sc_trace(mVcdFile, tmp_cast_i_i_reg_267, "tmp_cast_i_i_reg_267");
    sc_trace(mVcdFile, block_V_fu_199_p2, "block_V_fu_199_p2");
    sc_trace(mVcdFile, Vj_idx_V_data_V_01_status, "Vj_idx_V_data_V_01_status");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, rowOffset_V_1_fu_251_p2, "rowOffset_V_1_fu_251_p2");
    sc_trace(mVcdFile, tmp_data_0_V_reg_134, "tmp_data_0_V_reg_134");
    sc_trace(mVcdFile, t_V_reg_145, "t_V_reg_145");
    sc_trace(mVcdFile, Vi_idx_V_data_V_01_status, "Vi_idx_V_data_V_01_status");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, Vi_idx_V_data_V_01_update, "Vi_idx_V_data_V_01_update");
    sc_trace(mVcdFile, Vj_idx_V_data_V_01_update, "Vj_idx_V_data_V_01_update");
    sc_trace(mVcdFile, tmp_cast_i_i_19_fu_160_p1, "tmp_cast_i_i_19_fu_160_p1");
    sc_trace(mVcdFile, t_V_cast_i_i_fu_190_p1, "t_V_cast_i_i_fu_190_p1");
    sc_trace(mVcdFile, column_V_fu_205_p3, "column_V_fu_205_p3");
    sc_trace(mVcdFile, tmp_data_1_V_2_fu_218_p2, "tmp_data_1_V_2_fu_218_p2");
    sc_trace(mVcdFile, tmp_data_2_V_2_fu_229_p2, "tmp_data_2_V_2_fu_229_p2");
    sc_trace(mVcdFile, tmp_data_3_V_2_fu_240_p2, "tmp_data_3_V_2_fu_240_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

indexGeneration::~indexGeneration() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void indexGeneration::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    !(esl_seteq<1,1,1>(tmp_12_i_i_fu_164_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, Vi_idx_V_data_V_01_status.read())) && 
                    esl_seteq<1,1,1>(tmp_12_i_i_fu_164_p2.read(), ap_const_lv1_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_12_i_i_fu_164_p2.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(tmp_12_i_i_fu_164_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, Vi_idx_V_data_V_01_status.read())))) {
        t_V_reg_145 = ap_const_lv12_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_18_i_i_fu_194_p2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_1, tmp_18_i_i_fu_194_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, Vj_idx_V_data_V_01_status.read())))) {
        t_V_reg_145 = block_V_fu_199_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_1, tmp_18_i_i_fu_194_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, Vj_idx_V_data_V_01_status.read())) && 
         esl_seteq<1,1,1>(tmp_18_i_i_fu_194_p2.read(), ap_const_lv1_0))) {
        tmp_data_0_V_reg_134 = rowOffset_V_1_fu_251_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowEnd_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowBegin_V_empty_n.read())))) {
        tmp_data_0_V_reg_134 = simConfig_rowBegin_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowEnd_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowBegin_V_empty_n.read())))) {
        simConfig_BLOCK_NUMB_reg_257 = simConfig_BLOCK_NUMBERS_V_dout.read();
        tmp_cast_i_i_reg_267 = tmp_cast_i_i_fu_156_p1.read();
    }
}

void indexGeneration::thread_Vi_idx_V_data_V_01_status() {
    Vi_idx_V_data_V_01_status = (Vi_idx_V_data_V_0_full_n.read() & Vi_idx_V_data_V_1_full_n.read() & Vi_idx_V_data_V_2_full_n.read() & Vi_idx_V_data_V_3_full_n.read());
}

void indexGeneration::thread_Vi_idx_V_data_V_01_update() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_12_i_i_fu_164_p2.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(tmp_12_i_i_fu_164_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, Vi_idx_V_data_V_01_status.read())))) {
        Vi_idx_V_data_V_01_update = ap_const_logic_1;
    } else {
        Vi_idx_V_data_V_01_update = ap_const_logic_0;
    }
}

void indexGeneration::thread_Vi_idx_V_data_V_0_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_12_i_i_fu_164_p2.read(), ap_const_lv1_1))) {
        Vi_idx_V_data_V_0_blk_n = Vi_idx_V_data_V_0_full_n.read();
    } else {
        Vi_idx_V_data_V_0_blk_n = ap_const_logic_1;
    }
}

void indexGeneration::thread_Vi_idx_V_data_V_0_din() {
    Vi_idx_V_data_V_0_din = tmp_data_0_V_reg_134.read();
}

void indexGeneration::thread_Vi_idx_V_data_V_0_write() {
    Vi_idx_V_data_V_0_write = Vi_idx_V_data_V_01_update.read();
}

void indexGeneration::thread_Vi_idx_V_data_V_1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_12_i_i_fu_164_p2.read(), ap_const_lv1_1))) {
        Vi_idx_V_data_V_1_blk_n = Vi_idx_V_data_V_1_full_n.read();
    } else {
        Vi_idx_V_data_V_1_blk_n = ap_const_logic_1;
    }
}

void indexGeneration::thread_Vi_idx_V_data_V_1_din() {
    Vi_idx_V_data_V_1_din = (!tmp_data_0_V_reg_134.read().is_01() || !ap_const_lv27_1.is_01())? sc_lv<27>(): (sc_biguint<27>(tmp_data_0_V_reg_134.read()) + sc_biguint<27>(ap_const_lv27_1));
}

void indexGeneration::thread_Vi_idx_V_data_V_1_write() {
    Vi_idx_V_data_V_1_write = Vi_idx_V_data_V_01_update.read();
}

void indexGeneration::thread_Vi_idx_V_data_V_2_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_12_i_i_fu_164_p2.read(), ap_const_lv1_1))) {
        Vi_idx_V_data_V_2_blk_n = Vi_idx_V_data_V_2_full_n.read();
    } else {
        Vi_idx_V_data_V_2_blk_n = ap_const_logic_1;
    }
}

void indexGeneration::thread_Vi_idx_V_data_V_2_din() {
    Vi_idx_V_data_V_2_din = (!tmp_data_0_V_reg_134.read().is_01() || !ap_const_lv27_2.is_01())? sc_lv<27>(): (sc_biguint<27>(tmp_data_0_V_reg_134.read()) + sc_biguint<27>(ap_const_lv27_2));
}

void indexGeneration::thread_Vi_idx_V_data_V_2_write() {
    Vi_idx_V_data_V_2_write = Vi_idx_V_data_V_01_update.read();
}

void indexGeneration::thread_Vi_idx_V_data_V_3_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_12_i_i_fu_164_p2.read(), ap_const_lv1_1))) {
        Vi_idx_V_data_V_3_blk_n = Vi_idx_V_data_V_3_full_n.read();
    } else {
        Vi_idx_V_data_V_3_blk_n = ap_const_logic_1;
    }
}

void indexGeneration::thread_Vi_idx_V_data_V_3_din() {
    Vi_idx_V_data_V_3_din = (!tmp_data_0_V_reg_134.read().is_01() || !ap_const_lv27_3.is_01())? sc_lv<27>(): (sc_biguint<27>(tmp_data_0_V_reg_134.read()) + sc_biguint<27>(ap_const_lv27_3));
}

void indexGeneration::thread_Vi_idx_V_data_V_3_write() {
    Vi_idx_V_data_V_3_write = Vi_idx_V_data_V_01_update.read();
}

void indexGeneration::thread_Vj_idx_V_data_V_01_status() {
    Vj_idx_V_data_V_01_status = (Vj_idx_V_data_V_0_full_n.read() & Vj_idx_V_data_V_1_full_n.read() & Vj_idx_V_data_V_2_full_n.read() & Vj_idx_V_data_V_3_full_n.read());
}

void indexGeneration::thread_Vj_idx_V_data_V_01_update() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_18_i_i_fu_194_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_1, tmp_18_i_i_fu_194_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, Vj_idx_V_data_V_01_status.read())))) {
        Vj_idx_V_data_V_01_update = ap_const_logic_1;
    } else {
        Vj_idx_V_data_V_01_update = ap_const_logic_0;
    }
}

void indexGeneration::thread_Vj_idx_V_data_V_0_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_18_i_i_fu_194_p2.read()))) {
        Vj_idx_V_data_V_0_blk_n = Vj_idx_V_data_V_0_full_n.read();
    } else {
        Vj_idx_V_data_V_0_blk_n = ap_const_logic_1;
    }
}

void indexGeneration::thread_Vj_idx_V_data_V_0_din() {
    Vj_idx_V_data_V_0_din = esl_zext<27,14>(column_V_fu_205_p3.read());
}

void indexGeneration::thread_Vj_idx_V_data_V_0_write() {
    Vj_idx_V_data_V_0_write = Vj_idx_V_data_V_01_update.read();
}

void indexGeneration::thread_Vj_idx_V_data_V_1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_18_i_i_fu_194_p2.read()))) {
        Vj_idx_V_data_V_1_blk_n = Vj_idx_V_data_V_1_full_n.read();
    } else {
        Vj_idx_V_data_V_1_blk_n = ap_const_logic_1;
    }
}

void indexGeneration::thread_Vj_idx_V_data_V_1_din() {
    Vj_idx_V_data_V_1_din = esl_zext<27,14>(tmp_data_1_V_2_fu_218_p2.read());
}

void indexGeneration::thread_Vj_idx_V_data_V_1_write() {
    Vj_idx_V_data_V_1_write = Vj_idx_V_data_V_01_update.read();
}

void indexGeneration::thread_Vj_idx_V_data_V_2_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_18_i_i_fu_194_p2.read()))) {
        Vj_idx_V_data_V_2_blk_n = Vj_idx_V_data_V_2_full_n.read();
    } else {
        Vj_idx_V_data_V_2_blk_n = ap_const_logic_1;
    }
}

void indexGeneration::thread_Vj_idx_V_data_V_2_din() {
    Vj_idx_V_data_V_2_din = esl_zext<27,14>(tmp_data_2_V_2_fu_229_p2.read());
}

void indexGeneration::thread_Vj_idx_V_data_V_2_write() {
    Vj_idx_V_data_V_2_write = Vj_idx_V_data_V_01_update.read();
}

void indexGeneration::thread_Vj_idx_V_data_V_3_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_18_i_i_fu_194_p2.read()))) {
        Vj_idx_V_data_V_3_blk_n = Vj_idx_V_data_V_3_full_n.read();
    } else {
        Vj_idx_V_data_V_3_blk_n = ap_const_logic_1;
    }
}

void indexGeneration::thread_Vj_idx_V_data_V_3_din() {
    Vj_idx_V_data_V_3_din = esl_zext<27,14>(tmp_data_3_V_2_fu_240_p2.read());
}

void indexGeneration::thread_Vj_idx_V_data_V_3_write() {
    Vj_idx_V_data_V_3_write = Vj_idx_V_data_V_01_update.read();
}

void indexGeneration::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void indexGeneration::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void indexGeneration::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void indexGeneration::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowEnd_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowBegin_V_empty_n.read()));
}

void indexGeneration::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(tmp_12_i_i_fu_164_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, Vi_idx_V_data_V_01_status.read()));
}

void indexGeneration::thread_ap_block_state3() {
    ap_block_state3 = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_18_i_i_fu_194_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, Vj_idx_V_data_V_01_status.read()));
}

void indexGeneration::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(tmp_12_i_i_fu_164_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, Vi_idx_V_data_V_01_status.read())) && 
         esl_seteq<1,1,1>(tmp_12_i_i_fu_164_p2.read(), ap_const_lv1_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void indexGeneration::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void indexGeneration::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(tmp_12_i_i_fu_164_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, Vi_idx_V_data_V_01_status.read())) && 
         esl_seteq<1,1,1>(tmp_12_i_i_fu_164_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void indexGeneration::thread_block_V_fu_199_p2() {
    block_V_fu_199_p2 = (!t_V_reg_145.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(t_V_reg_145.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void indexGeneration::thread_column_V_fu_205_p3() {
    column_V_fu_205_p3 = esl_concat<12,2>(t_V_reg_145.read(), ap_const_lv2_0);
}

void indexGeneration::thread_rowOffset_V_1_fu_251_p2() {
    rowOffset_V_1_fu_251_p2 = (!tmp_data_0_V_reg_134.read().is_01() || !ap_const_lv27_4.is_01())? sc_lv<27>(): (sc_biguint<27>(tmp_data_0_V_reg_134.read()) + sc_biguint<27>(ap_const_lv27_4));
}

void indexGeneration::thread_simConfig_BLOCK_NUMBERS_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        simConfig_BLOCK_NUMBERS_V_blk_n = simConfig_BLOCK_NUMBERS_V_empty_n.read();
    } else {
        simConfig_BLOCK_NUMBERS_V_blk_n = ap_const_logic_1;
    }
}

void indexGeneration::thread_simConfig_BLOCK_NUMBERS_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowEnd_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowBegin_V_empty_n.read())))) {
        simConfig_BLOCK_NUMBERS_V_read = ap_const_logic_1;
    } else {
        simConfig_BLOCK_NUMBERS_V_read = ap_const_logic_0;
    }
}

void indexGeneration::thread_simConfig_rowBegin_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        simConfig_rowBegin_V_blk_n = simConfig_rowBegin_V_empty_n.read();
    } else {
        simConfig_rowBegin_V_blk_n = ap_const_logic_1;
    }
}

void indexGeneration::thread_simConfig_rowBegin_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowEnd_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowBegin_V_empty_n.read())))) {
        simConfig_rowBegin_V_read = ap_const_logic_1;
    } else {
        simConfig_rowBegin_V_read = ap_const_logic_0;
    }
}

void indexGeneration::thread_simConfig_rowEnd_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        simConfig_rowEnd_V_blk_n = simConfig_rowEnd_V_empty_n.read();
    } else {
        simConfig_rowEnd_V_blk_n = ap_const_logic_1;
    }
}

void indexGeneration::thread_simConfig_rowEnd_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowEnd_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowBegin_V_empty_n.read())))) {
        simConfig_rowEnd_V_read = ap_const_logic_1;
    } else {
        simConfig_rowEnd_V_read = ap_const_logic_0;
    }
}

void indexGeneration::thread_t_V_cast_i_i_fu_190_p1() {
    t_V_cast_i_i_fu_190_p1 = esl_zext<27,12>(t_V_reg_145.read());
}

void indexGeneration::thread_tmp_12_i_i_fu_164_p2() {
    tmp_12_i_i_fu_164_p2 = (!tmp_cast_i_i_19_fu_160_p1.read().is_01() || !tmp_cast_i_i_reg_267.read().is_01())? sc_lv<1>(): (sc_bigint<28>(tmp_cast_i_i_19_fu_160_p1.read()) < sc_bigint<28>(tmp_cast_i_i_reg_267.read()));
}

void indexGeneration::thread_tmp_18_i_i_fu_194_p2() {
    tmp_18_i_i_fu_194_p2 = (!t_V_cast_i_i_fu_190_p1.read().is_01() || !simConfig_BLOCK_NUMB_reg_257.read().is_01())? sc_lv<1>(): (sc_bigint<27>(t_V_cast_i_i_fu_190_p1.read()) < sc_bigint<27>(simConfig_BLOCK_NUMB_reg_257.read()));
}

void indexGeneration::thread_tmp_cast_i_i_19_fu_160_p1() {
    tmp_cast_i_i_19_fu_160_p1 = esl_zext<28,27>(tmp_data_0_V_reg_134.read());
}

void indexGeneration::thread_tmp_cast_i_i_fu_156_p1() {
    tmp_cast_i_i_fu_156_p1 = esl_sext<28,27>(simConfig_rowEnd_V_dout.read());
}

void indexGeneration::thread_tmp_data_1_V_2_fu_218_p2() {
    tmp_data_1_V_2_fu_218_p2 = (column_V_fu_205_p3.read() | ap_const_lv14_1);
}

void indexGeneration::thread_tmp_data_2_V_2_fu_229_p2() {
    tmp_data_2_V_2_fu_229_p2 = (column_V_fu_205_p3.read() | ap_const_lv14_2);
}

void indexGeneration::thread_tmp_data_3_V_2_fu_240_p2() {
    tmp_data_3_V_2_fu_240_p2 = (column_V_fu_205_p3.read() | ap_const_lv14_3);
}

void indexGeneration::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowEnd_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowBegin_V_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(tmp_12_i_i_fu_164_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, Vi_idx_V_data_V_01_status.read())) && esl_seteq<1,1,1>(tmp_12_i_i_fu_164_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_12_i_i_fu_164_p2.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(tmp_12_i_i_fu_164_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, Vi_idx_V_data_V_01_status.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_1, tmp_18_i_i_fu_194_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, Vj_idx_V_data_V_01_status.read())) && esl_seteq<1,1,1>(tmp_18_i_i_fu_194_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_18_i_i_fu_194_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_1, tmp_18_i_i_fu_194_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, Vj_idx_V_data_V_01_status.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

