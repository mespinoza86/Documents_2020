// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "writeV2calc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic writeV2calc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic writeV2calc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> writeV2calc::ap_ST_fsm_state1 = "1";
const sc_lv<10> writeV2calc::ap_ST_fsm_state2 = "10";
const sc_lv<10> writeV2calc::ap_ST_fsm_state3 = "100";
const sc_lv<10> writeV2calc::ap_ST_fsm_state4 = "1000";
const sc_lv<10> writeV2calc::ap_ST_fsm_state5 = "10000";
const sc_lv<10> writeV2calc::ap_ST_fsm_pp0_stage0 = "100000";
const sc_lv<10> writeV2calc::ap_ST_fsm_pp0_stage1 = "1000000";
const sc_lv<10> writeV2calc::ap_ST_fsm_pp0_stage2 = "10000000";
const sc_lv<10> writeV2calc::ap_ST_fsm_pp0_stage3 = "100000000";
const sc_lv<10> writeV2calc::ap_ST_fsm_state15 = "1000000000";
const sc_lv<32> writeV2calc::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool writeV2calc::ap_const_boolean_1 = true;
const sc_lv<32> writeV2calc::ap_const_lv32_1 = "1";
const sc_lv<1> writeV2calc::ap_const_lv1_1 = "1";
const sc_lv<32> writeV2calc::ap_const_lv32_6 = "110";
const bool writeV2calc::ap_const_boolean_0 = false;
const sc_lv<32> writeV2calc::ap_const_lv32_7 = "111";
const sc_lv<32> writeV2calc::ap_const_lv32_8 = "1000";
const sc_lv<32> writeV2calc::ap_const_lv32_5 = "101";
const sc_lv<32> writeV2calc::ap_const_lv32_2 = "10";
const sc_lv<32> writeV2calc::ap_const_lv32_3 = "11";
const sc_lv<32> writeV2calc::ap_const_lv32_4 = "100";
const sc_lv<1> writeV2calc::ap_const_lv1_0 = "0";
const sc_lv<12> writeV2calc::ap_const_lv12_0 = "000000000000";
const sc_lv<32> writeV2calc::ap_const_lv32_9 = "1001";
const sc_lv<26> writeV2calc::ap_const_lv26_0 = "00000000000000000000000000";
const sc_lv<12> writeV2calc::ap_const_lv12_1 = "1";
const sc_lv<26> writeV2calc::ap_const_lv26_1 = "1";

writeV2calc::writeV2calc(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Vi_idx_V_data_V_00_status);
    sensitive << ( Vi_idx_V_data_V_0_empty_n );
    sensitive << ( Vi_idx_V_data_V_1_empty_n );
    sensitive << ( Vi_idx_V_data_V_2_empty_n );
    sensitive << ( Vi_idx_V_data_V_3_empty_n );

    SC_METHOD(thread_Vi_idx_V_data_V_00_update);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_3_i_i_fu_252_p2 );
    sensitive << ( Vi_idx_V_data_V_00_status );

    SC_METHOD(thread_Vi_idx_V_data_V_0_blk_n);
    sensitive << ( Vi_idx_V_data_V_0_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_3_i_i_fu_252_p2 );

    SC_METHOD(thread_Vi_idx_V_data_V_0_read);
    sensitive << ( Vi_idx_V_data_V_00_update );

    SC_METHOD(thread_Vi_idx_V_data_V_1_blk_n);
    sensitive << ( Vi_idx_V_data_V_1_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_3_i_i_fu_252_p2 );

    SC_METHOD(thread_Vi_idx_V_data_V_1_read);
    sensitive << ( Vi_idx_V_data_V_00_update );

    SC_METHOD(thread_Vi_idx_V_data_V_2_blk_n);
    sensitive << ( Vi_idx_V_data_V_2_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_3_i_i_fu_252_p2 );

    SC_METHOD(thread_Vi_idx_V_data_V_2_read);
    sensitive << ( Vi_idx_V_data_V_00_update );

    SC_METHOD(thread_Vi_idx_V_data_V_3_blk_n);
    sensitive << ( Vi_idx_V_data_V_3_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_3_i_i_fu_252_p2 );

    SC_METHOD(thread_Vi_idx_V_data_V_3_read);
    sensitive << ( Vi_idx_V_data_V_00_update );

    SC_METHOD(thread_Vj_idx_V_data_V_00_status);
    sensitive << ( Vj_idx_V_data_V_0_empty_n );
    sensitive << ( Vj_idx_V_data_V_1_empty_n );
    sensitive << ( Vj_idx_V_data_V_2_empty_n );
    sensitive << ( Vj_idx_V_data_V_3_empty_n );

    SC_METHOD(thread_Vj_idx_V_data_V_00_update);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( tmp_9_i_i_reg_420 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_Vj_idx_V_data_V_0_blk_n);
    sensitive << ( Vj_idx_V_data_V_0_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_9_i_i_reg_420 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_Vj_idx_V_data_V_0_read);
    sensitive << ( Vj_idx_V_data_V_00_update );

    SC_METHOD(thread_Vj_idx_V_data_V_1_blk_n);
    sensitive << ( Vj_idx_V_data_V_1_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_9_i_i_reg_420 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_Vj_idx_V_data_V_1_read);
    sensitive << ( Vj_idx_V_data_V_00_update );

    SC_METHOD(thread_Vj_idx_V_data_V_2_blk_n);
    sensitive << ( Vj_idx_V_data_V_2_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_9_i_i_reg_420 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_Vj_idx_V_data_V_2_read);
    sensitive << ( Vj_idx_V_data_V_00_update );

    SC_METHOD(thread_Vj_idx_V_data_V_3_blk_n);
    sensitive << ( Vj_idx_V_data_V_3_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_9_i_i_reg_420 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_Vj_idx_V_data_V_3_read);
    sensitive << ( Vj_idx_V_data_V_00_update );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( fixedData_V_data1_status );
    sensitive << ( processedData_V_data1_status );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( fixedData_V_data1_status );
    sensitive << ( processedData_V_data1_status );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( fixedData_V_data1_status );
    sensitive << ( processedData_V_data1_status );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_01001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_i_i_reg_420 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( fixedData_V_data1_status );
    sensitive << ( processedData_V_data1_status );
    sensitive << ( Vj_idx_V_data_V_00_status );

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_i_i_reg_420 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( fixedData_V_data1_status );
    sensitive << ( processedData_V_data1_status );
    sensitive << ( Vj_idx_V_data_V_00_status );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_i_i_reg_420 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( fixedData_V_data1_status );
    sensitive << ( processedData_V_data1_status );
    sensitive << ( Vj_idx_V_data_V_00_status );

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_01001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( fixedData_V_data1_status );
    sensitive << ( processedData_V_data1_status );

    SC_METHOD(thread_ap_block_pp0_stage2_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( fixedData_V_data1_status );
    sensitive << ( processedData_V_data1_status );

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( fixedData_V_data1_status );
    sensitive << ( processedData_V_data1_status );

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_01001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( fixedData_V_data1_status );
    sensitive << ( processedData_V_data1_status );

    SC_METHOD(thread_ap_block_pp0_stage3_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( fixedData_V_data1_status );
    sensitive << ( processedData_V_data1_status );

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( fixedData_V_data1_status );
    sensitive << ( processedData_V_data1_status );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( simConfig_rowsToSimulate_V_empty_n );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state11_pp0_stage1_iter1);
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( fixedData_V_data1_status );
    sensitive << ( processedData_V_data1_status );

    SC_METHOD(thread_ap_block_state12_pp0_stage2_iter1);
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( fixedData_V_data1_status );
    sensitive << ( processedData_V_data1_status );

    SC_METHOD(thread_ap_block_state13_pp0_stage3_iter1);
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( fixedData_V_data1_status );
    sensitive << ( processedData_V_data1_status );

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter2);
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( fixedData_V_data1_status );
    sensitive << ( processedData_V_data1_status );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( tmp_3_i_i_fu_252_p2 );
    sensitive << ( Vi_idx_V_data_V_00_status );

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage1_iter0);
    sensitive << ( tmp_9_i_i_reg_420 );
    sensitive << ( Vj_idx_V_data_V_00_status );

    SC_METHOD(thread_ap_block_state8_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state9_pp0_stage3_iter0);

    SC_METHOD(thread_ap_condition_402);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_01001 );

    SC_METHOD(thread_ap_condition_407);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_01001 );

    SC_METHOD(thread_ap_condition_412);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_01001 );

    SC_METHOD(thread_ap_condition_417);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state6);
    sensitive << ( tmp_9_i_i_fu_299_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_3_i_i_fu_252_p2 );
    sensitive << ( Vi_idx_V_data_V_00_status );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_phi_mux_t_V_phi_fu_241_p4);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_i_i_reg_420 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( t_V_reg_237 );
    sensitive << ( j_V_reg_424 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_3_i_i_fu_252_p2 );
    sensitive << ( Vi_idx_V_data_V_00_status );

    SC_METHOD(thread_fixedData_V_data1_status);
    sensitive << ( fixedData_V_data_full_n );
    sensitive << ( fixedData_V_tlast_V_full_n );

    SC_METHOD(thread_fixedData_V_data1_update);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_fixedData_V_data_blk_n);
    sensitive << ( fixedData_V_data_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_fixedData_V_data_din);
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( tmp_data_reg_390 );
    sensitive << ( tmp_data_1_reg_395 );
    sensitive << ( tmp_data_2_reg_410 );
    sensitive << ( tmp_data_3_reg_415 );
    sensitive << ( ap_condition_402 );
    sensitive << ( ap_condition_407 );
    sensitive << ( ap_condition_412 );
    sensitive << ( ap_condition_417 );

    SC_METHOD(thread_fixedData_V_data_write);
    sensitive << ( fixedData_V_data1_update );

    SC_METHOD(thread_fixedData_V_tlast_V_blk_n);
    sensitive << ( fixedData_V_tlast_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_fixedData_V_tlast_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage1_01001 );
    sensitive << ( ap_block_pp0_stage2_01001 );
    sensitive << ( ap_block_pp0_stage3_01001 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_fixedData_V_tlast_V_write);
    sensitive << ( fixedData_V_data1_update );

    SC_METHOD(thread_i_V_fu_257_p2);
    sensitive << ( t_V_1_reg_226 );

    SC_METHOD(thread_j_V_fu_304_p2);
    sensitive << ( ap_phi_mux_t_V_phi_fu_241_p4 );

    SC_METHOD(thread_processedData_V_data1_status);
    sensitive << ( processedData_V_data_full_n );
    sensitive << ( processedData_V_data_1_full_n );
    sensitive << ( processedData_V_data_2_full_n );
    sensitive << ( processedData_V_data_3_full_n );

    SC_METHOD(thread_processedData_V_data1_update);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_processedData_V_data_1_blk_n);
    sensitive << ( processedData_V_data_1_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_processedData_V_data_1_din);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_data_1_12_reg_464 );
    sensitive << ( tmp_data_1_12_reg_464_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage1_01001 );
    sensitive << ( ap_block_pp0_stage2_01001 );
    sensitive << ( ap_block_pp0_stage3_01001 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_processedData_V_data_1_write);
    sensitive << ( processedData_V_data1_update );

    SC_METHOD(thread_processedData_V_data_2_blk_n);
    sensitive << ( processedData_V_data_2_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_processedData_V_data_2_din);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_data_2_13_reg_479 );
    sensitive << ( ap_block_pp0_stage1_01001 );
    sensitive << ( ap_block_pp0_stage2_01001 );
    sensitive << ( ap_block_pp0_stage3_01001 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_processedData_V_data_2_write);
    sensitive << ( processedData_V_data1_update );

    SC_METHOD(thread_processedData_V_data_3_blk_n);
    sensitive << ( processedData_V_data_3_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_processedData_V_data_3_din);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_data_3_14_reg_484 );
    sensitive << ( ap_block_pp0_stage1_01001 );
    sensitive << ( ap_block_pp0_stage2_01001 );
    sensitive << ( ap_block_pp0_stage3_01001 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_processedData_V_data_3_write);
    sensitive << ( processedData_V_data1_update );

    SC_METHOD(thread_processedData_V_data_blk_n);
    sensitive << ( processedData_V_data_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_processedData_V_data_din);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_i_i_reg_420_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_data_0_reg_459 );
    sensitive << ( tmp_data_0_reg_459_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage1_01001 );
    sensitive << ( ap_block_pp0_stage2_01001 );
    sensitive << ( ap_block_pp0_stage3_01001 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_processedData_V_data_write);
    sensitive << ( processedData_V_data1_update );

    SC_METHOD(thread_simConfig_BLOCK_NUMBERS_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );

    SC_METHOD(thread_simConfig_BLOCK_NUMBERS_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_rowsToSimulate_V_empty_n );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );

    SC_METHOD(thread_simConfig_rowsToSimulate_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_rowsToSimulate_V_empty_n );

    SC_METHOD(thread_simConfig_rowsToSimulate_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_rowsToSimulate_V_empty_n );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );

    SC_METHOD(thread_t_V_1_cast_fu_248_p1);
    sensitive << ( t_V_1_reg_226 );

    SC_METHOD(thread_t_V_cast_fu_295_p1);
    sensitive << ( ap_phi_mux_t_V_phi_fu_241_p4 );

    SC_METHOD(thread_tmp_13_1_i_i_fu_330_p1);
    sensitive << ( tmp_data_1_V_1_reg_434 );

    SC_METHOD(thread_tmp_13_2_i_i_fu_334_p1);
    sensitive << ( tmp_data_2_V_1_reg_439 );

    SC_METHOD(thread_tmp_13_3_i_i_fu_338_p1);
    sensitive << ( tmp_data_3_V_1_reg_444 );

    SC_METHOD(thread_tmp_13_i_i_fu_326_p1);
    sensitive << ( tmp_data_0_V_1_reg_429 );

    SC_METHOD(thread_tmp_3_i_i_fu_252_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_3_i_i_fu_252_p2 );
    sensitive << ( simConfig_rowsToSimu_reg_347 );
    sensitive << ( Vi_idx_V_data_V_00_status );
    sensitive << ( t_V_1_cast_fu_248_p1 );

    SC_METHOD(thread_tmp_5_i_i_fu_279_p1);
    sensitive << ( tmp_data_0_V_reg_360 );

    SC_METHOD(thread_tmp_6_i_i_fu_283_p1);
    sensitive << ( tmp_data_1_V_reg_365 );

    SC_METHOD(thread_tmp_7_i_i_fu_287_p1);
    sensitive << ( tmp_data_2_V_reg_370 );

    SC_METHOD(thread_tmp_8_i_i_fu_291_p1);
    sensitive << ( tmp_data_3_V_reg_375 );

    SC_METHOD(thread_tmp_9_i_i_fu_299_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( simConfig_BLOCK_NUMB_reg_342 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( t_V_cast_fu_295_p1 );

    SC_METHOD(thread_voltagesBackup_address0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_5_i_i_fu_279_p1 );
    sensitive << ( tmp_7_i_i_fu_287_p1 );
    sensitive << ( tmp_13_i_i_fu_326_p1 );
    sensitive << ( tmp_13_2_i_i_fu_334_p1 );

    SC_METHOD(thread_voltagesBackup_address1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_6_i_i_fu_283_p1 );
    sensitive << ( tmp_8_i_i_fu_291_p1 );
    sensitive << ( tmp_13_1_i_i_fu_330_p1 );
    sensitive << ( tmp_13_3_i_i_fu_338_p1 );

    SC_METHOD(thread_voltagesBackup_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_voltagesBackup_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_rowsToSimulate_V_empty_n );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_3_i_i_fu_252_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( Vi_idx_V_data_V_00_status );
    sensitive << ( tmp_9_i_i_fu_299_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "writeV2calc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, voltagesBackup_address0, "(port)voltagesBackup_address0");
    sc_trace(mVcdFile, voltagesBackup_ce0, "(port)voltagesBackup_ce0");
    sc_trace(mVcdFile, voltagesBackup_q0, "(port)voltagesBackup_q0");
    sc_trace(mVcdFile, voltagesBackup_address1, "(port)voltagesBackup_address1");
    sc_trace(mVcdFile, voltagesBackup_ce1, "(port)voltagesBackup_ce1");
    sc_trace(mVcdFile, voltagesBackup_q1, "(port)voltagesBackup_q1");
    sc_trace(mVcdFile, simConfig_rowsToSimulate_V_dout, "(port)simConfig_rowsToSimulate_V_dout");
    sc_trace(mVcdFile, simConfig_rowsToSimulate_V_empty_n, "(port)simConfig_rowsToSimulate_V_empty_n");
    sc_trace(mVcdFile, simConfig_rowsToSimulate_V_read, "(port)simConfig_rowsToSimulate_V_read");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_dout, "(port)simConfig_BLOCK_NUMBERS_V_dout");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_empty_n, "(port)simConfig_BLOCK_NUMBERS_V_empty_n");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_read, "(port)simConfig_BLOCK_NUMBERS_V_read");
    sc_trace(mVcdFile, Vi_idx_V_data_V_0_dout, "(port)Vi_idx_V_data_V_0_dout");
    sc_trace(mVcdFile, Vi_idx_V_data_V_0_empty_n, "(port)Vi_idx_V_data_V_0_empty_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_0_read, "(port)Vi_idx_V_data_V_0_read");
    sc_trace(mVcdFile, Vi_idx_V_data_V_1_dout, "(port)Vi_idx_V_data_V_1_dout");
    sc_trace(mVcdFile, Vi_idx_V_data_V_1_empty_n, "(port)Vi_idx_V_data_V_1_empty_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_1_read, "(port)Vi_idx_V_data_V_1_read");
    sc_trace(mVcdFile, Vi_idx_V_data_V_2_dout, "(port)Vi_idx_V_data_V_2_dout");
    sc_trace(mVcdFile, Vi_idx_V_data_V_2_empty_n, "(port)Vi_idx_V_data_V_2_empty_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_2_read, "(port)Vi_idx_V_data_V_2_read");
    sc_trace(mVcdFile, Vi_idx_V_data_V_3_dout, "(port)Vi_idx_V_data_V_3_dout");
    sc_trace(mVcdFile, Vi_idx_V_data_V_3_empty_n, "(port)Vi_idx_V_data_V_3_empty_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_3_read, "(port)Vi_idx_V_data_V_3_read");
    sc_trace(mVcdFile, fixedData_V_data_din, "(port)fixedData_V_data_din");
    sc_trace(mVcdFile, fixedData_V_data_full_n, "(port)fixedData_V_data_full_n");
    sc_trace(mVcdFile, fixedData_V_data_write, "(port)fixedData_V_data_write");
    sc_trace(mVcdFile, fixedData_V_tlast_V_din, "(port)fixedData_V_tlast_V_din");
    sc_trace(mVcdFile, fixedData_V_tlast_V_full_n, "(port)fixedData_V_tlast_V_full_n");
    sc_trace(mVcdFile, fixedData_V_tlast_V_write, "(port)fixedData_V_tlast_V_write");
    sc_trace(mVcdFile, Vj_idx_V_data_V_0_dout, "(port)Vj_idx_V_data_V_0_dout");
    sc_trace(mVcdFile, Vj_idx_V_data_V_0_empty_n, "(port)Vj_idx_V_data_V_0_empty_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_0_read, "(port)Vj_idx_V_data_V_0_read");
    sc_trace(mVcdFile, Vj_idx_V_data_V_1_dout, "(port)Vj_idx_V_data_V_1_dout");
    sc_trace(mVcdFile, Vj_idx_V_data_V_1_empty_n, "(port)Vj_idx_V_data_V_1_empty_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_1_read, "(port)Vj_idx_V_data_V_1_read");
    sc_trace(mVcdFile, Vj_idx_V_data_V_2_dout, "(port)Vj_idx_V_data_V_2_dout");
    sc_trace(mVcdFile, Vj_idx_V_data_V_2_empty_n, "(port)Vj_idx_V_data_V_2_empty_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_2_read, "(port)Vj_idx_V_data_V_2_read");
    sc_trace(mVcdFile, Vj_idx_V_data_V_3_dout, "(port)Vj_idx_V_data_V_3_dout");
    sc_trace(mVcdFile, Vj_idx_V_data_V_3_empty_n, "(port)Vj_idx_V_data_V_3_empty_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_3_read, "(port)Vj_idx_V_data_V_3_read");
    sc_trace(mVcdFile, processedData_V_data_din, "(port)processedData_V_data_din");
    sc_trace(mVcdFile, processedData_V_data_full_n, "(port)processedData_V_data_full_n");
    sc_trace(mVcdFile, processedData_V_data_write, "(port)processedData_V_data_write");
    sc_trace(mVcdFile, processedData_V_data_1_din, "(port)processedData_V_data_1_din");
    sc_trace(mVcdFile, processedData_V_data_1_full_n, "(port)processedData_V_data_1_full_n");
    sc_trace(mVcdFile, processedData_V_data_1_write, "(port)processedData_V_data_1_write");
    sc_trace(mVcdFile, processedData_V_data_2_din, "(port)processedData_V_data_2_din");
    sc_trace(mVcdFile, processedData_V_data_2_full_n, "(port)processedData_V_data_2_full_n");
    sc_trace(mVcdFile, processedData_V_data_2_write, "(port)processedData_V_data_2_write");
    sc_trace(mVcdFile, processedData_V_data_3_din, "(port)processedData_V_data_3_din");
    sc_trace(mVcdFile, processedData_V_data_3_full_n, "(port)processedData_V_data_3_full_n");
    sc_trace(mVcdFile, processedData_V_data_3_write, "(port)processedData_V_data_3_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, simConfig_rowsToSimulate_V_blk_n, "simConfig_rowsToSimulate_V_blk_n");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_blk_n, "simConfig_BLOCK_NUMBERS_V_blk_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_0_blk_n, "Vi_idx_V_data_V_0_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_3_i_i_fu_252_p2, "tmp_3_i_i_fu_252_p2");
    sc_trace(mVcdFile, Vi_idx_V_data_V_1_blk_n, "Vi_idx_V_data_V_1_blk_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_2_blk_n, "Vi_idx_V_data_V_2_blk_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_3_blk_n, "Vi_idx_V_data_V_3_blk_n");
    sc_trace(mVcdFile, fixedData_V_data_blk_n, "fixedData_V_data_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, tmp_9_i_i_reg_420, "tmp_9_i_i_reg_420");
    sc_trace(mVcdFile, tmp_9_i_i_reg_420_pp0_iter1_reg, "tmp_9_i_i_reg_420_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, fixedData_V_tlast_V_blk_n, "fixedData_V_tlast_V_blk_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_0_blk_n, "Vj_idx_V_data_V_0_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, Vj_idx_V_data_V_1_blk_n, "Vj_idx_V_data_V_1_blk_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_2_blk_n, "Vj_idx_V_data_V_2_blk_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_3_blk_n, "Vj_idx_V_data_V_3_blk_n");
    sc_trace(mVcdFile, processedData_V_data_blk_n, "processedData_V_data_blk_n");
    sc_trace(mVcdFile, processedData_V_data_1_blk_n, "processedData_V_data_1_blk_n");
    sc_trace(mVcdFile, processedData_V_data_2_blk_n, "processedData_V_data_2_blk_n");
    sc_trace(mVcdFile, processedData_V_data_3_blk_n, "processedData_V_data_3_blk_n");
    sc_trace(mVcdFile, t_V_reg_237, "t_V_reg_237");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMB_reg_342, "simConfig_BLOCK_NUMB_reg_342");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, simConfig_rowsToSimu_reg_347, "simConfig_rowsToSimu_reg_347");
    sc_trace(mVcdFile, i_V_fu_257_p2, "i_V_fu_257_p2");
    sc_trace(mVcdFile, i_V_reg_355, "i_V_reg_355");
    sc_trace(mVcdFile, Vi_idx_V_data_V_00_status, "Vi_idx_V_data_V_00_status");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, tmp_data_0_V_reg_360, "tmp_data_0_V_reg_360");
    sc_trace(mVcdFile, tmp_data_1_V_reg_365, "tmp_data_1_V_reg_365");
    sc_trace(mVcdFile, tmp_data_2_V_reg_370, "tmp_data_2_V_reg_370");
    sc_trace(mVcdFile, tmp_data_3_V_reg_375, "tmp_data_3_V_reg_375");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_data_reg_390, "tmp_data_reg_390");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_data_1_reg_395, "tmp_data_1_reg_395");
    sc_trace(mVcdFile, tmp_data_2_reg_410, "tmp_data_2_reg_410");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_data_3_reg_415, "tmp_data_3_reg_415");
    sc_trace(mVcdFile, tmp_9_i_i_fu_299_p2, "tmp_9_i_i_fu_299_p2");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter0, "ap_block_state6_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter1, "ap_block_state10_pp0_stage0_iter1");
    sc_trace(mVcdFile, fixedData_V_data1_status, "fixedData_V_data1_status");
    sc_trace(mVcdFile, processedData_V_data1_status, "processedData_V_data1_status");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter2, "ap_block_state14_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, j_V_fu_304_p2, "j_V_fu_304_p2");
    sc_trace(mVcdFile, j_V_reg_424, "j_V_reg_424");
    sc_trace(mVcdFile, tmp_data_0_V_1_reg_429, "tmp_data_0_V_1_reg_429");
    sc_trace(mVcdFile, Vj_idx_V_data_V_00_status, "Vj_idx_V_data_V_00_status");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage1_iter0, "ap_block_state7_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage1_iter1, "ap_block_state11_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, tmp_data_1_V_1_reg_434, "tmp_data_1_V_1_reg_434");
    sc_trace(mVcdFile, tmp_data_2_V_1_reg_439, "tmp_data_2_V_1_reg_439");
    sc_trace(mVcdFile, tmp_data_3_V_1_reg_444, "tmp_data_3_V_1_reg_444");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage2_iter0, "ap_block_state8_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage2_iter1, "ap_block_state12_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, tmp_data_0_reg_459, "tmp_data_0_reg_459");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage3_iter0, "ap_block_state9_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage3_iter1, "ap_block_state13_pp0_stage3_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, tmp_data_0_reg_459_pp0_iter1_reg, "tmp_data_0_reg_459_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_data_1_12_reg_464, "tmp_data_1_12_reg_464");
    sc_trace(mVcdFile, tmp_data_1_12_reg_464_pp0_iter1_reg, "tmp_data_1_12_reg_464_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_data_2_13_reg_479, "tmp_data_2_13_reg_479");
    sc_trace(mVcdFile, tmp_data_3_14_reg_484, "tmp_data_3_14_reg_484");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state6, "ap_condition_pp0_exit_iter0_state6");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, t_V_1_reg_226, "t_V_1_reg_226");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_phi_mux_t_V_phi_fu_241_p4, "ap_phi_mux_t_V_phi_fu_241_p4");
    sc_trace(mVcdFile, tmp_5_i_i_fu_279_p1, "tmp_5_i_i_fu_279_p1");
    sc_trace(mVcdFile, tmp_6_i_i_fu_283_p1, "tmp_6_i_i_fu_283_p1");
    sc_trace(mVcdFile, tmp_7_i_i_fu_287_p1, "tmp_7_i_i_fu_287_p1");
    sc_trace(mVcdFile, tmp_8_i_i_fu_291_p1, "tmp_8_i_i_fu_291_p1");
    sc_trace(mVcdFile, tmp_13_i_i_fu_326_p1, "tmp_13_i_i_fu_326_p1");
    sc_trace(mVcdFile, tmp_13_1_i_i_fu_330_p1, "tmp_13_1_i_i_fu_330_p1");
    sc_trace(mVcdFile, tmp_13_2_i_i_fu_334_p1, "tmp_13_2_i_i_fu_334_p1");
    sc_trace(mVcdFile, tmp_13_3_i_i_fu_338_p1, "tmp_13_3_i_i_fu_338_p1");
    sc_trace(mVcdFile, Vi_idx_V_data_V_00_update, "Vi_idx_V_data_V_00_update");
    sc_trace(mVcdFile, Vj_idx_V_data_V_00_update, "Vj_idx_V_data_V_00_update");
    sc_trace(mVcdFile, fixedData_V_data1_update, "fixedData_V_data1_update");
    sc_trace(mVcdFile, ap_block_pp0_stage1_01001, "ap_block_pp0_stage1_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage2_01001, "ap_block_pp0_stage2_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage3_01001, "ap_block_pp0_stage3_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, processedData_V_data1_update, "processedData_V_data1_update");
    sc_trace(mVcdFile, t_V_1_cast_fu_248_p1, "t_V_1_cast_fu_248_p1");
    sc_trace(mVcdFile, t_V_cast_fu_295_p1, "t_V_cast_fu_295_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_402, "ap_condition_402");
    sc_trace(mVcdFile, ap_condition_407, "ap_condition_407");
    sc_trace(mVcdFile, ap_condition_412, "ap_condition_412");
    sc_trace(mVcdFile, ap_condition_417, "ap_condition_417");
#endif

    }
}

writeV2calc::~writeV2calc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void writeV2calc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    !(esl_seteq<1,1,1>(tmp_3_i_i_fu_252_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, Vi_idx_V_data_V_00_status.read())) && 
                    esl_seteq<1,1,1>(tmp_3_i_i_fu_252_p2.read(), ap_const_lv1_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state6.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        t_V_1_reg_226 = i_V_reg_355.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowsToSimulate_V_empty_n.read())))) {
        t_V_1_reg_226 = ap_const_lv12_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        t_V_reg_237 = ap_const_lv26_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        t_V_reg_237 = j_V_reg_424.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(tmp_3_i_i_fu_252_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, Vi_idx_V_data_V_00_status.read())))) {
        i_V_reg_355 = i_V_fu_257_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        j_V_reg_424 = j_V_fu_304_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowsToSimulate_V_empty_n.read())))) {
        simConfig_BLOCK_NUMB_reg_342 = simConfig_BLOCK_NUMBERS_V_dout.read();
        simConfig_rowsToSimu_reg_347 = simConfig_rowsToSimulate_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_9_i_i_reg_420 = tmp_9_i_i_fu_299_p2.read();
        tmp_9_i_i_reg_420_pp0_iter1_reg = tmp_9_i_i_reg_420.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        tmp_data_0_V_1_reg_429 = Vj_idx_V_data_V_0_dout.read();
        tmp_data_1_V_1_reg_434 = Vj_idx_V_data_V_1_dout.read();
        tmp_data_2_V_1_reg_439 = Vj_idx_V_data_V_2_dout.read();
        tmp_data_3_V_1_reg_444 = Vj_idx_V_data_V_3_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_3_i_i_fu_252_p2.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(tmp_3_i_i_fu_252_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, Vi_idx_V_data_V_00_status.read())))) {
        tmp_data_0_V_reg_360 = Vi_idx_V_data_V_0_dout.read();
        tmp_data_1_V_reg_365 = Vi_idx_V_data_V_1_dout.read();
        tmp_data_2_V_reg_370 = Vi_idx_V_data_V_2_dout.read();
        tmp_data_3_V_reg_375 = Vi_idx_V_data_V_3_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        tmp_data_0_reg_459 = voltagesBackup_q0.read();
        tmp_data_1_12_reg_464 = voltagesBackup_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        tmp_data_0_reg_459_pp0_iter1_reg = tmp_data_0_reg_459.read();
        tmp_data_1_12_reg_464_pp0_iter1_reg = tmp_data_1_12_reg_464.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_data_1_reg_395 = voltagesBackup_q1.read();
        tmp_data_reg_390 = voltagesBackup_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_data_2_13_reg_479 = voltagesBackup_q0.read();
        tmp_data_3_14_reg_484 = voltagesBackup_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_data_2_reg_410 = voltagesBackup_q0.read();
        tmp_data_3_reg_415 = voltagesBackup_q1.read();
    }
}

void writeV2calc::thread_Vi_idx_V_data_V_00_status() {
    Vi_idx_V_data_V_00_status = (Vi_idx_V_data_V_0_empty_n.read() & Vi_idx_V_data_V_1_empty_n.read() & Vi_idx_V_data_V_2_empty_n.read() & Vi_idx_V_data_V_3_empty_n.read());
}

void writeV2calc::thread_Vi_idx_V_data_V_00_update() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_3_i_i_fu_252_p2.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(tmp_3_i_i_fu_252_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, Vi_idx_V_data_V_00_status.read())))) {
        Vi_idx_V_data_V_00_update = ap_const_logic_1;
    } else {
        Vi_idx_V_data_V_00_update = ap_const_logic_0;
    }
}

void writeV2calc::thread_Vi_idx_V_data_V_0_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_3_i_i_fu_252_p2.read(), ap_const_lv1_1))) {
        Vi_idx_V_data_V_0_blk_n = Vi_idx_V_data_V_0_empty_n.read();
    } else {
        Vi_idx_V_data_V_0_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_Vi_idx_V_data_V_0_read() {
    Vi_idx_V_data_V_0_read = Vi_idx_V_data_V_00_update.read();
}

void writeV2calc::thread_Vi_idx_V_data_V_1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_3_i_i_fu_252_p2.read(), ap_const_lv1_1))) {
        Vi_idx_V_data_V_1_blk_n = Vi_idx_V_data_V_1_empty_n.read();
    } else {
        Vi_idx_V_data_V_1_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_Vi_idx_V_data_V_1_read() {
    Vi_idx_V_data_V_1_read = Vi_idx_V_data_V_00_update.read();
}

void writeV2calc::thread_Vi_idx_V_data_V_2_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_3_i_i_fu_252_p2.read(), ap_const_lv1_1))) {
        Vi_idx_V_data_V_2_blk_n = Vi_idx_V_data_V_2_empty_n.read();
    } else {
        Vi_idx_V_data_V_2_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_Vi_idx_V_data_V_2_read() {
    Vi_idx_V_data_V_2_read = Vi_idx_V_data_V_00_update.read();
}

void writeV2calc::thread_Vi_idx_V_data_V_3_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_3_i_i_fu_252_p2.read(), ap_const_lv1_1))) {
        Vi_idx_V_data_V_3_blk_n = Vi_idx_V_data_V_3_empty_n.read();
    } else {
        Vi_idx_V_data_V_3_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_Vi_idx_V_data_V_3_read() {
    Vi_idx_V_data_V_3_read = Vi_idx_V_data_V_00_update.read();
}

void writeV2calc::thread_Vj_idx_V_data_V_00_status() {
    Vj_idx_V_data_V_00_status = (Vj_idx_V_data_V_0_empty_n.read() & Vj_idx_V_data_V_1_empty_n.read() & Vj_idx_V_data_V_2_empty_n.read() & Vj_idx_V_data_V_3_empty_n.read());
}

void writeV2calc::thread_Vj_idx_V_data_V_00_update() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        Vj_idx_V_data_V_00_update = ap_const_logic_1;
    } else {
        Vj_idx_V_data_V_00_update = ap_const_logic_0;
    }
}

void writeV2calc::thread_Vj_idx_V_data_V_0_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420.read()))) {
        Vj_idx_V_data_V_0_blk_n = Vj_idx_V_data_V_0_empty_n.read();
    } else {
        Vj_idx_V_data_V_0_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_Vj_idx_V_data_V_0_read() {
    Vj_idx_V_data_V_0_read = Vj_idx_V_data_V_00_update.read();
}

void writeV2calc::thread_Vj_idx_V_data_V_1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420.read()))) {
        Vj_idx_V_data_V_1_blk_n = Vj_idx_V_data_V_1_empty_n.read();
    } else {
        Vj_idx_V_data_V_1_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_Vj_idx_V_data_V_1_read() {
    Vj_idx_V_data_V_1_read = Vj_idx_V_data_V_00_update.read();
}

void writeV2calc::thread_Vj_idx_V_data_V_2_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420.read()))) {
        Vj_idx_V_data_V_2_blk_n = Vj_idx_V_data_V_2_empty_n.read();
    } else {
        Vj_idx_V_data_V_2_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_Vj_idx_V_data_V_2_read() {
    Vj_idx_V_data_V_2_read = Vj_idx_V_data_V_00_update.read();
}

void writeV2calc::thread_Vj_idx_V_data_V_3_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420.read()))) {
        Vj_idx_V_data_V_3_blk_n = Vj_idx_V_data_V_3_empty_n.read();
    } else {
        Vj_idx_V_data_V_3_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_Vj_idx_V_data_V_3_read() {
    Vj_idx_V_data_V_3_read = Vj_idx_V_data_V_00_update.read();
}

void writeV2calc::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[5];
}

void writeV2calc::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[6];
}

void writeV2calc::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[7];
}

void writeV2calc::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[8];
}

void writeV2calc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void writeV2calc::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[9];
}

void writeV2calc::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void writeV2calc::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void writeV2calc::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void writeV2calc::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void writeV2calc::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void writeV2calc::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, fixedData_V_data1_status.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, processedData_V_data1_status.read()))));
}

void writeV2calc::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, fixedData_V_data1_status.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, processedData_V_data1_status.read()))));
}

void writeV2calc::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, fixedData_V_data1_status.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, processedData_V_data1_status.read()))));
}

void writeV2calc::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void writeV2calc::thread_ap_block_pp0_stage1_01001() {
    ap_block_pp0_stage1_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Vj_idx_V_data_V_00_status.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, fixedData_V_data1_status.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, processedData_V_data1_status.read())))));
}

void writeV2calc::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Vj_idx_V_data_V_00_status.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, fixedData_V_data1_status.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, processedData_V_data1_status.read())))));
}

void writeV2calc::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Vj_idx_V_data_V_00_status.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, fixedData_V_data1_status.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, processedData_V_data1_status.read())))));
}

void writeV2calc::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void writeV2calc::thread_ap_block_pp0_stage2_01001() {
    ap_block_pp0_stage2_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, fixedData_V_data1_status.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, processedData_V_data1_status.read()))));
}

void writeV2calc::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, fixedData_V_data1_status.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, processedData_V_data1_status.read()))));
}

void writeV2calc::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, fixedData_V_data1_status.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, processedData_V_data1_status.read()))));
}

void writeV2calc::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void writeV2calc::thread_ap_block_pp0_stage3_01001() {
    ap_block_pp0_stage3_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, fixedData_V_data1_status.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, processedData_V_data1_status.read()))));
}

void writeV2calc::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, fixedData_V_data1_status.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, processedData_V_data1_status.read()))));
}

void writeV2calc::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, fixedData_V_data1_status.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, processedData_V_data1_status.read()))));
}

void writeV2calc::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowsToSimulate_V_empty_n.read()));
}

void writeV2calc::thread_ap_block_state10_pp0_stage0_iter1() {
    ap_block_state10_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void writeV2calc::thread_ap_block_state11_pp0_stage1_iter1() {
    ap_block_state11_pp0_stage1_iter1 = ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fixedData_V_data1_status.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, processedData_V_data1_status.read())));
}

void writeV2calc::thread_ap_block_state12_pp0_stage2_iter1() {
    ap_block_state12_pp0_stage2_iter1 = ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fixedData_V_data1_status.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, processedData_V_data1_status.read())));
}

void writeV2calc::thread_ap_block_state13_pp0_stage3_iter1() {
    ap_block_state13_pp0_stage3_iter1 = ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fixedData_V_data1_status.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, processedData_V_data1_status.read())));
}

void writeV2calc::thread_ap_block_state14_pp0_stage0_iter2() {
    ap_block_state14_pp0_stage0_iter2 = ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fixedData_V_data1_status.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, processedData_V_data1_status.read())));
}

void writeV2calc::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(tmp_3_i_i_fu_252_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, Vi_idx_V_data_V_00_status.read()));
}

void writeV2calc::thread_ap_block_state6_pp0_stage0_iter0() {
    ap_block_state6_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void writeV2calc::thread_ap_block_state7_pp0_stage1_iter0() {
    ap_block_state7_pp0_stage1_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420.read()) && esl_seteq<1,1,1>(ap_const_logic_0, Vj_idx_V_data_V_00_status.read()));
}

void writeV2calc::thread_ap_block_state8_pp0_stage2_iter0() {
    ap_block_state8_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void writeV2calc::thread_ap_block_state9_pp0_stage3_iter0() {
    ap_block_state9_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void writeV2calc::thread_ap_condition_402() {
    ap_condition_402 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_01001.read(), ap_const_boolean_0));
}

void writeV2calc::thread_ap_condition_407() {
    ap_condition_407 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0));
}

void writeV2calc::thread_ap_condition_412() {
    ap_condition_412 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_01001.read(), ap_const_boolean_0));
}

void writeV2calc::thread_ap_condition_417() {
    ap_condition_417 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0));
}

void writeV2calc::thread_ap_condition_pp0_exit_iter0_state6() {
    if (esl_seteq<1,1,1>(tmp_9_i_i_fu_299_p2.read(), ap_const_lv1_0)) {
        ap_condition_pp0_exit_iter0_state6 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state6 = ap_const_logic_0;
    }
}

void writeV2calc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(tmp_3_i_i_fu_252_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, Vi_idx_V_data_V_00_status.read())) && 
         esl_seteq<1,1,1>(tmp_3_i_i_fu_252_p2.read(), ap_const_lv1_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void writeV2calc::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void writeV2calc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void writeV2calc::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void writeV2calc::thread_ap_phi_mux_t_V_phi_fu_241_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420.read()))) {
        ap_phi_mux_t_V_phi_fu_241_p4 = j_V_reg_424.read();
    } else {
        ap_phi_mux_t_V_phi_fu_241_p4 = t_V_reg_237.read();
    }
}

void writeV2calc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(tmp_3_i_i_fu_252_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, Vi_idx_V_data_V_00_status.read())) && 
         esl_seteq<1,1,1>(tmp_3_i_i_fu_252_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void writeV2calc::thread_fixedData_V_data1_status() {
    fixedData_V_data1_status = (fixedData_V_data_full_n.read() & fixedData_V_tlast_V_full_n.read());
}

void writeV2calc::thread_fixedData_V_data1_update() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        fixedData_V_data1_update = ap_const_logic_1;
    } else {
        fixedData_V_data1_update = ap_const_logic_0;
    }
}

void writeV2calc::thread_fixedData_V_data_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        fixedData_V_data_blk_n = fixedData_V_data_full_n.read();
    } else {
        fixedData_V_data_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_fixedData_V_data_din() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read())) {
        if (esl_seteq<1,1,1>(ap_condition_417.read(), ap_const_boolean_1)) {
            fixedData_V_data_din = tmp_data_3_reg_415.read();
        } else if (esl_seteq<1,1,1>(ap_condition_412.read(), ap_const_boolean_1)) {
            fixedData_V_data_din = tmp_data_2_reg_410.read();
        } else if (esl_seteq<1,1,1>(ap_condition_407.read(), ap_const_boolean_1)) {
            fixedData_V_data_din = tmp_data_1_reg_395.read();
        } else if (esl_seteq<1,1,1>(ap_condition_402.read(), ap_const_boolean_1)) {
            fixedData_V_data_din = tmp_data_reg_390.read();
        } else {
            fixedData_V_data_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        fixedData_V_data_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void writeV2calc::thread_fixedData_V_data_write() {
    fixedData_V_data_write = fixedData_V_data1_update.read();
}

void writeV2calc::thread_fixedData_V_tlast_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        fixedData_V_tlast_V_blk_n = fixedData_V_tlast_V_full_n.read();
    } else {
        fixedData_V_tlast_V_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_fixedData_V_tlast_V_din() {
    fixedData_V_tlast_V_din = ap_const_lv1_0;
}

void writeV2calc::thread_fixedData_V_tlast_V_write() {
    fixedData_V_tlast_V_write = fixedData_V_data1_update.read();
}

void writeV2calc::thread_i_V_fu_257_p2() {
    i_V_fu_257_p2 = (!t_V_1_reg_226.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(t_V_1_reg_226.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void writeV2calc::thread_j_V_fu_304_p2() {
    j_V_fu_304_p2 = (!ap_phi_mux_t_V_phi_fu_241_p4.read().is_01() || !ap_const_lv26_1.is_01())? sc_lv<26>(): (sc_biguint<26>(ap_phi_mux_t_V_phi_fu_241_p4.read()) + sc_biguint<26>(ap_const_lv26_1));
}

void writeV2calc::thread_processedData_V_data1_status() {
    processedData_V_data1_status = (processedData_V_data_full_n.read() & processedData_V_data_1_full_n.read() & processedData_V_data_2_full_n.read() & processedData_V_data_3_full_n.read());
}

void writeV2calc::thread_processedData_V_data1_update() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        processedData_V_data1_update = ap_const_logic_1;
    } else {
        processedData_V_data1_update = ap_const_logic_0;
    }
}

void writeV2calc::thread_processedData_V_data_1_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        processedData_V_data_1_blk_n = processedData_V_data_1_full_n.read();
    } else {
        processedData_V_data_1_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_processedData_V_data_1_din() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        processedData_V_data_1_din = tmp_data_1_12_reg_464_pp0_iter1_reg.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage1_01001.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage3_01001.read(), ap_const_boolean_0)))) {
        processedData_V_data_1_din = tmp_data_1_12_reg_464.read();
    } else {
        processedData_V_data_1_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void writeV2calc::thread_processedData_V_data_1_write() {
    processedData_V_data_1_write = processedData_V_data1_update.read();
}

void writeV2calc::thread_processedData_V_data_2_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        processedData_V_data_2_blk_n = processedData_V_data_2_full_n.read();
    } else {
        processedData_V_data_2_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_processedData_V_data_2_din() {
    processedData_V_data_2_din = tmp_data_2_13_reg_479.read();
}

void writeV2calc::thread_processedData_V_data_2_write() {
    processedData_V_data_2_write = processedData_V_data1_update.read();
}

void writeV2calc::thread_processedData_V_data_3_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        processedData_V_data_3_blk_n = processedData_V_data_3_full_n.read();
    } else {
        processedData_V_data_3_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_processedData_V_data_3_din() {
    processedData_V_data_3_din = tmp_data_3_14_reg_484.read();
}

void writeV2calc::thread_processedData_V_data_3_write() {
    processedData_V_data_3_write = processedData_V_data1_update.read();
}

void writeV2calc::thread_processedData_V_data_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        processedData_V_data_blk_n = processedData_V_data_full_n.read();
    } else {
        processedData_V_data_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_processedData_V_data_din() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        processedData_V_data_din = tmp_data_0_reg_459_pp0_iter1_reg.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage1_01001.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_i_reg_420_pp0_iter1_reg.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage3_01001.read(), ap_const_boolean_0)))) {
        processedData_V_data_din = tmp_data_0_reg_459.read();
    } else {
        processedData_V_data_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void writeV2calc::thread_processedData_V_data_write() {
    processedData_V_data_write = processedData_V_data1_update.read();
}

void writeV2calc::thread_simConfig_BLOCK_NUMBERS_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        simConfig_BLOCK_NUMBERS_V_blk_n = simConfig_BLOCK_NUMBERS_V_empty_n.read();
    } else {
        simConfig_BLOCK_NUMBERS_V_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_simConfig_BLOCK_NUMBERS_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowsToSimulate_V_empty_n.read())))) {
        simConfig_BLOCK_NUMBERS_V_read = ap_const_logic_1;
    } else {
        simConfig_BLOCK_NUMBERS_V_read = ap_const_logic_0;
    }
}

void writeV2calc::thread_simConfig_rowsToSimulate_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        simConfig_rowsToSimulate_V_blk_n = simConfig_rowsToSimulate_V_empty_n.read();
    } else {
        simConfig_rowsToSimulate_V_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_simConfig_rowsToSimulate_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowsToSimulate_V_empty_n.read())))) {
        simConfig_rowsToSimulate_V_read = ap_const_logic_1;
    } else {
        simConfig_rowsToSimulate_V_read = ap_const_logic_0;
    }
}

void writeV2calc::thread_t_V_1_cast_fu_248_p1() {
    t_V_1_cast_fu_248_p1 = esl_zext<27,12>(t_V_1_reg_226.read());
}

void writeV2calc::thread_t_V_cast_fu_295_p1() {
    t_V_cast_fu_295_p1 = esl_zext<27,26>(ap_phi_mux_t_V_phi_fu_241_p4.read());
}

void writeV2calc::thread_tmp_13_1_i_i_fu_330_p1() {
    tmp_13_1_i_i_fu_330_p1 = esl_zext<64,27>(tmp_data_1_V_1_reg_434.read());
}

void writeV2calc::thread_tmp_13_2_i_i_fu_334_p1() {
    tmp_13_2_i_i_fu_334_p1 = esl_zext<64,27>(tmp_data_2_V_1_reg_439.read());
}

void writeV2calc::thread_tmp_13_3_i_i_fu_338_p1() {
    tmp_13_3_i_i_fu_338_p1 = esl_zext<64,27>(tmp_data_3_V_1_reg_444.read());
}

void writeV2calc::thread_tmp_13_i_i_fu_326_p1() {
    tmp_13_i_i_fu_326_p1 = esl_zext<64,27>(tmp_data_0_V_1_reg_429.read());
}

void writeV2calc::thread_tmp_3_i_i_fu_252_p2() {
    tmp_3_i_i_fu_252_p2 = (!t_V_1_cast_fu_248_p1.read().is_01() || !simConfig_rowsToSimu_reg_347.read().is_01())? sc_lv<1>(): (sc_bigint<27>(t_V_1_cast_fu_248_p1.read()) < sc_bigint<27>(simConfig_rowsToSimu_reg_347.read()));
}

void writeV2calc::thread_tmp_5_i_i_fu_279_p1() {
    tmp_5_i_i_fu_279_p1 = esl_zext<64,27>(tmp_data_0_V_reg_360.read());
}

void writeV2calc::thread_tmp_6_i_i_fu_283_p1() {
    tmp_6_i_i_fu_283_p1 = esl_zext<64,27>(tmp_data_1_V_reg_365.read());
}

void writeV2calc::thread_tmp_7_i_i_fu_287_p1() {
    tmp_7_i_i_fu_287_p1 = esl_zext<64,27>(tmp_data_2_V_reg_370.read());
}

void writeV2calc::thread_tmp_8_i_i_fu_291_p1() {
    tmp_8_i_i_fu_291_p1 = esl_zext<64,27>(tmp_data_3_V_reg_375.read());
}

void writeV2calc::thread_tmp_9_i_i_fu_299_p2() {
    tmp_9_i_i_fu_299_p2 = (!t_V_cast_fu_295_p1.read().is_01() || !simConfig_BLOCK_NUMB_reg_342.read().is_01())? sc_lv<1>(): (sc_bigint<27>(t_V_cast_fu_295_p1.read()) < sc_bigint<27>(simConfig_BLOCK_NUMB_reg_342.read()));
}

void writeV2calc::thread_voltagesBackup_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        voltagesBackup_address0 =  (sc_lv<14>) (tmp_13_2_i_i_fu_334_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        voltagesBackup_address0 =  (sc_lv<14>) (tmp_13_i_i_fu_326_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        voltagesBackup_address0 =  (sc_lv<14>) (tmp_7_i_i_fu_287_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        voltagesBackup_address0 =  (sc_lv<14>) (tmp_5_i_i_fu_279_p1.read());
    } else {
        voltagesBackup_address0 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void writeV2calc::thread_voltagesBackup_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        voltagesBackup_address1 =  (sc_lv<14>) (tmp_13_3_i_i_fu_338_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        voltagesBackup_address1 =  (sc_lv<14>) (tmp_13_1_i_i_fu_330_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        voltagesBackup_address1 =  (sc_lv<14>) (tmp_8_i_i_fu_291_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        voltagesBackup_address1 =  (sc_lv<14>) (tmp_6_i_i_fu_283_p1.read());
    } else {
        voltagesBackup_address1 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void writeV2calc::thread_voltagesBackup_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        voltagesBackup_ce0 = ap_const_logic_1;
    } else {
        voltagesBackup_ce0 = ap_const_logic_0;
    }
}

void writeV2calc::thread_voltagesBackup_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        voltagesBackup_ce1 = ap_const_logic_1;
    } else {
        voltagesBackup_ce1 = ap_const_logic_0;
    }
}

void writeV2calc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_BLOCK_NUMBERS_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, simConfig_rowsToSimulate_V_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(tmp_3_i_i_fu_252_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, Vi_idx_V_data_V_00_status.read())) && esl_seteq<1,1,1>(tmp_3_i_i_fu_252_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_3_i_i_fu_252_p2.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(tmp_3_i_i_fu_252_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, Vi_idx_V_data_V_00_status.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_9_i_i_fu_299_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(tmp_9_i_i_fu_299_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 128 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 256 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

}

