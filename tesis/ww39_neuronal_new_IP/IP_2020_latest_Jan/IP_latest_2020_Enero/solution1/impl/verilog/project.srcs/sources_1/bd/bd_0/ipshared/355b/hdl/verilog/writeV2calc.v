// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module writeV2calc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        voltagesBackup_address0,
        voltagesBackup_ce0,
        voltagesBackup_q0,
        voltagesBackup_address1,
        voltagesBackup_ce1,
        voltagesBackup_q1,
        simConfig_rowsToSimulate_V_dout,
        simConfig_rowsToSimulate_V_empty_n,
        simConfig_rowsToSimulate_V_read,
        simConfig_BLOCK_NUMBERS_V_dout,
        simConfig_BLOCK_NUMBERS_V_empty_n,
        simConfig_BLOCK_NUMBERS_V_read,
        Vi_idx_V_data_V_0_dout,
        Vi_idx_V_data_V_0_empty_n,
        Vi_idx_V_data_V_0_read,
        Vi_idx_V_data_V_1_dout,
        Vi_idx_V_data_V_1_empty_n,
        Vi_idx_V_data_V_1_read,
        Vi_idx_V_data_V_2_dout,
        Vi_idx_V_data_V_2_empty_n,
        Vi_idx_V_data_V_2_read,
        Vi_idx_V_data_V_3_dout,
        Vi_idx_V_data_V_3_empty_n,
        Vi_idx_V_data_V_3_read,
        fixedData_V_data_din,
        fixedData_V_data_full_n,
        fixedData_V_data_write,
        fixedData_V_tlast_V_din,
        fixedData_V_tlast_V_full_n,
        fixedData_V_tlast_V_write,
        Vj_idx_V_data_V_0_dout,
        Vj_idx_V_data_V_0_empty_n,
        Vj_idx_V_data_V_0_read,
        Vj_idx_V_data_V_1_dout,
        Vj_idx_V_data_V_1_empty_n,
        Vj_idx_V_data_V_1_read,
        Vj_idx_V_data_V_2_dout,
        Vj_idx_V_data_V_2_empty_n,
        Vj_idx_V_data_V_2_read,
        Vj_idx_V_data_V_3_dout,
        Vj_idx_V_data_V_3_empty_n,
        Vj_idx_V_data_V_3_read,
        processedData_V_data_din,
        processedData_V_data_full_n,
        processedData_V_data_write,
        processedData_V_data_1_din,
        processedData_V_data_1_full_n,
        processedData_V_data_1_write,
        processedData_V_data_2_din,
        processedData_V_data_2_full_n,
        processedData_V_data_2_write,
        processedData_V_data_3_din,
        processedData_V_data_3_full_n,
        processedData_V_data_3_write
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_pp0_stage0 = 10'd32;
parameter    ap_ST_fsm_pp0_stage1 = 10'd64;
parameter    ap_ST_fsm_pp0_stage2 = 10'd128;
parameter    ap_ST_fsm_pp0_stage3 = 10'd256;
parameter    ap_ST_fsm_state15 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [13:0] voltagesBackup_address0;
output   voltagesBackup_ce0;
input  [31:0] voltagesBackup_q0;
output  [13:0] voltagesBackup_address1;
output   voltagesBackup_ce1;
input  [31:0] voltagesBackup_q1;
input  [26:0] simConfig_rowsToSimulate_V_dout;
input   simConfig_rowsToSimulate_V_empty_n;
output   simConfig_rowsToSimulate_V_read;
input  [26:0] simConfig_BLOCK_NUMBERS_V_dout;
input   simConfig_BLOCK_NUMBERS_V_empty_n;
output   simConfig_BLOCK_NUMBERS_V_read;
input  [26:0] Vi_idx_V_data_V_0_dout;
input   Vi_idx_V_data_V_0_empty_n;
output   Vi_idx_V_data_V_0_read;
input  [26:0] Vi_idx_V_data_V_1_dout;
input   Vi_idx_V_data_V_1_empty_n;
output   Vi_idx_V_data_V_1_read;
input  [26:0] Vi_idx_V_data_V_2_dout;
input   Vi_idx_V_data_V_2_empty_n;
output   Vi_idx_V_data_V_2_read;
input  [26:0] Vi_idx_V_data_V_3_dout;
input   Vi_idx_V_data_V_3_empty_n;
output   Vi_idx_V_data_V_3_read;
output  [31:0] fixedData_V_data_din;
input   fixedData_V_data_full_n;
output   fixedData_V_data_write;
output  [0:0] fixedData_V_tlast_V_din;
input   fixedData_V_tlast_V_full_n;
output   fixedData_V_tlast_V_write;
input  [26:0] Vj_idx_V_data_V_0_dout;
input   Vj_idx_V_data_V_0_empty_n;
output   Vj_idx_V_data_V_0_read;
input  [26:0] Vj_idx_V_data_V_1_dout;
input   Vj_idx_V_data_V_1_empty_n;
output   Vj_idx_V_data_V_1_read;
input  [26:0] Vj_idx_V_data_V_2_dout;
input   Vj_idx_V_data_V_2_empty_n;
output   Vj_idx_V_data_V_2_read;
input  [26:0] Vj_idx_V_data_V_3_dout;
input   Vj_idx_V_data_V_3_empty_n;
output   Vj_idx_V_data_V_3_read;
output  [31:0] processedData_V_data_din;
input   processedData_V_data_full_n;
output   processedData_V_data_write;
output  [31:0] processedData_V_data_1_din;
input   processedData_V_data_1_full_n;
output   processedData_V_data_1_write;
output  [31:0] processedData_V_data_2_din;
input   processedData_V_data_2_full_n;
output   processedData_V_data_2_write;
output  [31:0] processedData_V_data_3_din;
input   processedData_V_data_3_full_n;
output   processedData_V_data_3_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] voltagesBackup_address0;
reg voltagesBackup_ce0;
reg[13:0] voltagesBackup_address1;
reg voltagesBackup_ce1;
reg simConfig_rowsToSimulate_V_read;
reg simConfig_BLOCK_NUMBERS_V_read;
reg[31:0] fixedData_V_data_din;
reg[31:0] processedData_V_data_din;
reg[31:0] processedData_V_data_1_din;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    simConfig_rowsToSimulate_V_blk_n;
reg    simConfig_BLOCK_NUMBERS_V_blk_n;
reg    Vi_idx_V_data_V_0_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_3_i_i_fu_252_p2;
reg    Vi_idx_V_data_V_1_blk_n;
reg    Vi_idx_V_data_V_2_blk_n;
reg    Vi_idx_V_data_V_3_blk_n;
reg    fixedData_V_data_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1;
reg   [0:0] tmp_9_i_i_reg_420;
reg   [0:0] tmp_9_i_i_reg_420_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg    fixedData_V_tlast_V_blk_n;
reg    Vj_idx_V_data_V_0_blk_n;
reg    ap_enable_reg_pp0_iter0;
reg    Vj_idx_V_data_V_1_blk_n;
reg    Vj_idx_V_data_V_2_blk_n;
reg    Vj_idx_V_data_V_3_blk_n;
reg    processedData_V_data_blk_n;
reg    processedData_V_data_1_blk_n;
reg    processedData_V_data_2_blk_n;
reg    processedData_V_data_3_blk_n;
reg   [25:0] t_V_reg_237;
reg   [26:0] simConfig_BLOCK_NUMB_reg_342;
reg    ap_block_state1;
reg   [26:0] simConfig_rowsToSimu_reg_347;
wire   [11:0] i_V_fu_257_p2;
reg   [11:0] i_V_reg_355;
wire    Vi_idx_V_data_V_00_status;
reg    ap_block_state2;
reg   [26:0] tmp_data_0_V_reg_360;
reg   [26:0] tmp_data_1_V_reg_365;
reg   [26:0] tmp_data_2_V_reg_370;
reg   [26:0] tmp_data_3_V_reg_375;
wire    ap_CS_fsm_state3;
reg   [31:0] tmp_data_reg_390;
wire    ap_CS_fsm_state4;
reg   [31:0] tmp_data_1_reg_395;
reg   [31:0] tmp_data_2_reg_410;
wire    ap_CS_fsm_state5;
reg   [31:0] tmp_data_3_reg_415;
wire   [0:0] tmp_9_i_i_fu_299_p2;
wire    ap_block_state6_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    fixedData_V_data1_status;
wire    processedData_V_data1_status;
reg    ap_block_state14_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [25:0] j_V_fu_304_p2;
reg   [25:0] j_V_reg_424;
reg   [26:0] tmp_data_0_V_1_reg_429;
wire    Vj_idx_V_data_V_00_status;
reg    ap_block_state7_pp0_stage1_iter0;
reg    ap_block_state11_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg   [26:0] tmp_data_1_V_1_reg_434;
reg   [26:0] tmp_data_2_V_1_reg_439;
reg   [26:0] tmp_data_3_V_1_reg_444;
wire    ap_block_state8_pp0_stage2_iter0;
reg    ap_block_state12_pp0_stage2_iter1;
reg    ap_block_pp0_stage2_11001;
reg   [31:0] tmp_data_0_reg_459;
wire    ap_block_state9_pp0_stage3_iter0;
reg    ap_block_state13_pp0_stage3_iter1;
reg    ap_block_pp0_stage3_11001;
reg   [31:0] tmp_data_0_reg_459_pp0_iter1_reg;
reg   [31:0] tmp_data_1_12_reg_464;
reg   [31:0] tmp_data_1_12_reg_464_pp0_iter1_reg;
reg   [31:0] tmp_data_2_13_reg_479;
reg   [31:0] tmp_data_3_14_reg_484;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_block_pp0_stage3_subdone;
reg   [11:0] t_V_1_reg_226;
wire    ap_CS_fsm_state15;
reg   [25:0] ap_phi_mux_t_V_phi_fu_241_p4;
wire   [63:0] tmp_5_i_i_fu_279_p1;
wire   [63:0] tmp_6_i_i_fu_283_p1;
wire   [63:0] tmp_7_i_i_fu_287_p1;
wire   [63:0] tmp_8_i_i_fu_291_p1;
wire   [63:0] tmp_13_i_i_fu_326_p1;
wire   [63:0] tmp_13_1_i_i_fu_330_p1;
wire   [63:0] tmp_13_2_i_i_fu_334_p1;
wire   [63:0] tmp_13_3_i_i_fu_338_p1;
reg    Vi_idx_V_data_V_00_update;
reg    Vj_idx_V_data_V_00_update;
reg    fixedData_V_data1_update;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_pp0_stage3_01001;
reg    ap_block_pp0_stage0_01001;
reg    processedData_V_data1_update;
wire   [26:0] t_V_1_cast_fu_248_p1;
wire   [26:0] t_V_cast_fu_295_p1;
reg   [9:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_402;
reg    ap_condition_407;
reg    ap_condition_412;
reg    ap_condition_417;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((1'b0 == Vi_idx_V_data_V_00_status) & (tmp_3_i_i_fu_252_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state2) & (tmp_3_i_i_fu_252_p2 == 1'd0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        t_V_1_reg_226 <= i_V_reg_355;
    end else if ((~((simConfig_BLOCK_NUMBERS_V_empty_n == 1'b0) | (simConfig_rowsToSimulate_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_1_reg_226 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        t_V_reg_237 <= 26'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_9_i_i_reg_420 == 1'd1))) begin
        t_V_reg_237 <= j_V_reg_424;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Vi_idx_V_data_V_00_status) & (tmp_3_i_i_fu_252_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state2))) begin
        i_V_reg_355 <= i_V_fu_257_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_V_reg_424 <= j_V_fu_304_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((simConfig_BLOCK_NUMBERS_V_empty_n == 1'b0) | (simConfig_rowsToSimulate_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        simConfig_BLOCK_NUMB_reg_342 <= simConfig_BLOCK_NUMBERS_V_dout;
        simConfig_rowsToSimu_reg_347 <= simConfig_rowsToSimulate_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_9_i_i_reg_420 <= tmp_9_i_i_fu_299_p2;
        tmp_9_i_i_reg_420_pp0_iter1_reg <= tmp_9_i_i_reg_420;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_9_i_i_reg_420 == 1'd1))) begin
        tmp_data_0_V_1_reg_429 <= Vj_idx_V_data_V_0_dout;
        tmp_data_1_V_1_reg_434 <= Vj_idx_V_data_V_1_dout;
        tmp_data_2_V_1_reg_439 <= Vj_idx_V_data_V_2_dout;
        tmp_data_3_V_1_reg_444 <= Vj_idx_V_data_V_3_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Vi_idx_V_data_V_00_status) & (tmp_3_i_i_fu_252_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state2) & (tmp_3_i_i_fu_252_p2 == 1'd1))) begin
        tmp_data_0_V_reg_360 <= Vi_idx_V_data_V_0_dout;
        tmp_data_1_V_reg_365 <= Vi_idx_V_data_V_1_dout;
        tmp_data_2_V_reg_370 <= Vi_idx_V_data_V_2_dout;
        tmp_data_3_V_reg_375 <= Vi_idx_V_data_V_3_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (tmp_9_i_i_reg_420 == 1'd1))) begin
        tmp_data_0_reg_459 <= voltagesBackup_q0;
        tmp_data_1_12_reg_464 <= voltagesBackup_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_data_0_reg_459_pp0_iter1_reg <= tmp_data_0_reg_459;
        tmp_data_1_12_reg_464_pp0_iter1_reg <= tmp_data_1_12_reg_464;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_data_1_reg_395 <= voltagesBackup_q1;
        tmp_data_reg_390 <= voltagesBackup_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_9_i_i_reg_420 == 1'd1))) begin
        tmp_data_2_13_reg_479 <= voltagesBackup_q0;
        tmp_data_3_14_reg_484 <= voltagesBackup_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_data_2_reg_410 <= voltagesBackup_q0;
        tmp_data_3_reg_415 <= voltagesBackup_q1;
    end
end

always @ (*) begin
    if ((~((1'b0 == Vi_idx_V_data_V_00_status) & (tmp_3_i_i_fu_252_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state2) & (tmp_3_i_i_fu_252_p2 == 1'd1))) begin
        Vi_idx_V_data_V_00_update = 1'b1;
    end else begin
        Vi_idx_V_data_V_00_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_3_i_i_fu_252_p2 == 1'd1))) begin
        Vi_idx_V_data_V_0_blk_n = Vi_idx_V_data_V_0_empty_n;
    end else begin
        Vi_idx_V_data_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_3_i_i_fu_252_p2 == 1'd1))) begin
        Vi_idx_V_data_V_1_blk_n = Vi_idx_V_data_V_1_empty_n;
    end else begin
        Vi_idx_V_data_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_3_i_i_fu_252_p2 == 1'd1))) begin
        Vi_idx_V_data_V_2_blk_n = Vi_idx_V_data_V_2_empty_n;
    end else begin
        Vi_idx_V_data_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_3_i_i_fu_252_p2 == 1'd1))) begin
        Vi_idx_V_data_V_3_blk_n = Vi_idx_V_data_V_3_empty_n;
    end else begin
        Vi_idx_V_data_V_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_9_i_i_reg_420 == 1'd1))) begin
        Vj_idx_V_data_V_00_update = 1'b1;
    end else begin
        Vj_idx_V_data_V_00_update = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (tmp_9_i_i_reg_420 == 1'd1))) begin
        Vj_idx_V_data_V_0_blk_n = Vj_idx_V_data_V_0_empty_n;
    end else begin
        Vj_idx_V_data_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (tmp_9_i_i_reg_420 == 1'd1))) begin
        Vj_idx_V_data_V_1_blk_n = Vj_idx_V_data_V_1_empty_n;
    end else begin
        Vj_idx_V_data_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (tmp_9_i_i_reg_420 == 1'd1))) begin
        Vj_idx_V_data_V_2_blk_n = Vj_idx_V_data_V_2_empty_n;
    end else begin
        Vj_idx_V_data_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (tmp_9_i_i_reg_420 == 1'd1))) begin
        Vj_idx_V_data_V_3_blk_n = Vj_idx_V_data_V_3_empty_n;
    end else begin
        Vj_idx_V_data_V_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((tmp_9_i_i_fu_299_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == Vi_idx_V_data_V_00_status) & (tmp_3_i_i_fu_252_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state2) & (tmp_3_i_i_fu_252_p2 == 1'd0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (tmp_9_i_i_reg_420 == 1'd1))) begin
        ap_phi_mux_t_V_phi_fu_241_p4 = j_V_reg_424;
    end else begin
        ap_phi_mux_t_V_phi_fu_241_p4 = t_V_reg_237;
    end
end

always @ (*) begin
    if ((~((1'b0 == Vi_idx_V_data_V_00_status) & (tmp_3_i_i_fu_252_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state2) & (tmp_3_i_i_fu_252_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)))) begin
        fixedData_V_data1_update = 1'b1;
    end else begin
        fixedData_V_data1_update = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)))) begin
        fixedData_V_data_blk_n = fixedData_V_data_full_n;
    end else begin
        fixedData_V_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) begin
        if ((1'b1 == ap_condition_417)) begin
            fixedData_V_data_din = tmp_data_3_reg_415;
        end else if ((1'b1 == ap_condition_412)) begin
            fixedData_V_data_din = tmp_data_2_reg_410;
        end else if ((1'b1 == ap_condition_407)) begin
            fixedData_V_data_din = tmp_data_1_reg_395;
        end else if ((1'b1 == ap_condition_402)) begin
            fixedData_V_data_din = tmp_data_reg_390;
        end else begin
            fixedData_V_data_din = 'bx;
        end
    end else begin
        fixedData_V_data_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)))) begin
        fixedData_V_tlast_V_blk_n = fixedData_V_tlast_V_full_n;
    end else begin
        fixedData_V_tlast_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)))) begin
        processedData_V_data1_update = 1'b1;
    end else begin
        processedData_V_data1_update = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)))) begin
        processedData_V_data_1_blk_n = processedData_V_data_1_full_n;
    end else begin
        processedData_V_data_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1))) begin
        processedData_V_data_1_din = tmp_data_1_12_reg_464_pp0_iter1_reg;
    end else if ((((1'b0 == ap_block_pp0_stage3_01001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)))) begin
        processedData_V_data_1_din = tmp_data_1_12_reg_464;
    end else begin
        processedData_V_data_1_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)))) begin
        processedData_V_data_2_blk_n = processedData_V_data_2_full_n;
    end else begin
        processedData_V_data_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)))) begin
        processedData_V_data_3_blk_n = processedData_V_data_3_full_n;
    end else begin
        processedData_V_data_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)))) begin
        processedData_V_data_blk_n = processedData_V_data_full_n;
    end else begin
        processedData_V_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1))) begin
        processedData_V_data_din = tmp_data_0_reg_459_pp0_iter1_reg;
    end else if ((((1'b0 == ap_block_pp0_stage3_01001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)))) begin
        processedData_V_data_din = tmp_data_0_reg_459;
    end else begin
        processedData_V_data_din = 'bx;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        simConfig_BLOCK_NUMBERS_V_blk_n = simConfig_BLOCK_NUMBERS_V_empty_n;
    end else begin
        simConfig_BLOCK_NUMBERS_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((simConfig_BLOCK_NUMBERS_V_empty_n == 1'b0) | (simConfig_rowsToSimulate_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        simConfig_BLOCK_NUMBERS_V_read = 1'b1;
    end else begin
        simConfig_BLOCK_NUMBERS_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        simConfig_rowsToSimulate_V_blk_n = simConfig_rowsToSimulate_V_empty_n;
    end else begin
        simConfig_rowsToSimulate_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((simConfig_BLOCK_NUMBERS_V_empty_n == 1'b0) | (simConfig_rowsToSimulate_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        simConfig_rowsToSimulate_V_read = 1'b1;
    end else begin
        simConfig_rowsToSimulate_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        voltagesBackup_address0 = tmp_13_2_i_i_fu_334_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        voltagesBackup_address0 = tmp_13_i_i_fu_326_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        voltagesBackup_address0 = tmp_7_i_i_fu_287_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        voltagesBackup_address0 = tmp_5_i_i_fu_279_p1;
    end else begin
        voltagesBackup_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        voltagesBackup_address1 = tmp_13_3_i_i_fu_338_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        voltagesBackup_address1 = tmp_13_1_i_i_fu_330_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        voltagesBackup_address1 = tmp_8_i_i_fu_291_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        voltagesBackup_address1 = tmp_6_i_i_fu_283_p1;
    end else begin
        voltagesBackup_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        voltagesBackup_ce0 = 1'b1;
    end else begin
        voltagesBackup_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        voltagesBackup_ce1 = 1'b1;
    end else begin
        voltagesBackup_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((simConfig_BLOCK_NUMBERS_V_empty_n == 1'b0) | (simConfig_rowsToSimulate_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((1'b0 == Vi_idx_V_data_V_00_status) & (tmp_3_i_i_fu_252_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state2) & (tmp_3_i_i_fu_252_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((1'b0 == Vi_idx_V_data_V_00_status) & (tmp_3_i_i_fu_252_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state2) & (tmp_3_i_i_fu_252_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_9_i_i_fu_299_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_9_i_i_fu_299_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Vi_idx_V_data_V_00_status = (Vi_idx_V_data_V_3_empty_n & Vi_idx_V_data_V_2_empty_n & Vi_idx_V_data_V_1_empty_n & Vi_idx_V_data_V_0_empty_n);

assign Vi_idx_V_data_V_0_read = Vi_idx_V_data_V_00_update;

assign Vi_idx_V_data_V_1_read = Vi_idx_V_data_V_00_update;

assign Vi_idx_V_data_V_2_read = Vi_idx_V_data_V_00_update;

assign Vi_idx_V_data_V_3_read = Vi_idx_V_data_V_00_update;

assign Vj_idx_V_data_V_00_status = (Vj_idx_V_data_V_3_empty_n & Vj_idx_V_data_V_2_empty_n & Vj_idx_V_data_V_1_empty_n & Vj_idx_V_data_V_0_empty_n);

assign Vj_idx_V_data_V_0_read = Vj_idx_V_data_V_00_update;

assign Vj_idx_V_data_V_1_read = Vj_idx_V_data_V_00_update;

assign Vj_idx_V_data_V_2_read = Vj_idx_V_data_V_00_update;

assign Vj_idx_V_data_V_3_read = Vj_idx_V_data_V_00_update;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (((processedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((fixedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (((processedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((fixedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter2 == 1'b1) & (((processedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((fixedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((1'b0 == Vj_idx_V_data_V_00_status) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_9_i_i_reg_420 == 1'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((processedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((fixedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((1'b0 == Vj_idx_V_data_V_00_status) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_9_i_i_reg_420 == 1'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((processedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((fixedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((1'b0 == Vj_idx_V_data_V_00_status) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_9_i_i_reg_420 == 1'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((processedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((fixedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((processedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((fixedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((processedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((fixedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((processedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((fixedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1))));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((processedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((fixedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((processedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((fixedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((processedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((fixedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1))));
end

always @ (*) begin
    ap_block_state1 = ((simConfig_BLOCK_NUMBERS_V_empty_n == 1'b0) | (simConfig_rowsToSimulate_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage1_iter1 = (((processedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((fixedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)));
end

always @ (*) begin
    ap_block_state12_pp0_stage2_iter1 = (((processedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((fixedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)));
end

always @ (*) begin
    ap_block_state13_pp0_stage3_iter1 = (((processedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((fixedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)));
end

always @ (*) begin
    ap_block_state14_pp0_stage0_iter2 = (((processedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)) | ((fixedData_V_data1_status == 1'b0) & (tmp_9_i_i_reg_420_pp0_iter1_reg == 1'd1)));
end

always @ (*) begin
    ap_block_state2 = ((1'b0 == Vi_idx_V_data_V_00_status) & (tmp_3_i_i_fu_252_p2 == 1'd1));
end

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage1_iter0 = ((1'b0 == Vj_idx_V_data_V_00_status) & (tmp_9_i_i_reg_420 == 1'd1));
end

assign ap_block_state8_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_402 = ((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_407 = ((1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_412 = ((1'b0 == ap_block_pp0_stage3_01001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_417 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign fixedData_V_data1_status = (fixedData_V_tlast_V_full_n & fixedData_V_data_full_n);

assign fixedData_V_data_write = fixedData_V_data1_update;

assign fixedData_V_tlast_V_din = 1'd0;

assign fixedData_V_tlast_V_write = fixedData_V_data1_update;

assign i_V_fu_257_p2 = (t_V_1_reg_226 + 12'd1);

assign j_V_fu_304_p2 = (ap_phi_mux_t_V_phi_fu_241_p4 + 26'd1);

assign processedData_V_data1_status = (processedData_V_data_full_n & processedData_V_data_3_full_n & processedData_V_data_2_full_n & processedData_V_data_1_full_n);

assign processedData_V_data_1_write = processedData_V_data1_update;

assign processedData_V_data_2_din = tmp_data_2_13_reg_479;

assign processedData_V_data_2_write = processedData_V_data1_update;

assign processedData_V_data_3_din = tmp_data_3_14_reg_484;

assign processedData_V_data_3_write = processedData_V_data1_update;

assign processedData_V_data_write = processedData_V_data1_update;

assign t_V_1_cast_fu_248_p1 = t_V_1_reg_226;

assign t_V_cast_fu_295_p1 = ap_phi_mux_t_V_phi_fu_241_p4;

assign tmp_13_1_i_i_fu_330_p1 = tmp_data_1_V_1_reg_434;

assign tmp_13_2_i_i_fu_334_p1 = tmp_data_2_V_1_reg_439;

assign tmp_13_3_i_i_fu_338_p1 = tmp_data_3_V_1_reg_444;

assign tmp_13_i_i_fu_326_p1 = tmp_data_0_V_1_reg_429;

assign tmp_3_i_i_fu_252_p2 = (($signed(t_V_1_cast_fu_248_p1) < $signed(simConfig_rowsToSimu_reg_347)) ? 1'b1 : 1'b0);

assign tmp_5_i_i_fu_279_p1 = tmp_data_0_V_reg_360;

assign tmp_6_i_i_fu_283_p1 = tmp_data_1_V_reg_365;

assign tmp_7_i_i_fu_287_p1 = tmp_data_2_V_reg_370;

assign tmp_8_i_i_fu_291_p1 = tmp_data_3_V_reg_375;

assign tmp_9_i_i_fu_299_p2 = (($signed(t_V_cast_fu_295_p1) < $signed(simConfig_BLOCK_NUMB_reg_342)) ? 1'b1 : 1'b0);

endmodule //writeV2calc
