// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module I_calc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        output_r_TDATA,
        output_r_TVALID,
        output_r_TREADY,
        output_r_TLAST,
        simConfig_rowsToSimulate_V_dout,
        simConfig_rowsToSimulate_V_empty_n,
        simConfig_rowsToSimulate_V_read,
        simConfig_BLOCK_NUMBERS_V_dout,
        simConfig_BLOCK_NUMBERS_V_empty_n,
        simConfig_BLOCK_NUMBERS_V_read,
        F_acc_V_data_0_dout,
        F_acc_V_data_0_empty_n,
        F_acc_V_data_0_read,
        F_acc_V_data_1_dout,
        F_acc_V_data_1_empty_n,
        F_acc_V_data_1_read,
        F_acc_V_data_2_dout,
        F_acc_V_data_2_empty_n,
        F_acc_V_data_2_read,
        F_acc_V_data_3_dout,
        F_acc_V_data_3_empty_n,
        F_acc_V_data_3_read,
        V_acc_V_data_0_dout,
        V_acc_V_data_0_empty_n,
        V_acc_V_data_0_read,
        V_acc_V_data_1_dout,
        V_acc_V_data_1_empty_n,
        V_acc_V_data_1_read,
        V_acc_V_data_2_dout,
        V_acc_V_data_2_empty_n,
        V_acc_V_data_2_read,
        V_acc_V_data_3_dout,
        V_acc_V_data_3_empty_n,
        V_acc_V_data_3_read
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_pp0_stage0 = 14'd8;
parameter    ap_ST_fsm_pp0_stage1 = 14'd16;
parameter    ap_ST_fsm_pp0_stage2 = 14'd32;
parameter    ap_ST_fsm_pp0_stage3 = 14'd64;
parameter    ap_ST_fsm_pp0_stage4 = 14'd128;
parameter    ap_ST_fsm_pp0_stage5 = 14'd256;
parameter    ap_ST_fsm_pp0_stage6 = 14'd512;
parameter    ap_ST_fsm_pp0_stage7 = 14'd1024;
parameter    ap_ST_fsm_state22 = 14'd2048;
parameter    ap_ST_fsm_state23 = 14'd4096;
parameter    ap_ST_fsm_state24 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [31:0] output_r_TDATA;
output   output_r_TVALID;
input   output_r_TREADY;
output  [0:0] output_r_TLAST;
input  [26:0] simConfig_rowsToSimulate_V_dout;
input   simConfig_rowsToSimulate_V_empty_n;
output   simConfig_rowsToSimulate_V_read;
input  [26:0] simConfig_BLOCK_NUMBERS_V_dout;
input   simConfig_BLOCK_NUMBERS_V_empty_n;
output   simConfig_BLOCK_NUMBERS_V_read;
input  [31:0] F_acc_V_data_0_dout;
input   F_acc_V_data_0_empty_n;
output   F_acc_V_data_0_read;
input  [31:0] F_acc_V_data_1_dout;
input   F_acc_V_data_1_empty_n;
output   F_acc_V_data_1_read;
input  [31:0] F_acc_V_data_2_dout;
input   F_acc_V_data_2_empty_n;
output   F_acc_V_data_2_read;
input  [31:0] F_acc_V_data_3_dout;
input   F_acc_V_data_3_empty_n;
output   F_acc_V_data_3_read;
input  [31:0] V_acc_V_data_0_dout;
input   V_acc_V_data_0_empty_n;
output   V_acc_V_data_0_read;
input  [31:0] V_acc_V_data_1_dout;
input   V_acc_V_data_1_empty_n;
output   V_acc_V_data_1_read;
input  [31:0] V_acc_V_data_2_dout;
input   V_acc_V_data_2_empty_n;
output   V_acc_V_data_2_read;
input  [31:0] V_acc_V_data_3_dout;
input   V_acc_V_data_3_empty_n;
output   V_acc_V_data_3_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg simConfig_rowsToSimulate_V_read;
reg simConfig_BLOCK_NUMBERS_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    simConfig_rowsToSimulate_V_blk_n;
reg    simConfig_BLOCK_NUMBERS_V_blk_n;
reg    F_acc_V_data_0_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] tmp_35_i_i_reg_531;
reg    F_acc_V_data_1_blk_n;
reg    F_acc_V_data_2_blk_n;
reg    F_acc_V_data_3_blk_n;
reg    V_acc_V_data_0_blk_n;
reg    V_acc_V_data_1_blk_n;
reg    V_acc_V_data_2_blk_n;
reg    V_acc_V_data_3_blk_n;
reg   [31:0] V_temp_data_i_i_load_3_reg_244;
reg   [31:0] F_temp_data_i_i_load_3_reg_256;
reg   [31:0] V_temp_data_i_i_load_2_reg_268;
reg   [31:0] F_temp_data_i_i_load_2_reg_280;
reg   [31:0] V_temp_data_i_i_load_1_reg_292;
reg   [31:0] F_temp_data_i_i_load_1_reg_304;
reg   [31:0] V_temp_data_i_i_load_reg_316;
reg   [31:0] F_temp_data_i_i_load_reg_328;
reg   [25:0] i_op_assign_reg_340;
reg   [26:0] simConfig_BLOCK_NUMB_reg_464;
reg    ap_block_state1;
reg   [26:0] simConfig_rowsToSimu_reg_469;
wire   [25:0] RowOfBlocks_V_fu_399_p2;
reg   [25:0] RowOfBlocks_V_reg_526;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_35_i_i_fu_409_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_state20_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_35_i_i_reg_531_pp0_iter1_reg;
reg   [0:0] tmp_35_i_i_reg_531_pp0_iter2_reg;
wire   [25:0] block_fu_414_p2;
reg   [25:0] block_reg_535;
reg   [31:0] tmp_data_0_reg_540;
wire    F_acc_V_data_00_status;
wire    V_acc_V_data_00_status;
reg    ap_block_state5_pp0_stage1_iter0;
wire    ap_block_state13_pp0_stage1_iter1;
wire    ap_block_state21_pp0_stage1_iter2;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] tmp_data_1_reg_545;
reg   [31:0] tmp_data_2_reg_550;
reg   [31:0] tmp_data_3_reg_555;
reg   [31:0] tmp_data_0_9_reg_560;
reg   [31:0] tmp_data_1_9_reg_565;
reg   [31:0] tmp_data_2_9_reg_570;
reg   [31:0] tmp_data_3_9_reg_575;
wire   [31:0] grp_fu_378_p2;
reg   [31:0] tmp_53_i_i_reg_580;
reg    ap_enable_reg_pp0_iter1;
reg   [31:0] tmp_54_i_i_reg_586;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state6_pp0_stage2_iter0;
wire    ap_block_state14_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] tmp_53_1_i_i_reg_592;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state7_pp0_stage3_iter0;
wire    ap_block_state15_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg   [31:0] tmp_54_1_i_i_reg_598;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state8_pp0_stage4_iter0;
wire    ap_block_state16_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
reg   [31:0] tmp_53_2_i_i_reg_604;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state9_pp0_stage5_iter0;
wire    ap_block_state17_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_11001;
reg   [31:0] tmp_54_2_i_i_reg_610;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state10_pp0_stage6_iter0;
wire    ap_block_state18_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
reg   [31:0] tmp_53_3_i_i_reg_616;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state11_pp0_stage7_iter0;
wire    ap_block_state19_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
reg   [31:0] tmp_54_3_i_i_reg_622;
reg    ap_enable_reg_pp0_iter2;
wire   [2:0] row_fu_458_p2;
reg   [2:0] row_reg_631;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
wire    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage1_subdone;
reg   [1:0] F_temp_data_address0;
reg    F_temp_data_ce0;
reg    F_temp_data_we0;
reg   [31:0] F_temp_data_d0;
wire   [31:0] F_temp_data_q0;
reg   [1:0] F_temp_data_address1;
reg    F_temp_data_ce1;
reg    F_temp_data_we1;
reg   [31:0] F_temp_data_d1;
reg   [1:0] V_temp_data_address0;
reg    V_temp_data_ce0;
reg    V_temp_data_we0;
reg   [31:0] V_temp_data_d0;
wire   [31:0] V_temp_data_q0;
reg   [1:0] V_temp_data_address1;
reg    V_temp_data_ce1;
reg    V_temp_data_we1;
reg   [31:0] V_temp_data_d1;
wire    grp_getTotalCurrent_fu_363_ap_start;
wire    grp_getTotalCurrent_fu_363_ap_done;
wire    grp_getTotalCurrent_fu_363_ap_idle;
wire    grp_getTotalCurrent_fu_363_ap_ready;
wire   [31:0] grp_getTotalCurrent_fu_363_output_r_TDATA;
wire    grp_getTotalCurrent_fu_363_output_r_TVALID;
wire    grp_getTotalCurrent_fu_363_output_r_TREADY;
wire   [0:0] grp_getTotalCurrent_fu_363_output_r_TLAST;
wire   [1:0] grp_getTotalCurrent_fu_363_F_temp_data_address0;
wire    grp_getTotalCurrent_fu_363_F_temp_data_ce0;
wire   [1:0] grp_getTotalCurrent_fu_363_V_temp_data_address0;
wire    grp_getTotalCurrent_fu_363_V_temp_data_ce0;
reg   [25:0] RowOfBlocks_V_2_reg_232;
wire   [0:0] exitcond_i_i_fu_452_p2;
reg   [31:0] ap_phi_mux_V_temp_data_i_i_load_3_phi_fu_248_p4;
reg   [31:0] ap_phi_mux_F_temp_data_i_i_load_3_phi_fu_260_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] ap_phi_mux_V_temp_data_i_i_load_2_phi_fu_272_p4;
wire    ap_block_pp0_stage7;
reg   [31:0] ap_phi_mux_F_temp_data_i_i_load_2_phi_fu_284_p4;
wire    ap_block_pp0_stage6;
reg   [31:0] ap_phi_mux_V_temp_data_i_i_load_1_phi_fu_296_p4;
wire    ap_block_pp0_stage5;
reg   [31:0] ap_phi_mux_F_temp_data_i_i_load_1_phi_fu_308_p4;
wire    ap_block_pp0_stage4;
reg   [31:0] ap_phi_mux_V_temp_data_i_i_load_phi_fu_320_p4;
wire    ap_block_pp0_stage3;
reg   [31:0] ap_phi_mux_F_temp_data_i_i_load_phi_fu_332_p4;
wire    ap_block_pp0_stage2;
reg   [25:0] ap_phi_mux_i_op_assign_phi_fu_344_p4;
reg   [2:0] val_assign_reg_351;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state22;
reg    grp_getTotalCurrent_fu_363_ap_start_reg;
reg    F_acc_V_data_00_update;
reg    V_acc_V_data_00_update;
wire   [0:0] tmp_i_i_fu_394_p2;
reg   [31:0] grp_fu_378_p0;
reg   [31:0] grp_fu_378_p1;
wire   [26:0] RowOfBlocks_V_1_cast_fu_390_p1;
wire   [26:0] i_op_assign_cast_fu_405_p1;
reg    grp_fu_378_ce;
reg   [13:0] ap_NS_fsm;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 grp_getTotalCurrent_fu_363_ap_start_reg = 1'b0;
end

I_calc_F_temp_data #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
F_temp_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(F_temp_data_address0),
    .ce0(F_temp_data_ce0),
    .we0(F_temp_data_we0),
    .d0(F_temp_data_d0),
    .q0(F_temp_data_q0),
    .address1(F_temp_data_address1),
    .ce1(F_temp_data_ce1),
    .we1(F_temp_data_we1),
    .d1(F_temp_data_d1)
);

I_calc_F_temp_data #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
V_temp_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(V_temp_data_address0),
    .ce0(V_temp_data_ce0),
    .we0(V_temp_data_we0),
    .d0(V_temp_data_d0),
    .q0(V_temp_data_q0),
    .address1(V_temp_data_address1),
    .ce1(V_temp_data_ce1),
    .we1(V_temp_data_we1),
    .d1(V_temp_data_d1)
);

getTotalCurrent grp_getTotalCurrent_fu_363(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_getTotalCurrent_fu_363_ap_start),
    .ap_done(grp_getTotalCurrent_fu_363_ap_done),
    .ap_idle(grp_getTotalCurrent_fu_363_ap_idle),
    .ap_ready(grp_getTotalCurrent_fu_363_ap_ready),
    .row_V(val_assign_reg_351),
    .output_r_TDATA(grp_getTotalCurrent_fu_363_output_r_TDATA),
    .output_r_TVALID(grp_getTotalCurrent_fu_363_output_r_TVALID),
    .output_r_TREADY(grp_getTotalCurrent_fu_363_output_r_TREADY),
    .output_r_TLAST(grp_getTotalCurrent_fu_363_output_r_TLAST),
    .RowOfBlocks_V_read(RowOfBlocks_V_2_reg_232),
    .simConfig_rowsToSimulate_V_read(simConfig_rowsToSimu_reg_469),
    .F_temp_data_address0(grp_getTotalCurrent_fu_363_F_temp_data_address0),
    .F_temp_data_ce0(grp_getTotalCurrent_fu_363_F_temp_data_ce0),
    .F_temp_data_q0(F_temp_data_q0),
    .V_temp_data_address0(grp_getTotalCurrent_fu_363_V_temp_data_address0),
    .V_temp_data_ce0(grp_getTotalCurrent_fu_363_V_temp_data_ce0),
    .V_temp_data_q0(V_temp_data_q0)
);

GapJunctionIP_fadd_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
GapJunctionIP_fadd_32ns_32ns_32_8_full_dsp_1_U212(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_378_p0),
    .din1(grp_fu_378_p1),
    .ce(grp_fu_378_ce),
    .dout(grp_fu_378_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((tmp_i_i_fu_394_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_getTotalCurrent_fu_363_ap_start_reg <= 1'b0;
    end else begin
        if (((exitcond_i_i_fu_452_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
            grp_getTotalCurrent_fu_363_ap_start_reg <= 1'b1;
        end else if ((grp_getTotalCurrent_fu_363_ap_ready == 1'b1)) begin
            grp_getTotalCurrent_fu_363_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        F_temp_data_i_i_load_1_reg_304 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        F_temp_data_i_i_load_1_reg_304 <= tmp_53_1_i_i_reg_592;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        F_temp_data_i_i_load_2_reg_280 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        F_temp_data_i_i_load_2_reg_280 <= tmp_53_2_i_i_reg_604;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        F_temp_data_i_i_load_3_reg_256 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        F_temp_data_i_i_load_3_reg_256 <= tmp_53_3_i_i_reg_616;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        F_temp_data_i_i_load_reg_328 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        F_temp_data_i_i_load_reg_328 <= tmp_53_i_i_reg_580;
    end
end

always @ (posedge ap_clk) begin
    if ((~((simConfig_BLOCK_NUMBERS_V_empty_n == 1'b0) | (simConfig_rowsToSimulate_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RowOfBlocks_V_2_reg_232 <= 26'd0;
    end else if (((1'b1 == ap_CS_fsm_state23) & (exitcond_i_i_fu_452_p2 == 1'd1))) begin
        RowOfBlocks_V_2_reg_232 <= RowOfBlocks_V_reg_526;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        V_temp_data_i_i_load_1_reg_292 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        V_temp_data_i_i_load_1_reg_292 <= tmp_54_1_i_i_reg_598;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        V_temp_data_i_i_load_2_reg_268 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        V_temp_data_i_i_load_2_reg_268 <= tmp_54_2_i_i_reg_610;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        V_temp_data_i_i_load_3_reg_244 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_35_i_i_reg_531_pp0_iter2_reg == 1'd1))) begin
        V_temp_data_i_i_load_3_reg_244 <= tmp_54_3_i_i_reg_622;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        V_temp_data_i_i_load_reg_316 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        V_temp_data_i_i_load_reg_316 <= tmp_54_i_i_reg_586;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_op_assign_reg_340 <= 26'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_35_i_i_reg_531 == 1'd1))) begin
        i_op_assign_reg_340 <= block_reg_535;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        val_assign_reg_351 <= 3'd0;
    end else if (((grp_getTotalCurrent_fu_363_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        val_assign_reg_351 <= row_reg_631;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        RowOfBlocks_V_reg_526 <= RowOfBlocks_V_fu_399_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        block_reg_535 <= block_fu_414_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        row_reg_631 <= row_fu_458_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((simConfig_BLOCK_NUMBERS_V_empty_n == 1'b0) | (simConfig_rowsToSimulate_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        simConfig_BLOCK_NUMB_reg_464 <= simConfig_BLOCK_NUMBERS_V_dout;
        simConfig_rowsToSimu_reg_469 <= simConfig_rowsToSimulate_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_35_i_i_reg_531 <= tmp_35_i_i_fu_409_p2;
        tmp_35_i_i_reg_531_pp0_iter1_reg <= tmp_35_i_i_reg_531;
        tmp_35_i_i_reg_531_pp0_iter2_reg <= tmp_35_i_i_reg_531_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        tmp_53_1_i_i_reg_592 <= grp_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        tmp_53_2_i_i_reg_604 <= grp_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        tmp_53_3_i_i_reg_616 <= grp_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        tmp_53_i_i_reg_580 <= grp_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        tmp_54_1_i_i_reg_598 <= grp_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        tmp_54_2_i_i_reg_610 <= grp_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        tmp_54_3_i_i_reg_622 <= grp_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        tmp_54_i_i_reg_586 <= grp_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_35_i_i_reg_531 == 1'd1))) begin
        tmp_data_0_9_reg_560 <= V_acc_V_data_0_dout;
        tmp_data_0_reg_540 <= F_acc_V_data_0_dout;
        tmp_data_1_9_reg_565 <= V_acc_V_data_1_dout;
        tmp_data_1_reg_545 <= F_acc_V_data_1_dout;
        tmp_data_2_9_reg_570 <= V_acc_V_data_2_dout;
        tmp_data_2_reg_550 <= F_acc_V_data_2_dout;
        tmp_data_3_9_reg_575 <= V_acc_V_data_3_dout;
        tmp_data_3_reg_555 <= F_acc_V_data_3_dout;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_35_i_i_reg_531 == 1'd1))) begin
        F_acc_V_data_00_update = 1'b1;
    end else begin
        F_acc_V_data_00_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_35_i_i_reg_531 == 1'd1))) begin
        F_acc_V_data_0_blk_n = F_acc_V_data_0_empty_n;
    end else begin
        F_acc_V_data_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_35_i_i_reg_531 == 1'd1))) begin
        F_acc_V_data_1_blk_n = F_acc_V_data_1_empty_n;
    end else begin
        F_acc_V_data_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_35_i_i_reg_531 == 1'd1))) begin
        F_acc_V_data_2_blk_n = F_acc_V_data_2_empty_n;
    end else begin
        F_acc_V_data_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_35_i_i_reg_531 == 1'd1))) begin
        F_acc_V_data_3_blk_n = F_acc_V_data_3_empty_n;
    end else begin
        F_acc_V_data_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        F_temp_data_address0 = 64'd3;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        F_temp_data_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        F_temp_data_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        F_temp_data_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        F_temp_data_address0 = grp_getTotalCurrent_fu_363_F_temp_data_address0;
    end else begin
        F_temp_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        F_temp_data_address1 = 64'd2;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        F_temp_data_address1 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        F_temp_data_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        F_temp_data_address1 = 64'd1;
    end else begin
        F_temp_data_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        F_temp_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        F_temp_data_ce0 = grp_getTotalCurrent_fu_363_F_temp_data_ce0;
    end else begin
        F_temp_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        F_temp_data_ce1 = 1'b1;
    end else begin
        F_temp_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        F_temp_data_d0 = tmp_53_3_i_i_reg_616;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        F_temp_data_d0 = tmp_53_1_i_i_reg_592;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        F_temp_data_d0 = 32'd0;
    end else begin
        F_temp_data_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        F_temp_data_d1 = tmp_53_2_i_i_reg_604;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        F_temp_data_d1 = tmp_53_i_i_reg_580;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        F_temp_data_d1 = 32'd0;
    end else begin
        F_temp_data_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1)) | ((1'b1 == ap_CS_fsm_state2) & (tmp_i_i_fu_394_p2 == 1'd1)))) begin
        F_temp_data_we0 = 1'b1;
    end else begin
        F_temp_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1)) | ((1'b1 == ap_CS_fsm_state2) & (tmp_i_i_fu_394_p2 == 1'd1)))) begin
        F_temp_data_we1 = 1'b1;
    end else begin
        F_temp_data_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_35_i_i_reg_531 == 1'd1))) begin
        V_acc_V_data_00_update = 1'b1;
    end else begin
        V_acc_V_data_00_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_35_i_i_reg_531 == 1'd1))) begin
        V_acc_V_data_0_blk_n = V_acc_V_data_0_empty_n;
    end else begin
        V_acc_V_data_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_35_i_i_reg_531 == 1'd1))) begin
        V_acc_V_data_1_blk_n = V_acc_V_data_1_empty_n;
    end else begin
        V_acc_V_data_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_35_i_i_reg_531 == 1'd1))) begin
        V_acc_V_data_2_blk_n = V_acc_V_data_2_empty_n;
    end else begin
        V_acc_V_data_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_35_i_i_reg_531 == 1'd1))) begin
        V_acc_V_data_3_blk_n = V_acc_V_data_3_empty_n;
    end else begin
        V_acc_V_data_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        V_temp_data_address0 = 64'd3;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        V_temp_data_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        V_temp_data_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        V_temp_data_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        V_temp_data_address0 = grp_getTotalCurrent_fu_363_V_temp_data_address0;
    end else begin
        V_temp_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        V_temp_data_address1 = 64'd2;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        V_temp_data_address1 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        V_temp_data_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        V_temp_data_address1 = 64'd1;
    end else begin
        V_temp_data_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        V_temp_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        V_temp_data_ce0 = grp_getTotalCurrent_fu_363_V_temp_data_ce0;
    end else begin
        V_temp_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        V_temp_data_ce1 = 1'b1;
    end else begin
        V_temp_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        V_temp_data_d0 = tmp_54_3_i_i_reg_622;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        V_temp_data_d0 = tmp_54_1_i_i_reg_598;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        V_temp_data_d0 = 32'd0;
    end else begin
        V_temp_data_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        V_temp_data_d1 = tmp_54_2_i_i_reg_610;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        V_temp_data_d1 = tmp_54_i_i_reg_586;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        V_temp_data_d1 = 32'd0;
    end else begin
        V_temp_data_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_35_i_i_reg_531_pp0_iter2_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1)) | ((1'b1 == ap_CS_fsm_state2) & (tmp_i_i_fu_394_p2 == 1'd1)))) begin
        V_temp_data_we0 = 1'b1;
    end else begin
        V_temp_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1)) | ((1'b1 == ap_CS_fsm_state2) & (tmp_i_i_fu_394_p2 == 1'd1)))) begin
        V_temp_data_we1 = 1'b1;
    end else begin
        V_temp_data_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_35_i_i_fu_409_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_i_fu_394_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        ap_phi_mux_F_temp_data_i_i_load_1_phi_fu_308_p4 = tmp_53_1_i_i_reg_592;
    end else begin
        ap_phi_mux_F_temp_data_i_i_load_1_phi_fu_308_p4 = F_temp_data_i_i_load_1_reg_304;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        ap_phi_mux_F_temp_data_i_i_load_2_phi_fu_284_p4 = tmp_53_2_i_i_reg_604;
    end else begin
        ap_phi_mux_F_temp_data_i_i_load_2_phi_fu_284_p4 = F_temp_data_i_i_load_2_reg_280;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        ap_phi_mux_F_temp_data_i_i_load_3_phi_fu_260_p4 = tmp_53_3_i_i_reg_616;
    end else begin
        ap_phi_mux_F_temp_data_i_i_load_3_phi_fu_260_p4 = F_temp_data_i_i_load_3_reg_256;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        ap_phi_mux_F_temp_data_i_i_load_phi_fu_332_p4 = tmp_53_i_i_reg_580;
    end else begin
        ap_phi_mux_F_temp_data_i_i_load_phi_fu_332_p4 = F_temp_data_i_i_load_reg_328;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        ap_phi_mux_V_temp_data_i_i_load_1_phi_fu_296_p4 = tmp_54_1_i_i_reg_598;
    end else begin
        ap_phi_mux_V_temp_data_i_i_load_1_phi_fu_296_p4 = V_temp_data_i_i_load_1_reg_292;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        ap_phi_mux_V_temp_data_i_i_load_2_phi_fu_272_p4 = tmp_54_2_i_i_reg_610;
    end else begin
        ap_phi_mux_V_temp_data_i_i_load_2_phi_fu_272_p4 = V_temp_data_i_i_load_2_reg_268;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter2_reg == 1'd1))) begin
        ap_phi_mux_V_temp_data_i_i_load_3_phi_fu_248_p4 = tmp_54_3_i_i_reg_622;
    end else begin
        ap_phi_mux_V_temp_data_i_i_load_3_phi_fu_248_p4 = V_temp_data_i_i_load_3_reg_244;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_35_i_i_reg_531_pp0_iter1_reg == 1'd1))) begin
        ap_phi_mux_V_temp_data_i_i_load_phi_fu_320_p4 = tmp_54_i_i_reg_586;
    end else begin
        ap_phi_mux_V_temp_data_i_i_load_phi_fu_320_p4 = V_temp_data_i_i_load_reg_316;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_35_i_i_reg_531 == 1'd1))) begin
        ap_phi_mux_i_op_assign_phi_fu_344_p4 = block_reg_535;
    end else begin
        ap_phi_mux_i_op_assign_phi_fu_344_p4 = i_op_assign_reg_340;
    end
end

always @ (*) begin
    if (((tmp_i_i_fu_394_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_378_ce = 1'b1;
    end else begin
        grp_fu_378_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_378_p0 = ap_phi_mux_V_temp_data_i_i_load_3_phi_fu_248_p4;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_378_p0 = ap_phi_mux_F_temp_data_i_i_load_3_phi_fu_260_p4;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_378_p0 = ap_phi_mux_V_temp_data_i_i_load_2_phi_fu_272_p4;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_378_p0 = ap_phi_mux_F_temp_data_i_i_load_2_phi_fu_284_p4;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_378_p0 = ap_phi_mux_V_temp_data_i_i_load_1_phi_fu_296_p4;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_378_p0 = ap_phi_mux_F_temp_data_i_i_load_1_phi_fu_308_p4;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_378_p0 = ap_phi_mux_V_temp_data_i_i_load_phi_fu_320_p4;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_378_p0 = ap_phi_mux_F_temp_data_i_i_load_phi_fu_332_p4;
    end else begin
        grp_fu_378_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_378_p1 = tmp_data_3_9_reg_575;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_378_p1 = tmp_data_3_reg_555;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_378_p1 = tmp_data_2_9_reg_570;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_378_p1 = tmp_data_2_reg_550;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_378_p1 = tmp_data_1_9_reg_565;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_378_p1 = tmp_data_1_reg_545;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_378_p1 = tmp_data_0_9_reg_560;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_378_p1 = tmp_data_0_reg_540;
    end else begin
        grp_fu_378_p1 = 'bx;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        simConfig_BLOCK_NUMBERS_V_blk_n = simConfig_BLOCK_NUMBERS_V_empty_n;
    end else begin
        simConfig_BLOCK_NUMBERS_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((simConfig_BLOCK_NUMBERS_V_empty_n == 1'b0) | (simConfig_rowsToSimulate_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        simConfig_BLOCK_NUMBERS_V_read = 1'b1;
    end else begin
        simConfig_BLOCK_NUMBERS_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        simConfig_rowsToSimulate_V_blk_n = simConfig_rowsToSimulate_V_empty_n;
    end else begin
        simConfig_rowsToSimulate_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((simConfig_BLOCK_NUMBERS_V_empty_n == 1'b0) | (simConfig_rowsToSimulate_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        simConfig_rowsToSimulate_V_read = 1'b1;
    end else begin
        simConfig_rowsToSimulate_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((simConfig_BLOCK_NUMBERS_V_empty_n == 1'b0) | (simConfig_rowsToSimulate_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_i_i_fu_394_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_35_i_i_fu_409_p2 == 1'd0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_35_i_i_fu_409_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (exitcond_i_i_fu_452_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((grp_getTotalCurrent_fu_363_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F_acc_V_data_00_status = (F_acc_V_data_3_empty_n & F_acc_V_data_2_empty_n & F_acc_V_data_1_empty_n & F_acc_V_data_0_empty_n);

assign F_acc_V_data_0_read = F_acc_V_data_00_update;

assign F_acc_V_data_1_read = F_acc_V_data_00_update;

assign F_acc_V_data_2_read = F_acc_V_data_00_update;

assign F_acc_V_data_3_read = F_acc_V_data_00_update;

assign RowOfBlocks_V_1_cast_fu_390_p1 = RowOfBlocks_V_2_reg_232;

assign RowOfBlocks_V_fu_399_p2 = (RowOfBlocks_V_2_reg_232 + 26'd1);

assign V_acc_V_data_00_status = (V_acc_V_data_3_empty_n & V_acc_V_data_2_empty_n & V_acc_V_data_1_empty_n & V_acc_V_data_0_empty_n);

assign V_acc_V_data_0_read = V_acc_V_data_00_update;

assign V_acc_V_data_1_read = V_acc_V_data_00_update;

assign V_acc_V_data_2_read = V_acc_V_data_00_update;

assign V_acc_V_data_3_read = V_acc_V_data_00_update;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((1'b0 == V_acc_V_data_00_status) & (tmp_35_i_i_reg_531 == 1'd1)) | ((1'b0 == F_acc_V_data_00_status) & (tmp_35_i_i_reg_531 == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((1'b0 == V_acc_V_data_00_status) & (tmp_35_i_i_reg_531 == 1'd1)) | ((1'b0 == F_acc_V_data_00_status) & (tmp_35_i_i_reg_531 == 1'd1))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((simConfig_BLOCK_NUMBERS_V_empty_n == 1'b0) | (simConfig_rowsToSimulate_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage1_iter0 = (((1'b0 == V_acc_V_data_00_status) & (tmp_35_i_i_reg_531 == 1'd1)) | ((1'b0 == F_acc_V_data_00_status) & (tmp_35_i_i_reg_531 == 1'd1)));
end

assign ap_block_state6_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign block_fu_414_p2 = (ap_phi_mux_i_op_assign_phi_fu_344_p4 + 26'd1);

assign exitcond_i_i_fu_452_p2 = ((val_assign_reg_351 == 3'd4) ? 1'b1 : 1'b0);

assign grp_getTotalCurrent_fu_363_ap_start = grp_getTotalCurrent_fu_363_ap_start_reg;

assign grp_getTotalCurrent_fu_363_output_r_TREADY = (output_r_TREADY & ap_CS_fsm_state24);

assign i_op_assign_cast_fu_405_p1 = ap_phi_mux_i_op_assign_phi_fu_344_p4;

assign output_r_TDATA = grp_getTotalCurrent_fu_363_output_r_TDATA;

assign output_r_TLAST = grp_getTotalCurrent_fu_363_output_r_TLAST;

assign output_r_TVALID = grp_getTotalCurrent_fu_363_output_r_TVALID;

assign row_fu_458_p2 = (val_assign_reg_351 + 3'd1);

assign tmp_35_i_i_fu_409_p2 = (($signed(i_op_assign_cast_fu_405_p1) < $signed(simConfig_BLOCK_NUMB_reg_464)) ? 1'b1 : 1'b0);

assign tmp_i_i_fu_394_p2 = (($signed(RowOfBlocks_V_1_cast_fu_390_p1) < $signed(simConfig_rowsToSimu_reg_469)) ? 1'b1 : 1'b0);

endmodule //I_calc
