-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity I_calc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    output_r_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_r_TVALID : OUT STD_LOGIC;
    output_r_TREADY : IN STD_LOGIC;
    output_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    simConfig_rowsToSimulate_V_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    simConfig_rowsToSimulate_V_empty_n : IN STD_LOGIC;
    simConfig_rowsToSimulate_V_read : OUT STD_LOGIC;
    simConfig_BLOCK_NUMBERS_V_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    simConfig_BLOCK_NUMBERS_V_empty_n : IN STD_LOGIC;
    simConfig_BLOCK_NUMBERS_V_read : OUT STD_LOGIC;
    F_acc_V_data_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    F_acc_V_data_0_empty_n : IN STD_LOGIC;
    F_acc_V_data_0_read : OUT STD_LOGIC;
    F_acc_V_data_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    F_acc_V_data_1_empty_n : IN STD_LOGIC;
    F_acc_V_data_1_read : OUT STD_LOGIC;
    F_acc_V_data_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    F_acc_V_data_2_empty_n : IN STD_LOGIC;
    F_acc_V_data_2_read : OUT STD_LOGIC;
    F_acc_V_data_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    F_acc_V_data_3_empty_n : IN STD_LOGIC;
    F_acc_V_data_3_read : OUT STD_LOGIC;
    V_acc_V_data_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    V_acc_V_data_0_empty_n : IN STD_LOGIC;
    V_acc_V_data_0_read : OUT STD_LOGIC;
    V_acc_V_data_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    V_acc_V_data_1_empty_n : IN STD_LOGIC;
    V_acc_V_data_1_read : OUT STD_LOGIC;
    V_acc_V_data_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    V_acc_V_data_2_empty_n : IN STD_LOGIC;
    V_acc_V_data_2_read : OUT STD_LOGIC;
    V_acc_V_data_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    V_acc_V_data_3_empty_n : IN STD_LOGIC;
    V_acc_V_data_3_read : OUT STD_LOGIC );
end;


architecture behav of I_calc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv26_1 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal simConfig_rowsToSimulate_V_blk_n : STD_LOGIC;
    signal simConfig_BLOCK_NUMBERS_V_blk_n : STD_LOGIC;
    signal F_acc_V_data_0_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_35_i_i_reg_531 : STD_LOGIC_VECTOR (0 downto 0);
    signal F_acc_V_data_1_blk_n : STD_LOGIC;
    signal F_acc_V_data_2_blk_n : STD_LOGIC;
    signal F_acc_V_data_3_blk_n : STD_LOGIC;
    signal V_acc_V_data_0_blk_n : STD_LOGIC;
    signal V_acc_V_data_1_blk_n : STD_LOGIC;
    signal V_acc_V_data_2_blk_n : STD_LOGIC;
    signal V_acc_V_data_3_blk_n : STD_LOGIC;
    signal V_temp_data_i_i_load_3_reg_244 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_temp_data_i_i_load_3_reg_256 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_temp_data_i_i_load_2_reg_268 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_temp_data_i_i_load_2_reg_280 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_temp_data_i_i_load_1_reg_292 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_temp_data_i_i_load_1_reg_304 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_temp_data_i_i_load_reg_316 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_temp_data_i_i_load_reg_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_reg_340 : STD_LOGIC_VECTOR (25 downto 0);
    signal simConfig_BLOCK_NUMB_reg_464 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal simConfig_rowsToSimu_reg_469 : STD_LOGIC_VECTOR (26 downto 0);
    signal RowOfBlocks_V_fu_399_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal RowOfBlocks_V_reg_526 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_35_i_i_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_35_i_i_reg_531_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_i_i_reg_531_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal block_fu_414_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal block_reg_535 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_data_0_reg_540 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_acc_V_data_00_status : STD_LOGIC;
    signal V_acc_V_data_00_status : STD_LOGIC;
    signal ap_block_state5_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state21_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_data_1_reg_545 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_reg_550 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_reg_555 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_0_9_reg_560 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_1_9_reg_565 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_9_reg_570 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_9_reg_575 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_378_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_i_i_reg_580 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_54_i_i_reg_586 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state6_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp_53_1_i_i_reg_592 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state7_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal tmp_54_1_i_i_reg_598 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state8_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal tmp_53_2_i_i_reg_604 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state9_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal tmp_54_2_i_i_reg_610 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state10_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal tmp_53_3_i_i_reg_616 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state11_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state19_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal tmp_54_3_i_i_reg_622 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal row_fu_458_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg_631 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal F_temp_data_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal F_temp_data_ce0 : STD_LOGIC;
    signal F_temp_data_we0 : STD_LOGIC;
    signal F_temp_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_temp_data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_temp_data_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal F_temp_data_ce1 : STD_LOGIC;
    signal F_temp_data_we1 : STD_LOGIC;
    signal F_temp_data_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_temp_data_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal V_temp_data_ce0 : STD_LOGIC;
    signal V_temp_data_we0 : STD_LOGIC;
    signal V_temp_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_temp_data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_temp_data_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal V_temp_data_ce1 : STD_LOGIC;
    signal V_temp_data_we1 : STD_LOGIC;
    signal V_temp_data_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getTotalCurrent_fu_363_ap_start : STD_LOGIC;
    signal grp_getTotalCurrent_fu_363_ap_done : STD_LOGIC;
    signal grp_getTotalCurrent_fu_363_ap_idle : STD_LOGIC;
    signal grp_getTotalCurrent_fu_363_ap_ready : STD_LOGIC;
    signal grp_getTotalCurrent_fu_363_output_r_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getTotalCurrent_fu_363_output_r_TVALID : STD_LOGIC;
    signal grp_getTotalCurrent_fu_363_output_r_TREADY : STD_LOGIC;
    signal grp_getTotalCurrent_fu_363_output_r_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getTotalCurrent_fu_363_F_temp_data_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getTotalCurrent_fu_363_F_temp_data_ce0 : STD_LOGIC;
    signal grp_getTotalCurrent_fu_363_V_temp_data_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getTotalCurrent_fu_363_V_temp_data_ce0 : STD_LOGIC;
    signal RowOfBlocks_V_2_reg_232 : STD_LOGIC_VECTOR (25 downto 0);
    signal exitcond_i_i_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_V_temp_data_i_i_load_3_phi_fu_248_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_F_temp_data_i_i_load_3_phi_fu_260_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_V_temp_data_i_i_load_2_phi_fu_272_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_phi_mux_F_temp_data_i_i_load_2_phi_fu_284_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_phi_mux_V_temp_data_i_i_load_1_phi_fu_296_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_phi_mux_F_temp_data_i_i_load_1_phi_fu_308_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_phi_mux_V_temp_data_i_i_load_phi_fu_320_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_phi_mux_F_temp_data_i_i_load_phi_fu_332_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_phi_mux_i_op_assign_phi_fu_344_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal val_assign_reg_351 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_getTotalCurrent_fu_363_ap_start_reg : STD_LOGIC := '0';
    signal F_acc_V_data_00_update : STD_LOGIC;
    signal V_acc_V_data_00_update : STD_LOGIC;
    signal tmp_i_i_fu_394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_378_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_378_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal RowOfBlocks_V_1_cast_fu_390_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal i_op_assign_cast_fu_405_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_378_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component getTotalCurrent IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        row_V : IN STD_LOGIC_VECTOR (2 downto 0);
        output_r_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_r_TVALID : OUT STD_LOGIC;
        output_r_TREADY : IN STD_LOGIC;
        output_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        RowOfBlocks_V_read : IN STD_LOGIC_VECTOR (25 downto 0);
        simConfig_rowsToSimulate_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        F_temp_data_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        F_temp_data_ce0 : OUT STD_LOGIC;
        F_temp_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        V_temp_data_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        V_temp_data_ce0 : OUT STD_LOGIC;
        V_temp_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GapJunctionIP_fadd_32ns_32ns_32_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component I_calc_F_temp_data IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    F_temp_data_U : component I_calc_F_temp_data
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => F_temp_data_address0,
        ce0 => F_temp_data_ce0,
        we0 => F_temp_data_we0,
        d0 => F_temp_data_d0,
        q0 => F_temp_data_q0,
        address1 => F_temp_data_address1,
        ce1 => F_temp_data_ce1,
        we1 => F_temp_data_we1,
        d1 => F_temp_data_d1);

    V_temp_data_U : component I_calc_F_temp_data
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => V_temp_data_address0,
        ce0 => V_temp_data_ce0,
        we0 => V_temp_data_we0,
        d0 => V_temp_data_d0,
        q0 => V_temp_data_q0,
        address1 => V_temp_data_address1,
        ce1 => V_temp_data_ce1,
        we1 => V_temp_data_we1,
        d1 => V_temp_data_d1);

    grp_getTotalCurrent_fu_363 : component getTotalCurrent
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_getTotalCurrent_fu_363_ap_start,
        ap_done => grp_getTotalCurrent_fu_363_ap_done,
        ap_idle => grp_getTotalCurrent_fu_363_ap_idle,
        ap_ready => grp_getTotalCurrent_fu_363_ap_ready,
        row_V => val_assign_reg_351,
        output_r_TDATA => grp_getTotalCurrent_fu_363_output_r_TDATA,
        output_r_TVALID => grp_getTotalCurrent_fu_363_output_r_TVALID,
        output_r_TREADY => grp_getTotalCurrent_fu_363_output_r_TREADY,
        output_r_TLAST => grp_getTotalCurrent_fu_363_output_r_TLAST,
        RowOfBlocks_V_read => RowOfBlocks_V_2_reg_232,
        simConfig_rowsToSimulate_V_read => simConfig_rowsToSimu_reg_469,
        F_temp_data_address0 => grp_getTotalCurrent_fu_363_F_temp_data_address0,
        F_temp_data_ce0 => grp_getTotalCurrent_fu_363_F_temp_data_ce0,
        F_temp_data_q0 => F_temp_data_q0,
        V_temp_data_address0 => grp_getTotalCurrent_fu_363_V_temp_data_address0,
        V_temp_data_ce0 => grp_getTotalCurrent_fu_363_V_temp_data_ce0,
        V_temp_data_q0 => V_temp_data_q0);

    GapJunctionIP_fadd_32ns_32ns_32_8_full_dsp_1_U212 : component GapJunctionIP_fadd_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_378_p0,
        din1 => grp_fu_378_p1,
        ce => grp_fu_378_ce,
        dout => grp_fu_378_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((tmp_i_i_fu_394_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_getTotalCurrent_fu_363_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_getTotalCurrent_fu_363_ap_start_reg <= ap_const_logic_0;
            else
                if (((exitcond_i_i_fu_452_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                    grp_getTotalCurrent_fu_363_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_getTotalCurrent_fu_363_ap_ready = ap_const_logic_1)) then 
                    grp_getTotalCurrent_fu_363_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    F_temp_data_i_i_load_1_reg_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                F_temp_data_i_i_load_1_reg_304 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then 
                F_temp_data_i_i_load_1_reg_304 <= tmp_53_1_i_i_reg_592;
            end if; 
        end if;
    end process;

    F_temp_data_i_i_load_2_reg_280_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                F_temp_data_i_i_load_2_reg_280 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then 
                F_temp_data_i_i_load_2_reg_280 <= tmp_53_2_i_i_reg_604;
            end if; 
        end if;
    end process;

    F_temp_data_i_i_load_3_reg_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                F_temp_data_i_i_load_3_reg_256 <= ap_const_lv32_0;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then 
                F_temp_data_i_i_load_3_reg_256 <= tmp_53_3_i_i_reg_616;
            end if; 
        end if;
    end process;

    F_temp_data_i_i_load_reg_328_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                F_temp_data_i_i_load_reg_328 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then 
                F_temp_data_i_i_load_reg_328 <= tmp_53_i_i_reg_580;
            end if; 
        end if;
    end process;

    RowOfBlocks_V_2_reg_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                RowOfBlocks_V_2_reg_232 <= ap_const_lv26_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (exitcond_i_i_fu_452_p2 = ap_const_lv1_1))) then 
                RowOfBlocks_V_2_reg_232 <= RowOfBlocks_V_reg_526;
            end if; 
        end if;
    end process;

    V_temp_data_i_i_load_1_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                V_temp_data_i_i_load_1_reg_292 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then 
                V_temp_data_i_i_load_1_reg_292 <= tmp_54_1_i_i_reg_598;
            end if; 
        end if;
    end process;

    V_temp_data_i_i_load_2_reg_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                V_temp_data_i_i_load_2_reg_268 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then 
                V_temp_data_i_i_load_2_reg_268 <= tmp_54_2_i_i_reg_610;
            end if; 
        end if;
    end process;

    V_temp_data_i_i_load_3_reg_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                V_temp_data_i_i_load_3_reg_244 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_35_i_i_reg_531_pp0_iter2_reg = ap_const_lv1_1))) then 
                V_temp_data_i_i_load_3_reg_244 <= tmp_54_3_i_i_reg_622;
            end if; 
        end if;
    end process;

    V_temp_data_i_i_load_reg_316_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                V_temp_data_i_i_load_reg_316 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then 
                V_temp_data_i_i_load_reg_316 <= tmp_54_i_i_reg_586;
            end if; 
        end if;
    end process;

    i_op_assign_reg_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                i_op_assign_reg_340 <= ap_const_lv26_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_35_i_i_reg_531 = ap_const_lv1_1))) then 
                i_op_assign_reg_340 <= block_reg_535;
            end if; 
        end if;
    end process;

    val_assign_reg_351_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                val_assign_reg_351 <= ap_const_lv3_0;
            elsif (((grp_getTotalCurrent_fu_363_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                val_assign_reg_351 <= row_reg_631;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                RowOfBlocks_V_reg_526 <= RowOfBlocks_V_fu_399_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                block_reg_535 <= block_fu_414_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                row_reg_631 <= row_fu_458_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                simConfig_BLOCK_NUMB_reg_464 <= simConfig_BLOCK_NUMBERS_V_dout;
                simConfig_rowsToSimu_reg_469 <= simConfig_rowsToSimulate_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_35_i_i_reg_531 <= tmp_35_i_i_fu_409_p2;
                tmp_35_i_i_reg_531_pp0_iter1_reg <= tmp_35_i_i_reg_531;
                tmp_35_i_i_reg_531_pp0_iter2_reg <= tmp_35_i_i_reg_531_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then
                tmp_53_1_i_i_reg_592 <= grp_fu_378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then
                tmp_53_2_i_i_reg_604 <= grp_fu_378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then
                tmp_53_3_i_i_reg_616 <= grp_fu_378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then
                tmp_53_i_i_reg_580 <= grp_fu_378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then
                tmp_54_1_i_i_reg_598 <= grp_fu_378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then
                tmp_54_2_i_i_reg_610 <= grp_fu_378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then
                tmp_54_3_i_i_reg_622 <= grp_fu_378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then
                tmp_54_i_i_reg_586 <= grp_fu_378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_35_i_i_reg_531 = ap_const_lv1_1))) then
                tmp_data_0_9_reg_560 <= V_acc_V_data_0_dout;
                tmp_data_0_reg_540 <= F_acc_V_data_0_dout;
                tmp_data_1_9_reg_565 <= V_acc_V_data_1_dout;
                tmp_data_1_reg_545 <= F_acc_V_data_1_dout;
                tmp_data_2_9_reg_570 <= V_acc_V_data_2_dout;
                tmp_data_2_reg_550 <= F_acc_V_data_2_dout;
                tmp_data_3_9_reg_575 <= V_acc_V_data_3_dout;
                tmp_data_3_reg_555 <= F_acc_V_data_3_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, simConfig_rowsToSimulate_V_empty_n, simConfig_BLOCK_NUMBERS_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_state2, tmp_35_i_i_fu_409_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_state23, ap_block_pp0_stage0_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage1_subdone, grp_getTotalCurrent_fu_363_ap_done, exitcond_i_i_fu_452_p2, ap_CS_fsm_state24, tmp_i_i_fu_394_p2, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_i_i_fu_394_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_35_i_i_fu_409_p2 = ap_const_lv1_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_35_i_i_fu_409_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state23) and (exitcond_i_i_fu_452_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                if (((grp_getTotalCurrent_fu_363_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    F_acc_V_data_00_status <= (F_acc_V_data_3_empty_n and F_acc_V_data_2_empty_n and F_acc_V_data_1_empty_n and F_acc_V_data_0_empty_n);

    F_acc_V_data_00_update_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_35_i_i_reg_531, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_35_i_i_reg_531 = ap_const_lv1_1))) then 
            F_acc_V_data_00_update <= ap_const_logic_1;
        else 
            F_acc_V_data_00_update <= ap_const_logic_0;
        end if; 
    end process;


    F_acc_V_data_0_blk_n_assign_proc : process(F_acc_V_data_0_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_35_i_i_reg_531)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_35_i_i_reg_531 = ap_const_lv1_1))) then 
            F_acc_V_data_0_blk_n <= F_acc_V_data_0_empty_n;
        else 
            F_acc_V_data_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    F_acc_V_data_0_read <= F_acc_V_data_00_update;

    F_acc_V_data_1_blk_n_assign_proc : process(F_acc_V_data_1_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_35_i_i_reg_531)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_35_i_i_reg_531 = ap_const_lv1_1))) then 
            F_acc_V_data_1_blk_n <= F_acc_V_data_1_empty_n;
        else 
            F_acc_V_data_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    F_acc_V_data_1_read <= F_acc_V_data_00_update;

    F_acc_V_data_2_blk_n_assign_proc : process(F_acc_V_data_2_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_35_i_i_reg_531)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_35_i_i_reg_531 = ap_const_lv1_1))) then 
            F_acc_V_data_2_blk_n <= F_acc_V_data_2_empty_n;
        else 
            F_acc_V_data_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    F_acc_V_data_2_read <= F_acc_V_data_00_update;

    F_acc_V_data_3_blk_n_assign_proc : process(F_acc_V_data_3_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_35_i_i_reg_531)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_35_i_i_reg_531 = ap_const_lv1_1))) then 
            F_acc_V_data_3_blk_n <= F_acc_V_data_3_empty_n;
        else 
            F_acc_V_data_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    F_acc_V_data_3_read <= F_acc_V_data_00_update;

    F_temp_data_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter2, ap_CS_fsm_state3, grp_getTotalCurrent_fu_363_F_temp_data_address0, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_CS_fsm_state24)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            F_temp_data_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            F_temp_data_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            F_temp_data_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            F_temp_data_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            F_temp_data_address0 <= grp_getTotalCurrent_fu_363_F_temp_data_address0;
        else 
            F_temp_data_address0 <= "XX";
        end if; 
    end process;


    F_temp_data_address1_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage6, ap_CS_fsm_state3, ap_block_pp0_stage6, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            F_temp_data_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            F_temp_data_address1 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            F_temp_data_address1 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            F_temp_data_address1 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            F_temp_data_address1 <= "XX";
        end if; 
    end process;


    F_temp_data_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter2, ap_CS_fsm_state3, grp_getTotalCurrent_fu_363_F_temp_data_ce0, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            F_temp_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            F_temp_data_ce0 <= grp_getTotalCurrent_fu_363_F_temp_data_ce0;
        else 
            F_temp_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    F_temp_data_ce1_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            F_temp_data_ce1 <= ap_const_logic_1;
        else 
            F_temp_data_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    F_temp_data_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_53_1_i_i_reg_592, ap_CS_fsm_pp0_stage4, tmp_53_3_i_i_reg_616, ap_enable_reg_pp0_iter2, ap_CS_fsm_state3, ap_block_pp0_stage0, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            F_temp_data_d0 <= tmp_53_3_i_i_reg_616;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            F_temp_data_d0 <= tmp_53_1_i_i_reg_592;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            F_temp_data_d0 <= ap_const_lv32_0;
        else 
            F_temp_data_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    F_temp_data_d1_assign_proc : process(ap_CS_fsm_state2, tmp_53_i_i_reg_580, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, tmp_53_2_i_i_reg_604, ap_CS_fsm_pp0_stage6, ap_CS_fsm_state3, ap_block_pp0_stage6, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            F_temp_data_d1 <= tmp_53_2_i_i_reg_604;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            F_temp_data_d1 <= tmp_53_i_i_reg_580;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            F_temp_data_d1 <= ap_const_lv32_0;
        else 
            F_temp_data_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    F_temp_data_we0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_35_i_i_reg_531_pp0_iter1_reg, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter2, ap_CS_fsm_state3, tmp_i_i_fu_394_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_i_i_fu_394_p2 = ap_const_lv1_1)))) then 
            F_temp_data_we0 <= ap_const_logic_1;
        else 
            F_temp_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    F_temp_data_we1_assign_proc : process(ap_CS_fsm_state2, tmp_35_i_i_reg_531_pp0_iter1_reg, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_state3, tmp_i_i_fu_394_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_i_i_fu_394_p2 = ap_const_lv1_1)))) then 
            F_temp_data_we1 <= ap_const_logic_1;
        else 
            F_temp_data_we1 <= ap_const_logic_0;
        end if; 
    end process;

    RowOfBlocks_V_1_cast_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(RowOfBlocks_V_2_reg_232),27));
    RowOfBlocks_V_fu_399_p2 <= std_logic_vector(unsigned(RowOfBlocks_V_2_reg_232) + unsigned(ap_const_lv26_1));
    V_acc_V_data_00_status <= (V_acc_V_data_3_empty_n and V_acc_V_data_2_empty_n and V_acc_V_data_1_empty_n and V_acc_V_data_0_empty_n);

    V_acc_V_data_00_update_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_35_i_i_reg_531, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_35_i_i_reg_531 = ap_const_lv1_1))) then 
            V_acc_V_data_00_update <= ap_const_logic_1;
        else 
            V_acc_V_data_00_update <= ap_const_logic_0;
        end if; 
    end process;


    V_acc_V_data_0_blk_n_assign_proc : process(V_acc_V_data_0_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_35_i_i_reg_531)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_35_i_i_reg_531 = ap_const_lv1_1))) then 
            V_acc_V_data_0_blk_n <= V_acc_V_data_0_empty_n;
        else 
            V_acc_V_data_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_acc_V_data_0_read <= V_acc_V_data_00_update;

    V_acc_V_data_1_blk_n_assign_proc : process(V_acc_V_data_1_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_35_i_i_reg_531)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_35_i_i_reg_531 = ap_const_lv1_1))) then 
            V_acc_V_data_1_blk_n <= V_acc_V_data_1_empty_n;
        else 
            V_acc_V_data_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_acc_V_data_1_read <= V_acc_V_data_00_update;

    V_acc_V_data_2_blk_n_assign_proc : process(V_acc_V_data_2_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_35_i_i_reg_531)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_35_i_i_reg_531 = ap_const_lv1_1))) then 
            V_acc_V_data_2_blk_n <= V_acc_V_data_2_empty_n;
        else 
            V_acc_V_data_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_acc_V_data_2_read <= V_acc_V_data_00_update;

    V_acc_V_data_3_blk_n_assign_proc : process(V_acc_V_data_3_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_35_i_i_reg_531)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_35_i_i_reg_531 = ap_const_lv1_1))) then 
            V_acc_V_data_3_blk_n <= V_acc_V_data_3_empty_n;
        else 
            V_acc_V_data_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_acc_V_data_3_read <= V_acc_V_data_00_update;

    V_temp_data_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_state2, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter2, ap_CS_fsm_state3, grp_getTotalCurrent_fu_363_V_temp_data_address0, ap_block_pp0_stage5, ap_CS_fsm_state24)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            V_temp_data_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            V_temp_data_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            V_temp_data_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            V_temp_data_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            V_temp_data_address0 <= grp_getTotalCurrent_fu_363_V_temp_data_address0;
        else 
            V_temp_data_address0 <= "XX";
        end if; 
    end process;


    V_temp_data_address1_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage7, ap_CS_fsm_state3, ap_block_pp0_stage7, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            V_temp_data_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            V_temp_data_address1 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            V_temp_data_address1 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            V_temp_data_address1 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            V_temp_data_address1 <= "XX";
        end if; 
    end process;


    V_temp_data_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_state2, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_enable_reg_pp0_iter2, ap_CS_fsm_state3, grp_getTotalCurrent_fu_363_V_temp_data_ce0, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            V_temp_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            V_temp_data_ce0 <= grp_getTotalCurrent_fu_363_V_temp_data_ce0;
        else 
            V_temp_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    V_temp_data_ce1_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            V_temp_data_ce1 <= ap_const_logic_1;
        else 
            V_temp_data_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    V_temp_data_d0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_state2, ap_enable_reg_pp0_iter1, tmp_54_1_i_i_reg_598, ap_CS_fsm_pp0_stage5, tmp_54_3_i_i_reg_622, ap_enable_reg_pp0_iter2, ap_CS_fsm_state3, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            V_temp_data_d0 <= tmp_54_3_i_i_reg_622;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            V_temp_data_d0 <= tmp_54_1_i_i_reg_598;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            V_temp_data_d0 <= ap_const_lv32_0;
        else 
            V_temp_data_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    V_temp_data_d1_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp0_iter1, tmp_54_i_i_reg_586, ap_CS_fsm_pp0_stage3, tmp_54_2_i_i_reg_610, ap_CS_fsm_pp0_stage7, ap_CS_fsm_state3, ap_block_pp0_stage7, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            V_temp_data_d1 <= tmp_54_2_i_i_reg_610;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            V_temp_data_d1 <= tmp_54_i_i_reg_586;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            V_temp_data_d1 <= ap_const_lv32_0;
        else 
            V_temp_data_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    V_temp_data_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_state2, tmp_35_i_i_reg_531_pp0_iter1_reg, tmp_35_i_i_reg_531_pp0_iter2_reg, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_enable_reg_pp0_iter2, ap_CS_fsm_state3, tmp_i_i_fu_394_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_35_i_i_reg_531_pp0_iter2_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_i_i_fu_394_p2 = ap_const_lv1_1)))) then 
            V_temp_data_we0 <= ap_const_logic_1;
        else 
            V_temp_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    V_temp_data_we1_assign_proc : process(ap_CS_fsm_state2, tmp_35_i_i_reg_531_pp0_iter1_reg, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_state3, tmp_i_i_fu_394_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_i_i_fu_394_p2 = ap_const_lv1_1)))) then 
            V_temp_data_we1 <= ap_const_logic_1;
        else 
            V_temp_data_we1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state22 <= ap_CS_fsm(11);
    ap_CS_fsm_state23 <= ap_CS_fsm(12);
    ap_CS_fsm_state24 <= ap_CS_fsm(13);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, tmp_35_i_i_reg_531, F_acc_V_data_00_status, V_acc_V_data_00_status)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((ap_const_logic_0 = V_acc_V_data_00_status) and (tmp_35_i_i_reg_531 = ap_const_lv1_1)) or ((ap_const_logic_0 = F_acc_V_data_00_status) and (tmp_35_i_i_reg_531 = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, tmp_35_i_i_reg_531, F_acc_V_data_00_status, V_acc_V_data_00_status)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((ap_const_logic_0 = V_acc_V_data_00_status) and (tmp_35_i_i_reg_531 = ap_const_lv1_1)) or ((ap_const_logic_0 = F_acc_V_data_00_status) and (tmp_35_i_i_reg_531 = ap_const_lv1_1))));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, simConfig_rowsToSimulate_V_empty_n, simConfig_BLOCK_NUMBERS_V_empty_n)
    begin
                ap_block_state1 <= ((simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage1_iter0_assign_proc : process(tmp_35_i_i_reg_531, F_acc_V_data_00_status, V_acc_V_data_00_status)
    begin
                ap_block_state5_pp0_stage1_iter0 <= (((ap_const_logic_0 = V_acc_V_data_00_status) and (tmp_35_i_i_reg_531 = ap_const_lv1_1)) or ((ap_const_logic_0 = F_acc_V_data_00_status) and (tmp_35_i_i_reg_531 = ap_const_lv1_1)));
    end process;

        ap_block_state6_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state4_assign_proc : process(tmp_35_i_i_fu_409_p2)
    begin
        if ((tmp_35_i_i_fu_409_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, tmp_i_i_fu_394_p2)
    begin
        if (((tmp_i_i_fu_394_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_F_temp_data_i_i_load_1_phi_fu_308_p4_assign_proc : process(F_temp_data_i_i_load_1_reg_304, tmp_35_i_i_reg_531_pp0_iter1_reg, ap_enable_reg_pp0_iter1, tmp_53_1_i_i_reg_592, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_phi_mux_F_temp_data_i_i_load_1_phi_fu_308_p4 <= tmp_53_1_i_i_reg_592;
        else 
            ap_phi_mux_F_temp_data_i_i_load_1_phi_fu_308_p4 <= F_temp_data_i_i_load_1_reg_304;
        end if; 
    end process;


    ap_phi_mux_F_temp_data_i_i_load_2_phi_fu_284_p4_assign_proc : process(F_temp_data_i_i_load_2_reg_280, tmp_35_i_i_reg_531_pp0_iter1_reg, ap_enable_reg_pp0_iter1, tmp_53_2_i_i_reg_604, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_phi_mux_F_temp_data_i_i_load_2_phi_fu_284_p4 <= tmp_53_2_i_i_reg_604;
        else 
            ap_phi_mux_F_temp_data_i_i_load_2_phi_fu_284_p4 <= F_temp_data_i_i_load_2_reg_280;
        end if; 
    end process;


    ap_phi_mux_F_temp_data_i_i_load_3_phi_fu_260_p4_assign_proc : process(F_temp_data_i_i_load_3_reg_256, ap_CS_fsm_pp0_stage0, tmp_35_i_i_reg_531_pp0_iter1_reg, tmp_53_3_i_i_reg_616, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_phi_mux_F_temp_data_i_i_load_3_phi_fu_260_p4 <= tmp_53_3_i_i_reg_616;
        else 
            ap_phi_mux_F_temp_data_i_i_load_3_phi_fu_260_p4 <= F_temp_data_i_i_load_3_reg_256;
        end if; 
    end process;


    ap_phi_mux_F_temp_data_i_i_load_phi_fu_332_p4_assign_proc : process(F_temp_data_i_i_load_reg_328, tmp_35_i_i_reg_531_pp0_iter1_reg, tmp_53_i_i_reg_580, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_phi_mux_F_temp_data_i_i_load_phi_fu_332_p4 <= tmp_53_i_i_reg_580;
        else 
            ap_phi_mux_F_temp_data_i_i_load_phi_fu_332_p4 <= F_temp_data_i_i_load_reg_328;
        end if; 
    end process;


    ap_phi_mux_V_temp_data_i_i_load_1_phi_fu_296_p4_assign_proc : process(V_temp_data_i_i_load_1_reg_292, tmp_35_i_i_reg_531_pp0_iter1_reg, ap_enable_reg_pp0_iter1, tmp_54_1_i_i_reg_598, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_phi_mux_V_temp_data_i_i_load_1_phi_fu_296_p4 <= tmp_54_1_i_i_reg_598;
        else 
            ap_phi_mux_V_temp_data_i_i_load_1_phi_fu_296_p4 <= V_temp_data_i_i_load_1_reg_292;
        end if; 
    end process;


    ap_phi_mux_V_temp_data_i_i_load_2_phi_fu_272_p4_assign_proc : process(V_temp_data_i_i_load_2_reg_268, tmp_35_i_i_reg_531_pp0_iter1_reg, ap_enable_reg_pp0_iter1, tmp_54_2_i_i_reg_610, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_phi_mux_V_temp_data_i_i_load_2_phi_fu_272_p4 <= tmp_54_2_i_i_reg_610;
        else 
            ap_phi_mux_V_temp_data_i_i_load_2_phi_fu_272_p4 <= V_temp_data_i_i_load_2_reg_268;
        end if; 
    end process;


    ap_phi_mux_V_temp_data_i_i_load_3_phi_fu_248_p4_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, V_temp_data_i_i_load_3_reg_244, tmp_35_i_i_reg_531_pp0_iter2_reg, tmp_54_3_i_i_reg_622, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter2_reg = ap_const_lv1_1))) then 
            ap_phi_mux_V_temp_data_i_i_load_3_phi_fu_248_p4 <= tmp_54_3_i_i_reg_622;
        else 
            ap_phi_mux_V_temp_data_i_i_load_3_phi_fu_248_p4 <= V_temp_data_i_i_load_3_reg_244;
        end if; 
    end process;


    ap_phi_mux_V_temp_data_i_i_load_phi_fu_320_p4_assign_proc : process(V_temp_data_i_i_load_reg_316, tmp_35_i_i_reg_531_pp0_iter1_reg, ap_enable_reg_pp0_iter1, tmp_54_i_i_reg_586, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_35_i_i_reg_531_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_phi_mux_V_temp_data_i_i_load_phi_fu_320_p4 <= tmp_54_i_i_reg_586;
        else 
            ap_phi_mux_V_temp_data_i_i_load_phi_fu_320_p4 <= V_temp_data_i_i_load_reg_316;
        end if; 
    end process;


    ap_phi_mux_i_op_assign_phi_fu_344_p4_assign_proc : process(tmp_35_i_i_reg_531, i_op_assign_reg_340, ap_CS_fsm_pp0_stage0, block_reg_535, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_35_i_i_reg_531 = ap_const_lv1_1))) then 
            ap_phi_mux_i_op_assign_phi_fu_344_p4 <= block_reg_535;
        else 
            ap_phi_mux_i_op_assign_phi_fu_344_p4 <= i_op_assign_reg_340;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, tmp_i_i_fu_394_p2)
    begin
        if (((tmp_i_i_fu_394_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    block_fu_414_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_op_assign_phi_fu_344_p4) + unsigned(ap_const_lv26_1));
    exitcond_i_i_fu_452_p2 <= "1" when (val_assign_reg_351 = ap_const_lv3_4) else "0";

    grp_fu_378_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_378_ce <= ap_const_logic_1;
        else 
            grp_fu_378_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_378_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_phi_mux_V_temp_data_i_i_load_3_phi_fu_248_p4, ap_phi_mux_F_temp_data_i_i_load_3_phi_fu_260_p4, ap_block_pp0_stage0, ap_phi_mux_V_temp_data_i_i_load_2_phi_fu_272_p4, ap_block_pp0_stage7, ap_phi_mux_F_temp_data_i_i_load_2_phi_fu_284_p4, ap_block_pp0_stage6, ap_phi_mux_V_temp_data_i_i_load_1_phi_fu_296_p4, ap_block_pp0_stage5, ap_phi_mux_F_temp_data_i_i_load_1_phi_fu_308_p4, ap_block_pp0_stage4, ap_phi_mux_V_temp_data_i_i_load_phi_fu_320_p4, ap_block_pp0_stage3, ap_phi_mux_F_temp_data_i_i_load_phi_fu_332_p4, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_378_p0 <= ap_phi_mux_V_temp_data_i_i_load_3_phi_fu_248_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_378_p0 <= ap_phi_mux_F_temp_data_i_i_load_3_phi_fu_260_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_378_p0 <= ap_phi_mux_V_temp_data_i_i_load_2_phi_fu_272_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_378_p0 <= ap_phi_mux_F_temp_data_i_i_load_2_phi_fu_284_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_378_p0 <= ap_phi_mux_V_temp_data_i_i_load_1_phi_fu_296_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_378_p0 <= ap_phi_mux_F_temp_data_i_i_load_1_phi_fu_308_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_378_p0 <= ap_phi_mux_V_temp_data_i_i_load_phi_fu_320_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_378_p0 <= ap_phi_mux_F_temp_data_i_i_load_phi_fu_332_p4;
        else 
            grp_fu_378_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_378_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, tmp_data_0_reg_540, tmp_data_1_reg_545, tmp_data_2_reg_550, tmp_data_3_reg_555, tmp_data_0_9_reg_560, tmp_data_1_9_reg_565, tmp_data_2_9_reg_570, tmp_data_3_9_reg_575, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage6, ap_block_pp0_stage5, ap_block_pp0_stage4, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_378_p1 <= tmp_data_3_9_reg_575;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_378_p1 <= tmp_data_3_reg_555;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_378_p1 <= tmp_data_2_9_reg_570;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_378_p1 <= tmp_data_2_reg_550;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_378_p1 <= tmp_data_1_9_reg_565;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_378_p1 <= tmp_data_1_reg_545;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_378_p1 <= tmp_data_0_9_reg_560;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_378_p1 <= tmp_data_0_reg_540;
        else 
            grp_fu_378_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_getTotalCurrent_fu_363_ap_start <= grp_getTotalCurrent_fu_363_ap_start_reg;
    grp_getTotalCurrent_fu_363_output_r_TREADY <= (output_r_TREADY and ap_CS_fsm_state24);
    i_op_assign_cast_fu_405_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_op_assign_phi_fu_344_p4),27));
    output_r_TDATA <= grp_getTotalCurrent_fu_363_output_r_TDATA;
    output_r_TLAST <= grp_getTotalCurrent_fu_363_output_r_TLAST;
    output_r_TVALID <= grp_getTotalCurrent_fu_363_output_r_TVALID;
    row_fu_458_p2 <= std_logic_vector(unsigned(val_assign_reg_351) + unsigned(ap_const_lv3_1));

    simConfig_BLOCK_NUMBERS_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, simConfig_BLOCK_NUMBERS_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            simConfig_BLOCK_NUMBERS_V_blk_n <= simConfig_BLOCK_NUMBERS_V_empty_n;
        else 
            simConfig_BLOCK_NUMBERS_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    simConfig_BLOCK_NUMBERS_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, simConfig_rowsToSimulate_V_empty_n, simConfig_BLOCK_NUMBERS_V_empty_n)
    begin
        if ((not(((simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            simConfig_BLOCK_NUMBERS_V_read <= ap_const_logic_1;
        else 
            simConfig_BLOCK_NUMBERS_V_read <= ap_const_logic_0;
        end if; 
    end process;


    simConfig_rowsToSimulate_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, simConfig_rowsToSimulate_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            simConfig_rowsToSimulate_V_blk_n <= simConfig_rowsToSimulate_V_empty_n;
        else 
            simConfig_rowsToSimulate_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    simConfig_rowsToSimulate_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, simConfig_rowsToSimulate_V_empty_n, simConfig_BLOCK_NUMBERS_V_empty_n)
    begin
        if ((not(((simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            simConfig_rowsToSimulate_V_read <= ap_const_logic_1;
        else 
            simConfig_rowsToSimulate_V_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_35_i_i_fu_409_p2 <= "1" when (signed(i_op_assign_cast_fu_405_p1) < signed(simConfig_BLOCK_NUMB_reg_464)) else "0";
    tmp_i_i_fu_394_p2 <= "1" when (signed(RowOfBlocks_V_1_cast_fu_390_p1) < signed(simConfig_rowsToSimu_reg_469)) else "0";
end behav;
