-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity acc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    simConfig_rowsToSimulate_V_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    simConfig_rowsToSimulate_V_empty_n : IN STD_LOGIC;
    simConfig_rowsToSimulate_V_read : OUT STD_LOGIC;
    simConfig_BLOCK_NUMBERS_V_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    simConfig_BLOCK_NUMBERS_V_empty_n : IN STD_LOGIC;
    simConfig_BLOCK_NUMBERS_V_read : OUT STD_LOGIC;
    simConfig_rowsToSimulate_V_out_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    simConfig_rowsToSimulate_V_out_full_n : IN STD_LOGIC;
    simConfig_rowsToSimulate_V_out_write : OUT STD_LOGIC;
    simConfig_BLOCK_NUMBERS_V_out_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    simConfig_BLOCK_NUMBERS_V_out_full_n : IN STD_LOGIC;
    simConfig_BLOCK_NUMBERS_V_out_write : OUT STD_LOGIC;
    F_V_data_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    F_V_data_0_empty_n : IN STD_LOGIC;
    F_V_data_0_read : OUT STD_LOGIC;
    F_V_data_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    F_V_data_1_empty_n : IN STD_LOGIC;
    F_V_data_1_read : OUT STD_LOGIC;
    F_V_data_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    F_V_data_2_empty_n : IN STD_LOGIC;
    F_V_data_2_read : OUT STD_LOGIC;
    F_V_data_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    F_V_data_3_empty_n : IN STD_LOGIC;
    F_V_data_3_read : OUT STD_LOGIC;
    V_V_data_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    V_V_data_0_empty_n : IN STD_LOGIC;
    V_V_data_0_read : OUT STD_LOGIC;
    V_V_data_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    V_V_data_1_empty_n : IN STD_LOGIC;
    V_V_data_1_read : OUT STD_LOGIC;
    V_V_data_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    V_V_data_2_empty_n : IN STD_LOGIC;
    V_V_data_2_read : OUT STD_LOGIC;
    V_V_data_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    V_V_data_3_empty_n : IN STD_LOGIC;
    V_V_data_3_read : OUT STD_LOGIC;
    C_data_V_data_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_data_V_data_0_empty_n : IN STD_LOGIC;
    C_data_V_data_0_read : OUT STD_LOGIC;
    C_data_V_data_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_data_V_data_1_empty_n : IN STD_LOGIC;
    C_data_V_data_1_read : OUT STD_LOGIC;
    C_data_V_data_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_data_V_data_2_empty_n : IN STD_LOGIC;
    C_data_V_data_2_read : OUT STD_LOGIC;
    C_data_V_data_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_data_V_data_3_empty_n : IN STD_LOGIC;
    C_data_V_data_3_read : OUT STD_LOGIC;
    F_acc_V_data_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    F_acc_V_data_0_full_n : IN STD_LOGIC;
    F_acc_V_data_0_write : OUT STD_LOGIC;
    F_acc_V_data_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    F_acc_V_data_1_full_n : IN STD_LOGIC;
    F_acc_V_data_1_write : OUT STD_LOGIC;
    F_acc_V_data_2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    F_acc_V_data_2_full_n : IN STD_LOGIC;
    F_acc_V_data_2_write : OUT STD_LOGIC;
    F_acc_V_data_3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    F_acc_V_data_3_full_n : IN STD_LOGIC;
    F_acc_V_data_3_write : OUT STD_LOGIC;
    V_acc_V_data_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    V_acc_V_data_0_full_n : IN STD_LOGIC;
    V_acc_V_data_0_write : OUT STD_LOGIC;
    V_acc_V_data_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    V_acc_V_data_1_full_n : IN STD_LOGIC;
    V_acc_V_data_1_write : OUT STD_LOGIC;
    V_acc_V_data_2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    V_acc_V_data_2_full_n : IN STD_LOGIC;
    V_acc_V_data_2_write : OUT STD_LOGIC;
    V_acc_V_data_3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    V_acc_V_data_3_full_n : IN STD_LOGIC;
    V_acc_V_data_3_write : OUT STD_LOGIC );
end;


architecture behav of acc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv54_1 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";

    signal real_start : STD_LOGIC;
    signal real_start_status_reg : STD_LOGIC := '0';
    signal internal_ap_ready : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal start_once_reg : STD_LOGIC := '0';
    signal start_control_reg : STD_LOGIC := '0';
    signal simConfig_rowsToSimulate_V_blk_n : STD_LOGIC;
    signal simConfig_BLOCK_NUMBERS_V_blk_n : STD_LOGIC;
    signal simConfig_rowsToSimulate_V_out_blk_n : STD_LOGIC;
    signal simConfig_BLOCK_NUMBERS_V_out_blk_n : STD_LOGIC;
    signal grp_readCalcData_fu_179_F_V_data_0_blk_n : STD_LOGIC;
    signal F_V_data_0_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_315 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal grp_readCalcData_fu_179_F_V_data_1_blk_n : STD_LOGIC;
    signal F_V_data_1_blk_n : STD_LOGIC;
    signal grp_readCalcData_fu_179_F_V_data_2_blk_n : STD_LOGIC;
    signal F_V_data_2_blk_n : STD_LOGIC;
    signal grp_readCalcData_fu_179_F_V_data_3_blk_n : STD_LOGIC;
    signal F_V_data_3_blk_n : STD_LOGIC;
    signal grp_readCalcData_fu_179_V_V_data_0_blk_n : STD_LOGIC;
    signal V_V_data_0_blk_n : STD_LOGIC;
    signal grp_readCalcData_fu_179_V_V_data_1_blk_n : STD_LOGIC;
    signal V_V_data_1_blk_n : STD_LOGIC;
    signal grp_readCalcData_fu_179_V_V_data_2_blk_n : STD_LOGIC;
    signal V_V_data_2_blk_n : STD_LOGIC;
    signal grp_readCalcData_fu_179_V_V_data_3_blk_n : STD_LOGIC;
    signal V_V_data_3_blk_n : STD_LOGIC;
    signal C_data_V_data_0_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal C_data_V_data_1_blk_n : STD_LOGIC;
    signal C_data_V_data_2_blk_n : STD_LOGIC;
    signal C_data_V_data_3_blk_n : STD_LOGIC;
    signal F_acc_V_data_0_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315 : STD_LOGIC_VECTOR (0 downto 0);
    signal F_acc_V_data_1_blk_n : STD_LOGIC;
    signal F_acc_V_data_2_blk_n : STD_LOGIC;
    signal F_acc_V_data_3_blk_n : STD_LOGIC;
    signal V_acc_V_data_0_blk_n : STD_LOGIC;
    signal V_acc_V_data_1_blk_n : STD_LOGIC;
    signal V_acc_V_data_2_blk_n : STD_LOGIC;
    signal V_acc_V_data_3_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_168 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_condition_267 : BOOLEAN;
    signal grp_fu_283_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bound_reg_310 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal exitcond_flatten_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_315 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_315 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_294_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal indvar_flatten_next_reg_319 : STD_LOGIC_VECTOR (53 downto 0);
    signal F_vector_data_0_reg_324 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_data_V_data_00_status : STD_LOGIC;
    signal ap_condition_316 : BOOLEAN;
    signal F_vector_data_1_reg_329 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_2_reg_334 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_3_reg_339 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_0_reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_1_reg_349 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_2_reg_354 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_3_reg_359 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_0_5_reg_364 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_1_5_reg_369 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_5_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_5_reg_379 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_0_1_reg_384 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_condition_312 : BOOLEAN;
    signal F_vector_data_1_1_reg_389 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_2_1_reg_394 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_3_1_reg_399 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_0_1_reg_404 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_1_1_reg_409 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_2_1_reg_414 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_3_1_reg_419 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_0_6_reg_424 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_1_6_reg_429 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_6_reg_434 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_6_reg_439 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_0_2_reg_444 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_1_2_reg_449 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_2_2_reg_454 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_3_2_reg_459 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_0_2_reg_464 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_1_2_reg_469 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_2_2_reg_474 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_3_2_reg_479 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_0_3_reg_484 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_1_3_reg_489 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_2_3_reg_494 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_vector_data_3_3_reg_499 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_0_3_reg_504 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_1_3_reg_509 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_2_3_reg_514 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_vector_data_3_3_reg_519 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_211_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_i_reg_524 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_acc_V_data_01_status : STD_LOGIC;
    signal V_acc_V_data_01_status : STD_LOGIC;
    signal ap_condition_392 : BOOLEAN;
    signal grp_fu_215_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_i_i_i_reg_529 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_219_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_i_i_i_reg_534 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_223_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_i_i_i_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_0_7_reg_544 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_1_7_reg_549 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_7_reg_554 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_7_reg_559 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i204_i_i_reg_564 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_i205_i_i_reg_569 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_i206_i_i_reg_574 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_i207_i_i_reg_579 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_0_8_reg_584 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_1_8_reg_589 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_8_reg_594 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_8_reg_599 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i223_i_i_reg_604 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal tmp_1_i224_i_i_reg_609 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_i225_i_i_reg_614 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_i226_i_i_reg_619 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i230_i_i_reg_624 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_1_i231_i_i_reg_629 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_i232_i_i_reg_634 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_i233_i_i_reg_639 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i249_i_i_reg_644 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_i250_i_i_reg_649 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_i251_i_i_reg_654 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_i252_i_i_reg_659 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i256_i_i_reg_664 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_i257_i_i_reg_669 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_i258_i_i_reg_674 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_i259_i_i_reg_679 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i275_i_i_reg_684 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_i276_i_i_reg_689 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_i277_i_i_reg_694 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_i278_i_i_reg_699 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i282_i_i_reg_704 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_i283_i_i_reg_709 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_i284_i_i_reg_714 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_i285_i_i_reg_719 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_199_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp1_reg_724 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_203_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp2_reg_729 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp1_1_reg_734 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp2_1_reg_739 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp1_2_reg_744 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp2_2_reg_749 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp1_3_reg_754 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal dataTemp2_3_reg_759 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp1_4_reg_764 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp2_4_reg_769 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp1_5_reg_774 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp2_5_reg_779 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp1_6_reg_784 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp2_6_reg_789 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp1_7_reg_794 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataTemp2_7_reg_799 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_207_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_0_reg_804 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_0_4_reg_809 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_1_reg_814 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_1_4_reg_819 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_reg_824 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_4_reg_829 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_reg_834 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_4_reg_839 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readCalcData_fu_179_ap_start : STD_LOGIC;
    signal grp_readCalcData_fu_179_ap_done : STD_LOGIC;
    signal grp_readCalcData_fu_179_ap_idle : STD_LOGIC;
    signal grp_readCalcData_fu_179_ap_ready : STD_LOGIC;
    signal grp_readCalcData_fu_179_F_V_data_0_read : STD_LOGIC;
    signal grp_readCalcData_fu_179_F_V_data_1_read : STD_LOGIC;
    signal grp_readCalcData_fu_179_F_V_data_2_read : STD_LOGIC;
    signal grp_readCalcData_fu_179_F_V_data_3_read : STD_LOGIC;
    signal grp_readCalcData_fu_179_V_V_data_0_read : STD_LOGIC;
    signal grp_readCalcData_fu_179_V_V_data_1_read : STD_LOGIC;
    signal grp_readCalcData_fu_179_V_V_data_2_read : STD_LOGIC;
    signal grp_readCalcData_fu_179_V_V_data_3_read : STD_LOGIC;
    signal grp_readCalcData_fu_179_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readCalcData_fu_179_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readCalcData_fu_179_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readCalcData_fu_179_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readCalcData_fu_179_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readCalcData_fu_179_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readCalcData_fu_179_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readCalcData_fu_179_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readCalcData_fu_179_ap_ce : STD_LOGIC;
    signal indvar_flatten_phi_fu_172_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_reg_grp_readCalcData_fu_179_ap_start : STD_LOGIC := '0';
    signal C_data_V_data_00_update : STD_LOGIC;
    signal F_acc_V_data_01_update : STD_LOGIC;
    signal V_acc_V_data_01_update : STD_LOGIC;
    signal grp_fu_199_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_199_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_203_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_203_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_207_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_207_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_211_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_211_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_215_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_215_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_219_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_219_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_223_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_223_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_283_p0 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_283_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_199_ce : STD_LOGIC;
    signal grp_fu_203_ce : STD_LOGIC;
    signal grp_fu_207_ce : STD_LOGIC;
    signal grp_fu_211_ce : STD_LOGIC;
    signal grp_fu_215_ce : STD_LOGIC;
    signal grp_fu_219_ce : STD_LOGIC;
    signal grp_fu_223_ce : STD_LOGIC;
    signal grp_fu_283_ce : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_283_p00 : STD_LOGIC_VECTOR (53 downto 0);
    signal grp_fu_283_p10 : STD_LOGIC_VECTOR (53 downto 0);

    component readCalcData IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        F_V_data_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        F_V_data_0_empty_n : IN STD_LOGIC;
        F_V_data_0_read : OUT STD_LOGIC;
        F_V_data_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        F_V_data_1_empty_n : IN STD_LOGIC;
        F_V_data_1_read : OUT STD_LOGIC;
        F_V_data_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        F_V_data_2_empty_n : IN STD_LOGIC;
        F_V_data_2_read : OUT STD_LOGIC;
        F_V_data_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        F_V_data_3_empty_n : IN STD_LOGIC;
        F_V_data_3_read : OUT STD_LOGIC;
        V_V_data_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        V_V_data_0_empty_n : IN STD_LOGIC;
        V_V_data_0_read : OUT STD_LOGIC;
        V_V_data_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        V_V_data_1_empty_n : IN STD_LOGIC;
        V_V_data_1_read : OUT STD_LOGIC;
        V_V_data_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        V_V_data_2_empty_n : IN STD_LOGIC;
        V_V_data_2_read : OUT STD_LOGIC;
        V_V_data_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        V_V_data_3_empty_n : IN STD_LOGIC;
        V_V_data_3_read : OUT STD_LOGIC;
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        F_V_data_0_blk_n : OUT STD_LOGIC;
        F_V_data_1_blk_n : OUT STD_LOGIC;
        F_V_data_2_blk_n : OUT STD_LOGIC;
        F_V_data_3_blk_n : OUT STD_LOGIC;
        V_V_data_0_blk_n : OUT STD_LOGIC;
        V_V_data_1_blk_n : OUT STD_LOGIC;
        V_V_data_2_blk_n : OUT STD_LOGIC;
        V_V_data_3_blk_n : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC );
    end component;


    component GapJunctionIP_fadvdy IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GapJunctionIP_fmusc4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GapJunctionIP_mulwdI IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (26 downto 0);
        din1 : IN STD_LOGIC_VECTOR (26 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (53 downto 0) );
    end component;



begin
    grp_readCalcData_fu_179 : component readCalcData
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_readCalcData_fu_179_ap_start,
        ap_done => grp_readCalcData_fu_179_ap_done,
        ap_idle => grp_readCalcData_fu_179_ap_idle,
        ap_ready => grp_readCalcData_fu_179_ap_ready,
        F_V_data_0_dout => F_V_data_0_dout,
        F_V_data_0_empty_n => F_V_data_0_empty_n,
        F_V_data_0_read => grp_readCalcData_fu_179_F_V_data_0_read,
        F_V_data_1_dout => F_V_data_1_dout,
        F_V_data_1_empty_n => F_V_data_1_empty_n,
        F_V_data_1_read => grp_readCalcData_fu_179_F_V_data_1_read,
        F_V_data_2_dout => F_V_data_2_dout,
        F_V_data_2_empty_n => F_V_data_2_empty_n,
        F_V_data_2_read => grp_readCalcData_fu_179_F_V_data_2_read,
        F_V_data_3_dout => F_V_data_3_dout,
        F_V_data_3_empty_n => F_V_data_3_empty_n,
        F_V_data_3_read => grp_readCalcData_fu_179_F_V_data_3_read,
        V_V_data_0_dout => V_V_data_0_dout,
        V_V_data_0_empty_n => V_V_data_0_empty_n,
        V_V_data_0_read => grp_readCalcData_fu_179_V_V_data_0_read,
        V_V_data_1_dout => V_V_data_1_dout,
        V_V_data_1_empty_n => V_V_data_1_empty_n,
        V_V_data_1_read => grp_readCalcData_fu_179_V_V_data_1_read,
        V_V_data_2_dout => V_V_data_2_dout,
        V_V_data_2_empty_n => V_V_data_2_empty_n,
        V_V_data_2_read => grp_readCalcData_fu_179_V_V_data_2_read,
        V_V_data_3_dout => V_V_data_3_dout,
        V_V_data_3_empty_n => V_V_data_3_empty_n,
        V_V_data_3_read => grp_readCalcData_fu_179_V_V_data_3_read,
        ap_return_0 => grp_readCalcData_fu_179_ap_return_0,
        ap_return_1 => grp_readCalcData_fu_179_ap_return_1,
        ap_return_2 => grp_readCalcData_fu_179_ap_return_2,
        ap_return_3 => grp_readCalcData_fu_179_ap_return_3,
        ap_return_4 => grp_readCalcData_fu_179_ap_return_4,
        ap_return_5 => grp_readCalcData_fu_179_ap_return_5,
        ap_return_6 => grp_readCalcData_fu_179_ap_return_6,
        ap_return_7 => grp_readCalcData_fu_179_ap_return_7,
        F_V_data_0_blk_n => grp_readCalcData_fu_179_F_V_data_0_blk_n,
        F_V_data_1_blk_n => grp_readCalcData_fu_179_F_V_data_1_blk_n,
        F_V_data_2_blk_n => grp_readCalcData_fu_179_F_V_data_2_blk_n,
        F_V_data_3_blk_n => grp_readCalcData_fu_179_F_V_data_3_blk_n,
        V_V_data_0_blk_n => grp_readCalcData_fu_179_V_V_data_0_blk_n,
        V_V_data_1_blk_n => grp_readCalcData_fu_179_V_V_data_1_blk_n,
        V_V_data_2_blk_n => grp_readCalcData_fu_179_V_V_data_2_blk_n,
        V_V_data_3_blk_n => grp_readCalcData_fu_179_V_V_data_3_blk_n,
        ap_ce => grp_readCalcData_fu_179_ap_ce);

    GapJunctionIP_fadvdy_U156 : component GapJunctionIP_fadvdy
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_199_p0,
        din1 => grp_fu_199_p1,
        ce => grp_fu_199_ce,
        dout => grp_fu_199_p2);

    GapJunctionIP_fadvdy_U157 : component GapJunctionIP_fadvdy
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_203_p0,
        din1 => grp_fu_203_p1,
        ce => grp_fu_203_ce,
        dout => grp_fu_203_p2);

    GapJunctionIP_fadvdy_U158 : component GapJunctionIP_fadvdy
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_207_p0,
        din1 => grp_fu_207_p1,
        ce => grp_fu_207_ce,
        dout => grp_fu_207_p2);

    GapJunctionIP_fmusc4_x_U159 : component GapJunctionIP_fmusc4
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_211_p0,
        din1 => grp_fu_211_p1,
        ce => grp_fu_211_ce,
        dout => grp_fu_211_p2);

    GapJunctionIP_fmusc4_x_U160 : component GapJunctionIP_fmusc4
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_215_p0,
        din1 => grp_fu_215_p1,
        ce => grp_fu_215_ce,
        dout => grp_fu_215_p2);

    GapJunctionIP_fmusc4_x_U161 : component GapJunctionIP_fmusc4
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_219_p0,
        din1 => grp_fu_219_p1,
        ce => grp_fu_219_ce,
        dout => grp_fu_219_p2);

    GapJunctionIP_fmusc4_x_U162 : component GapJunctionIP_fmusc4
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_223_p0,
        din1 => grp_fu_223_p1,
        ce => grp_fu_223_ce,
        dout => grp_fu_223_p2);

    GapJunctionIP_mulwdI_U163 : component GapJunctionIP_mulwdI
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 27,
        din1_WIDTH => 27,
        dout_WIDTH => 54)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_283_p0,
        din1 => grp_fu_283_p1,
        ce => grp_fu_283_ce,
        dout => grp_fu_283_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state38))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond_flatten_fu_289_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and not((exitcond_flatten_reg_315 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_readCalcData_fu_179_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_readCalcData_fu_179_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1)))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1)))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1)))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_289_p2)))) then 
                    ap_reg_grp_readCalcData_fu_179_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_readCalcData_fu_179_ap_ready)) then 
                    ap_reg_grp_readCalcData_fu_179_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    real_start_status_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                real_start_status_reg <= ap_const_logic_0;
            else
                if (not((ap_const_logic_0 = start_full_n))) then 
                    real_start_status_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_0 = start_full_n) and (ap_const_logic_1 = internal_ap_ready))) then 
                    real_start_status_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_control_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_control_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = real_start) and ((ap_const_logic_1 = internal_ap_ready) or (ap_const_logic_0 = start_once_reg)))) then 
                    start_control_reg <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = start_control_reg) and (ap_const_logic_1 = start_full_n))) then 
                    start_control_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = real_start)) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_0 = ap_start)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                indvar_flatten_reg_168 <= indvar_flatten_next_reg_319;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                indvar_flatten_reg_168 <= ap_const_lv54_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1))))) then
                F_vector_data_0_1_reg_384 <= grp_readCalcData_fu_179_ap_return_0;
                F_vector_data_1_1_reg_389 <= grp_readCalcData_fu_179_ap_return_1;
                F_vector_data_2_1_reg_394 <= grp_readCalcData_fu_179_ap_return_2;
                F_vector_data_3_1_reg_399 <= grp_readCalcData_fu_179_ap_return_3;
                V_vector_data_0_1_reg_404 <= grp_readCalcData_fu_179_ap_return_4;
                V_vector_data_1_1_reg_409 <= grp_readCalcData_fu_179_ap_return_5;
                V_vector_data_2_1_reg_414 <= grp_readCalcData_fu_179_ap_return_6;
                V_vector_data_3_1_reg_419 <= grp_readCalcData_fu_179_ap_return_7;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1))))) then
                F_vector_data_0_2_reg_444 <= grp_readCalcData_fu_179_ap_return_0;
                F_vector_data_1_2_reg_449 <= grp_readCalcData_fu_179_ap_return_1;
                F_vector_data_2_2_reg_454 <= grp_readCalcData_fu_179_ap_return_2;
                F_vector_data_3_2_reg_459 <= grp_readCalcData_fu_179_ap_return_3;
                V_vector_data_0_2_reg_464 <= grp_readCalcData_fu_179_ap_return_4;
                V_vector_data_1_2_reg_469 <= grp_readCalcData_fu_179_ap_return_5;
                V_vector_data_2_2_reg_474 <= grp_readCalcData_fu_179_ap_return_6;
                V_vector_data_3_2_reg_479 <= grp_readCalcData_fu_179_ap_return_7;
                tmp_data_0_6_reg_424 <= C_data_V_data_0_dout;
                tmp_data_1_6_reg_429 <= C_data_V_data_1_dout;
                tmp_data_2_6_reg_434 <= C_data_V_data_2_dout;
                tmp_data_3_6_reg_439 <= C_data_V_data_3_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1))))) then
                F_vector_data_0_3_reg_484 <= grp_readCalcData_fu_179_ap_return_0;
                F_vector_data_1_3_reg_489 <= grp_readCalcData_fu_179_ap_return_1;
                F_vector_data_2_3_reg_494 <= grp_readCalcData_fu_179_ap_return_2;
                F_vector_data_3_3_reg_499 <= grp_readCalcData_fu_179_ap_return_3;
                V_vector_data_0_3_reg_504 <= grp_readCalcData_fu_179_ap_return_4;
                V_vector_data_1_3_reg_509 <= grp_readCalcData_fu_179_ap_return_5;
                V_vector_data_2_3_reg_514 <= grp_readCalcData_fu_179_ap_return_6;
                V_vector_data_3_3_reg_519 <= grp_readCalcData_fu_179_ap_return_7;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1))))) then
                F_vector_data_0_reg_324 <= grp_readCalcData_fu_179_ap_return_0;
                F_vector_data_1_reg_329 <= grp_readCalcData_fu_179_ap_return_1;
                F_vector_data_2_reg_334 <= grp_readCalcData_fu_179_ap_return_2;
                F_vector_data_3_reg_339 <= grp_readCalcData_fu_179_ap_return_3;
                V_vector_data_0_reg_344 <= grp_readCalcData_fu_179_ap_return_4;
                V_vector_data_1_reg_349 <= grp_readCalcData_fu_179_ap_return_5;
                V_vector_data_2_reg_354 <= grp_readCalcData_fu_179_ap_return_6;
                V_vector_data_3_reg_359 <= grp_readCalcData_fu_179_ap_return_7;
                tmp_data_0_5_reg_364 <= C_data_V_data_0_dout;
                tmp_data_1_5_reg_369 <= C_data_V_data_1_dout;
                tmp_data_2_5_reg_374 <= C_data_V_data_2_dout;
                tmp_data_3_5_reg_379 <= C_data_V_data_3_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_315 <= exitcond_flatten_reg_315;
                ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_315 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_315;
                ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_315;
                exitcond_flatten_reg_315 <= exitcond_flatten_fu_289_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then
                bound_reg_310 <= grp_fu_283_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_315))) then
                dataTemp1_1_reg_734 <= grp_fu_199_p2;
                dataTemp2_1_reg_739 <= grp_fu_203_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_315))) then
                dataTemp1_2_reg_744 <= grp_fu_199_p2;
                dataTemp2_2_reg_749 <= grp_fu_203_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_315) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then
                dataTemp1_3_reg_754 <= grp_fu_199_p2;
                dataTemp2_3_reg_759 <= grp_fu_203_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_315))) then
                dataTemp1_4_reg_764 <= grp_fu_199_p2;
                dataTemp2_4_reg_769 <= grp_fu_203_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_315))) then
                dataTemp1_5_reg_774 <= grp_fu_199_p2;
                dataTemp2_5_reg_779 <= grp_fu_203_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_315))) then
                dataTemp1_6_reg_784 <= grp_fu_199_p2;
                dataTemp2_6_reg_789 <= grp_fu_203_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_315))) then
                dataTemp1_7_reg_794 <= grp_fu_199_p2;
                dataTemp2_7_reg_799 <= grp_fu_203_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_condition_392 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_315))) then
                dataTemp1_reg_724 <= grp_fu_199_p2;
                dataTemp2_reg_729 <= grp_fu_203_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                indvar_flatten_next_reg_319 <= indvar_flatten_next_fu_294_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0))))) then
                tmp_1_i205_i_i_reg_569 <= grp_fu_215_p2;
                tmp_2_i206_i_i_reg_574 <= grp_fu_219_p2;
                tmp_3_i207_i_i_reg_579 <= grp_fu_223_p2;
                tmp_data_0_8_reg_584 <= C_data_V_data_0_dout;
                tmp_data_1_8_reg_589 <= C_data_V_data_1_dout;
                tmp_data_2_8_reg_594 <= C_data_V_data_2_dout;
                tmp_data_3_8_reg_599 <= C_data_V_data_3_dout;
                tmp_i204_i_i_reg_564 <= grp_fu_211_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then
                tmp_1_i224_i_i_reg_609 <= grp_fu_215_p2;
                tmp_2_i225_i_i_reg_614 <= grp_fu_219_p2;
                tmp_3_i226_i_i_reg_619 <= grp_fu_223_p2;
                tmp_i223_i_i_reg_604 <= grp_fu_211_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                tmp_1_i231_i_i_reg_629 <= grp_fu_215_p2;
                tmp_2_i232_i_i_reg_634 <= grp_fu_219_p2;
                tmp_3_i233_i_i_reg_639 <= grp_fu_223_p2;
                tmp_i230_i_i_reg_624 <= grp_fu_211_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_315))) then
                tmp_1_i250_i_i_reg_649 <= grp_fu_215_p2;
                tmp_2_i251_i_i_reg_654 <= grp_fu_219_p2;
                tmp_3_i252_i_i_reg_659 <= grp_fu_223_p2;
                tmp_i249_i_i_reg_644 <= grp_fu_211_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_315))) then
                tmp_1_i257_i_i_reg_669 <= grp_fu_215_p2;
                tmp_2_i258_i_i_reg_674 <= grp_fu_219_p2;
                tmp_3_i259_i_i_reg_679 <= grp_fu_223_p2;
                tmp_i256_i_i_reg_664 <= grp_fu_211_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_315))) then
                tmp_1_i276_i_i_reg_689 <= grp_fu_215_p2;
                tmp_2_i277_i_i_reg_694 <= grp_fu_219_p2;
                tmp_3_i278_i_i_reg_699 <= grp_fu_223_p2;
                tmp_i275_i_i_reg_684 <= grp_fu_211_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_315))) then
                tmp_1_i283_i_i_reg_709 <= grp_fu_215_p2;
                tmp_2_i284_i_i_reg_714 <= grp_fu_219_p2;
                tmp_3_i285_i_i_reg_719 <= grp_fu_223_p2;
                tmp_i282_i_i_reg_704 <= grp_fu_211_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_condition_392 = ap_const_boolean_1)))))) then
                tmp_1_i_i_i_reg_529 <= grp_fu_215_p2;
                tmp_2_i_i_i_reg_534 <= grp_fu_219_p2;
                tmp_3_i_i_i_reg_539 <= grp_fu_223_p2;
                tmp_data_0_7_reg_544 <= C_data_V_data_0_dout;
                tmp_data_1_7_reg_549 <= C_data_V_data_1_dout;
                tmp_data_2_7_reg_554 <= C_data_V_data_2_dout;
                tmp_data_3_7_reg_559 <= C_data_V_data_3_dout;
                tmp_i_i_i_reg_524 <= grp_fu_211_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_315))) then
                tmp_data_0_4_reg_809 <= grp_fu_207_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_condition_392 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_315))) then
                tmp_data_0_reg_804 <= grp_fu_207_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_315))) then
                tmp_data_1_4_reg_819 <= grp_fu_207_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_315))) then
                tmp_data_1_reg_814 <= grp_fu_207_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1))))) then
                tmp_data_2_4_reg_829 <= grp_fu_207_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1))))) then
                tmp_data_2_reg_824 <= grp_fu_207_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1))))) then
                tmp_data_3_4_reg_839 <= grp_fu_207_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1))))) then
                tmp_data_3_reg_834 <= grp_fu_207_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter3, ap_condition_267, exitcond_flatten_fu_289_p2, C_data_V_data_00_status, ap_condition_316, ap_condition_312, ap_condition_392, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_condition_267 = ap_const_boolean_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_289_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_condition_392 = ap_const_boolean_1)))) and not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_condition_392 = ap_const_boolean_1)))) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter2)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_condition_392 = ap_const_boolean_1)))) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;
    C_data_V_data_00_status <= (C_data_V_data_0_empty_n and C_data_V_data_1_empty_n and C_data_V_data_2_empty_n and C_data_V_data_3_empty_n);

    C_data_V_data_00_update_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter3, C_data_V_data_00_status, ap_condition_316, ap_condition_392)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1)))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1)))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_condition_392 = ap_const_boolean_1))))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)))))) then 
            C_data_V_data_00_update <= ap_const_logic_1;
        else 
            C_data_V_data_00_update <= ap_const_logic_0;
        end if; 
    end process;


    C_data_V_data_0_blk_n_assign_proc : process(C_data_V_data_0_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            C_data_V_data_0_blk_n <= C_data_V_data_0_empty_n;
        else 
            C_data_V_data_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_data_V_data_0_read <= C_data_V_data_00_update;

    C_data_V_data_1_blk_n_assign_proc : process(C_data_V_data_1_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            C_data_V_data_1_blk_n <= C_data_V_data_1_empty_n;
        else 
            C_data_V_data_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_data_V_data_1_read <= C_data_V_data_00_update;

    C_data_V_data_2_blk_n_assign_proc : process(C_data_V_data_2_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            C_data_V_data_2_blk_n <= C_data_V_data_2_empty_n;
        else 
            C_data_V_data_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_data_V_data_2_read <= C_data_V_data_00_update;

    C_data_V_data_3_blk_n_assign_proc : process(C_data_V_data_3_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            C_data_V_data_3_blk_n <= C_data_V_data_3_empty_n;
        else 
            C_data_V_data_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_data_V_data_3_read <= C_data_V_data_00_update;

    F_V_data_0_blk_n_assign_proc : process(grp_readCalcData_fu_179_F_V_data_0_blk_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            F_V_data_0_blk_n <= grp_readCalcData_fu_179_F_V_data_0_blk_n;
        else 
            F_V_data_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    F_V_data_0_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, grp_readCalcData_fu_179_F_V_data_0_read)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            F_V_data_0_read <= grp_readCalcData_fu_179_F_V_data_0_read;
        else 
            F_V_data_0_read <= ap_const_logic_0;
        end if; 
    end process;


    F_V_data_1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, grp_readCalcData_fu_179_F_V_data_1_blk_n)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            F_V_data_1_blk_n <= grp_readCalcData_fu_179_F_V_data_1_blk_n;
        else 
            F_V_data_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    F_V_data_1_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, grp_readCalcData_fu_179_F_V_data_1_read)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            F_V_data_1_read <= grp_readCalcData_fu_179_F_V_data_1_read;
        else 
            F_V_data_1_read <= ap_const_logic_0;
        end if; 
    end process;


    F_V_data_2_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, grp_readCalcData_fu_179_F_V_data_2_blk_n)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            F_V_data_2_blk_n <= grp_readCalcData_fu_179_F_V_data_2_blk_n;
        else 
            F_V_data_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    F_V_data_2_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, grp_readCalcData_fu_179_F_V_data_2_read)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            F_V_data_2_read <= grp_readCalcData_fu_179_F_V_data_2_read;
        else 
            F_V_data_2_read <= ap_const_logic_0;
        end if; 
    end process;


    F_V_data_3_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, grp_readCalcData_fu_179_F_V_data_3_blk_n)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            F_V_data_3_blk_n <= grp_readCalcData_fu_179_F_V_data_3_blk_n;
        else 
            F_V_data_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    F_V_data_3_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, grp_readCalcData_fu_179_F_V_data_3_read)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            F_V_data_3_read <= grp_readCalcData_fu_179_F_V_data_3_read;
        else 
            F_V_data_3_read <= ap_const_logic_0;
        end if; 
    end process;

    F_acc_V_data_01_status <= (F_acc_V_data_0_full_n and F_acc_V_data_1_full_n and F_acc_V_data_2_full_n and F_acc_V_data_3_full_n);

    F_acc_V_data_01_update_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter3, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315, C_data_V_data_00_status, ap_condition_392)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_condition_392 = ap_const_boolean_1)))))) then 
            F_acc_V_data_01_update <= ap_const_logic_1;
        else 
            F_acc_V_data_01_update <= ap_const_logic_0;
        end if; 
    end process;


    F_acc_V_data_0_blk_n_assign_proc : process(F_acc_V_data_0_full_n, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter3, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315))) then 
            F_acc_V_data_0_blk_n <= F_acc_V_data_0_full_n;
        else 
            F_acc_V_data_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    F_acc_V_data_0_din <= tmp_data_0_reg_804;
    F_acc_V_data_0_write <= F_acc_V_data_01_update;

    F_acc_V_data_1_blk_n_assign_proc : process(F_acc_V_data_1_full_n, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter3, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315))) then 
            F_acc_V_data_1_blk_n <= F_acc_V_data_1_full_n;
        else 
            F_acc_V_data_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    F_acc_V_data_1_din <= tmp_data_1_reg_814;
    F_acc_V_data_1_write <= F_acc_V_data_01_update;

    F_acc_V_data_2_blk_n_assign_proc : process(F_acc_V_data_2_full_n, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter3, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315))) then 
            F_acc_V_data_2_blk_n <= F_acc_V_data_2_full_n;
        else 
            F_acc_V_data_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    F_acc_V_data_2_din <= tmp_data_2_reg_824;
    F_acc_V_data_2_write <= F_acc_V_data_01_update;

    F_acc_V_data_3_blk_n_assign_proc : process(F_acc_V_data_3_full_n, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter3, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315))) then 
            F_acc_V_data_3_blk_n <= F_acc_V_data_3_full_n;
        else 
            F_acc_V_data_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    F_acc_V_data_3_din <= tmp_data_3_reg_834;
    F_acc_V_data_3_write <= F_acc_V_data_01_update;

    V_V_data_0_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, grp_readCalcData_fu_179_V_V_data_0_blk_n)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            V_V_data_0_blk_n <= grp_readCalcData_fu_179_V_V_data_0_blk_n;
        else 
            V_V_data_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    V_V_data_0_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, grp_readCalcData_fu_179_V_V_data_0_read)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            V_V_data_0_read <= grp_readCalcData_fu_179_V_V_data_0_read;
        else 
            V_V_data_0_read <= ap_const_logic_0;
        end if; 
    end process;


    V_V_data_1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, grp_readCalcData_fu_179_V_V_data_1_blk_n)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            V_V_data_1_blk_n <= grp_readCalcData_fu_179_V_V_data_1_blk_n;
        else 
            V_V_data_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    V_V_data_1_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, grp_readCalcData_fu_179_V_V_data_1_read)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            V_V_data_1_read <= grp_readCalcData_fu_179_V_V_data_1_read;
        else 
            V_V_data_1_read <= ap_const_logic_0;
        end if; 
    end process;


    V_V_data_2_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, grp_readCalcData_fu_179_V_V_data_2_blk_n)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            V_V_data_2_blk_n <= grp_readCalcData_fu_179_V_V_data_2_blk_n;
        else 
            V_V_data_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    V_V_data_2_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, grp_readCalcData_fu_179_V_V_data_2_read)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            V_V_data_2_read <= grp_readCalcData_fu_179_V_V_data_2_read;
        else 
            V_V_data_2_read <= ap_const_logic_0;
        end if; 
    end process;


    V_V_data_3_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, grp_readCalcData_fu_179_V_V_data_3_blk_n)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            V_V_data_3_blk_n <= grp_readCalcData_fu_179_V_V_data_3_blk_n;
        else 
            V_V_data_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    V_V_data_3_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, grp_readCalcData_fu_179_V_V_data_3_read)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            V_V_data_3_read <= grp_readCalcData_fu_179_V_V_data_3_read;
        else 
            V_V_data_3_read <= ap_const_logic_0;
        end if; 
    end process;

    V_acc_V_data_01_status <= (V_acc_V_data_0_full_n and V_acc_V_data_1_full_n and V_acc_V_data_2_full_n and V_acc_V_data_3_full_n);

    V_acc_V_data_01_update_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter3, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315, C_data_V_data_00_status, ap_condition_392)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_condition_392 = ap_const_boolean_1)))))) then 
            V_acc_V_data_01_update <= ap_const_logic_1;
        else 
            V_acc_V_data_01_update <= ap_const_logic_0;
        end if; 
    end process;


    V_acc_V_data_0_blk_n_assign_proc : process(V_acc_V_data_0_full_n, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter3, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315))) then 
            V_acc_V_data_0_blk_n <= V_acc_V_data_0_full_n;
        else 
            V_acc_V_data_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_acc_V_data_0_din <= tmp_data_0_4_reg_809;
    V_acc_V_data_0_write <= V_acc_V_data_01_update;

    V_acc_V_data_1_blk_n_assign_proc : process(V_acc_V_data_1_full_n, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter3, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315))) then 
            V_acc_V_data_1_blk_n <= V_acc_V_data_1_full_n;
        else 
            V_acc_V_data_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_acc_V_data_1_din <= tmp_data_1_4_reg_819;
    V_acc_V_data_1_write <= V_acc_V_data_01_update;

    V_acc_V_data_2_blk_n_assign_proc : process(V_acc_V_data_2_full_n, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter3, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315))) then 
            V_acc_V_data_2_blk_n <= V_acc_V_data_2_full_n;
        else 
            V_acc_V_data_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_acc_V_data_2_din <= tmp_data_2_4_reg_829;
    V_acc_V_data_2_write <= V_acc_V_data_01_update;

    V_acc_V_data_3_blk_n_assign_proc : process(V_acc_V_data_3_full_n, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter3, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315))) then 
            V_acc_V_data_3_blk_n <= V_acc_V_data_3_full_n;
        else 
            V_acc_V_data_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_acc_V_data_3_din <= tmp_data_3_4_reg_839;
    V_acc_V_data_3_write <= V_acc_V_data_01_update;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state38 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6 downto 6);

    ap_condition_267_assign_proc : process(real_start, ap_done_reg, simConfig_rowsToSimulate_V_empty_n, simConfig_BLOCK_NUMBERS_V_empty_n, simConfig_rowsToSimulate_V_out_full_n, simConfig_BLOCK_NUMBERS_V_out_full_n)
    begin
                ap_condition_267 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_out_full_n = ap_const_logic_0) or (simConfig_BLOCK_NUMBERS_V_out_full_n = ap_const_logic_0));
    end process;


    ap_condition_312_assign_proc : process(grp_readCalcData_fu_179_F_V_data_0_blk_n, exitcond_flatten_reg_315, grp_readCalcData_fu_179_F_V_data_1_blk_n, grp_readCalcData_fu_179_F_V_data_2_blk_n, grp_readCalcData_fu_179_F_V_data_3_blk_n, grp_readCalcData_fu_179_V_V_data_0_blk_n, grp_readCalcData_fu_179_V_V_data_1_blk_n, grp_readCalcData_fu_179_V_V_data_2_blk_n, grp_readCalcData_fu_179_V_V_data_3_blk_n)
    begin
                ap_condition_312 <= ((exitcond_flatten_reg_315 = ap_const_lv1_0) and ((grp_readCalcData_fu_179_F_V_data_0_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_179_F_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_179_F_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_179_F_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_179_V_V_data_0_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_179_V_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_179_V_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_179_V_V_data_3_blk_n = ap_const_logic_0)));
    end process;


    ap_condition_316_assign_proc : process(grp_readCalcData_fu_179_F_V_data_0_blk_n, exitcond_flatten_reg_315, grp_readCalcData_fu_179_F_V_data_1_blk_n, grp_readCalcData_fu_179_F_V_data_2_blk_n, grp_readCalcData_fu_179_F_V_data_3_blk_n, grp_readCalcData_fu_179_V_V_data_0_blk_n, grp_readCalcData_fu_179_V_V_data_1_blk_n, grp_readCalcData_fu_179_V_V_data_2_blk_n, grp_readCalcData_fu_179_V_V_data_3_blk_n, C_data_V_data_00_status)
    begin
                ap_condition_316 <= (((exitcond_flatten_reg_315 = ap_const_lv1_0) and ((grp_readCalcData_fu_179_F_V_data_0_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_179_F_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_179_F_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_179_F_V_data_3_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_179_V_V_data_0_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_179_V_V_data_1_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_179_V_V_data_2_blk_n = ap_const_logic_0) or (grp_readCalcData_fu_179_V_V_data_3_blk_n = ap_const_logic_0))) or ((exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)));
    end process;


    ap_condition_392_assign_proc : process(ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315, F_acc_V_data_01_status, V_acc_V_data_01_status)
    begin
                ap_condition_392 <= (((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315) and (F_acc_V_data_01_status = ap_const_logic_0)) or ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_315) and (V_acc_V_data_01_status = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_lv1_1 = ap_CS_fsm_state38)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = real_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    exitcond_flatten_fu_289_p2 <= "1" when (indvar_flatten_phi_fu_172_p4 = bound_reg_310) else "0";

    grp_fu_199_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage0, C_data_V_data_00_status, ap_condition_316, ap_condition_312, ap_condition_392, ap_CS_fsm_pp0_stage7)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) or (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_condition_392 = ap_const_boolean_1))))))) then 
            grp_fu_199_ce <= ap_const_logic_1;
        else 
            grp_fu_199_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_199_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, tmp_i_i_i_reg_524, tmp_i204_i_i_reg_564, tmp_i223_i_i_reg_604, ap_CS_fsm_pp0_stage7, tmp_i230_i_i_reg_624, ap_enable_reg_pp0_iter1, tmp_i249_i_i_reg_644, tmp_i256_i_i_reg_664, tmp_i275_i_i_reg_684, tmp_i282_i_i_reg_704)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_199_p0 <= tmp_i282_i_i_reg_704;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_199_p0 <= tmp_i275_i_i_reg_684;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_199_p0 <= tmp_i256_i_i_reg_664;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_199_p0 <= tmp_i249_i_i_reg_644;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_199_p0 <= tmp_i230_i_i_reg_624;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_199_p0 <= tmp_i223_i_i_reg_604;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_199_p0 <= tmp_i204_i_i_reg_564;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_199_p0 <= tmp_i_i_i_reg_524;
        else 
            grp_fu_199_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_199_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, tmp_1_i_i_i_reg_529, tmp_1_i205_i_i_reg_569, ap_CS_fsm_pp0_stage7, tmp_1_i224_i_i_reg_609, ap_enable_reg_pp0_iter1, tmp_1_i231_i_i_reg_629, tmp_1_i250_i_i_reg_649, tmp_1_i257_i_i_reg_669, tmp_1_i276_i_i_reg_689, tmp_1_i283_i_i_reg_709)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_199_p1 <= tmp_1_i283_i_i_reg_709;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_199_p1 <= tmp_1_i276_i_i_reg_689;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_199_p1 <= tmp_1_i257_i_i_reg_669;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_199_p1 <= tmp_1_i250_i_i_reg_649;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_199_p1 <= tmp_1_i231_i_i_reg_629;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_199_p1 <= tmp_1_i224_i_i_reg_609;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_199_p1 <= tmp_1_i205_i_i_reg_569;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_199_p1 <= tmp_1_i_i_i_reg_529;
        else 
            grp_fu_199_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_203_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage0, C_data_V_data_00_status, ap_condition_316, ap_condition_312, ap_condition_392, ap_CS_fsm_pp0_stage7)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) or (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_condition_392 = ap_const_boolean_1))))))) then 
            grp_fu_203_ce <= ap_const_logic_1;
        else 
            grp_fu_203_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_203_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, tmp_2_i_i_i_reg_534, tmp_2_i206_i_i_reg_574, ap_CS_fsm_pp0_stage7, tmp_2_i225_i_i_reg_614, ap_enable_reg_pp0_iter1, tmp_2_i232_i_i_reg_634, tmp_2_i251_i_i_reg_654, tmp_2_i258_i_i_reg_674, tmp_2_i277_i_i_reg_694, tmp_2_i284_i_i_reg_714)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_203_p0 <= tmp_2_i284_i_i_reg_714;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_203_p0 <= tmp_2_i277_i_i_reg_694;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_203_p0 <= tmp_2_i258_i_i_reg_674;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_203_p0 <= tmp_2_i251_i_i_reg_654;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_203_p0 <= tmp_2_i232_i_i_reg_634;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_203_p0 <= tmp_2_i225_i_i_reg_614;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_203_p0 <= tmp_2_i206_i_i_reg_574;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_203_p0 <= tmp_2_i_i_i_reg_534;
        else 
            grp_fu_203_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_203_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, tmp_3_i_i_i_reg_539, tmp_3_i207_i_i_reg_579, ap_CS_fsm_pp0_stage7, tmp_3_i226_i_i_reg_619, ap_enable_reg_pp0_iter1, tmp_3_i233_i_i_reg_639, tmp_3_i252_i_i_reg_659, tmp_3_i259_i_i_reg_679, tmp_3_i278_i_i_reg_699, tmp_3_i285_i_i_reg_719)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_203_p1 <= tmp_3_i285_i_i_reg_719;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_203_p1 <= tmp_3_i278_i_i_reg_699;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_203_p1 <= tmp_3_i259_i_i_reg_679;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_203_p1 <= tmp_3_i252_i_i_reg_659;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_203_p1 <= tmp_3_i233_i_i_reg_639;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_203_p1 <= tmp_3_i226_i_i_reg_619;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_203_p1 <= tmp_3_i207_i_i_reg_579;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_203_p1 <= tmp_3_i_i_i_reg_539;
        else 
            grp_fu_203_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_207_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage0, C_data_V_data_00_status, ap_condition_316, ap_condition_312, ap_condition_392, ap_CS_fsm_pp0_stage7)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) or (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_condition_392 = ap_const_boolean_1))))))) then 
            grp_fu_207_ce <= ap_const_logic_1;
        else 
            grp_fu_207_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_207_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, dataTemp1_reg_724, dataTemp1_1_reg_734, dataTemp1_2_reg_744, dataTemp1_3_reg_754, ap_enable_reg_pp0_iter2, dataTemp1_4_reg_764, dataTemp1_5_reg_774, dataTemp1_6_reg_784, dataTemp1_7_reg_794)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_207_p0 <= dataTemp1_7_reg_794;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_207_p0 <= dataTemp1_6_reg_784;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_207_p0 <= dataTemp1_5_reg_774;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_207_p0 <= dataTemp1_4_reg_764;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_207_p0 <= dataTemp1_3_reg_754;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_207_p0 <= dataTemp1_2_reg_744;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_207_p0 <= dataTemp1_1_reg_734;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_207_p0 <= dataTemp1_reg_724;
        else 
            grp_fu_207_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_207_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, dataTemp2_reg_729, dataTemp2_1_reg_739, dataTemp2_2_reg_749, ap_enable_reg_pp0_iter2, dataTemp2_3_reg_759, dataTemp2_4_reg_769, dataTemp2_5_reg_779, dataTemp2_6_reg_789, dataTemp2_7_reg_799)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_207_p1 <= dataTemp2_7_reg_799;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_207_p1 <= dataTemp2_6_reg_789;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_207_p1 <= dataTemp2_5_reg_779;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_207_p1 <= dataTemp2_4_reg_769;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_207_p1 <= dataTemp2_3_reg_759;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_207_p1 <= dataTemp2_2_reg_749;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_207_p1 <= dataTemp2_1_reg_739;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_207_p1 <= dataTemp2_reg_729;
        else 
            grp_fu_207_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_211_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage0, C_data_V_data_00_status, ap_condition_316, ap_condition_312, ap_condition_392, ap_CS_fsm_pp0_stage7)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) or (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_condition_392 = ap_const_boolean_1))))))) then 
            grp_fu_211_ce <= ap_const_logic_1;
        else 
            grp_fu_211_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_211_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, F_vector_data_0_reg_324, V_vector_data_0_reg_344, F_vector_data_0_1_reg_384, V_vector_data_0_1_reg_404, F_vector_data_0_2_reg_444, V_vector_data_0_2_reg_464, F_vector_data_0_3_reg_484, V_vector_data_0_3_reg_504, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_211_p0 <= V_vector_data_0_3_reg_504;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_211_p0 <= F_vector_data_0_3_reg_484;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_211_p0 <= V_vector_data_0_2_reg_464;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_211_p0 <= F_vector_data_0_2_reg_444;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_211_p0 <= V_vector_data_0_1_reg_404;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_211_p0 <= F_vector_data_0_1_reg_384;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_211_p0 <= V_vector_data_0_reg_344;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_211_p0 <= F_vector_data_0_reg_324;
        else 
            grp_fu_211_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_211_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, tmp_data_0_5_reg_364, tmp_data_0_6_reg_424, tmp_data_0_7_reg_544, tmp_data_0_8_reg_584, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_211_p1 <= tmp_data_0_8_reg_584;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_211_p1 <= tmp_data_0_7_reg_544;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_211_p1 <= tmp_data_0_6_reg_424;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_211_p1 <= tmp_data_0_5_reg_364;
        else 
            grp_fu_211_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_215_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage0, C_data_V_data_00_status, ap_condition_316, ap_condition_312, ap_condition_392, ap_CS_fsm_pp0_stage7)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) or (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_condition_392 = ap_const_boolean_1))))))) then 
            grp_fu_215_ce <= ap_const_logic_1;
        else 
            grp_fu_215_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_215_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, F_vector_data_1_reg_329, V_vector_data_1_reg_349, F_vector_data_1_1_reg_389, V_vector_data_1_1_reg_409, F_vector_data_1_2_reg_449, V_vector_data_1_2_reg_469, F_vector_data_1_3_reg_489, V_vector_data_1_3_reg_509, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_215_p0 <= V_vector_data_1_3_reg_509;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_215_p0 <= F_vector_data_1_3_reg_489;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_215_p0 <= V_vector_data_1_2_reg_469;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_215_p0 <= F_vector_data_1_2_reg_449;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_215_p0 <= V_vector_data_1_1_reg_409;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_215_p0 <= F_vector_data_1_1_reg_389;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_215_p0 <= V_vector_data_1_reg_349;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_215_p0 <= F_vector_data_1_reg_329;
        else 
            grp_fu_215_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_215_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, tmp_data_1_5_reg_369, tmp_data_1_6_reg_429, tmp_data_1_7_reg_549, tmp_data_1_8_reg_589, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_215_p1 <= tmp_data_1_8_reg_589;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_215_p1 <= tmp_data_1_7_reg_549;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_215_p1 <= tmp_data_1_6_reg_429;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_215_p1 <= tmp_data_1_5_reg_369;
        else 
            grp_fu_215_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_219_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage0, C_data_V_data_00_status, ap_condition_316, ap_condition_312, ap_condition_392, ap_CS_fsm_pp0_stage7)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) or (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_condition_392 = ap_const_boolean_1))))))) then 
            grp_fu_219_ce <= ap_const_logic_1;
        else 
            grp_fu_219_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_219_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, F_vector_data_2_reg_334, V_vector_data_2_reg_354, F_vector_data_2_1_reg_394, V_vector_data_2_1_reg_414, F_vector_data_2_2_reg_454, V_vector_data_2_2_reg_474, F_vector_data_2_3_reg_494, V_vector_data_2_3_reg_514, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_219_p0 <= V_vector_data_2_3_reg_514;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_219_p0 <= F_vector_data_2_3_reg_494;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_219_p0 <= V_vector_data_2_2_reg_474;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_219_p0 <= F_vector_data_2_2_reg_454;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_219_p0 <= V_vector_data_2_1_reg_414;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_219_p0 <= F_vector_data_2_1_reg_394;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_219_p0 <= V_vector_data_2_reg_354;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_219_p0 <= F_vector_data_2_reg_334;
        else 
            grp_fu_219_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_219_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, tmp_data_2_5_reg_374, tmp_data_2_6_reg_434, tmp_data_2_7_reg_554, tmp_data_2_8_reg_594, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_219_p1 <= tmp_data_2_8_reg_594;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_219_p1 <= tmp_data_2_7_reg_554;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_219_p1 <= tmp_data_2_6_reg_434;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_219_p1 <= tmp_data_2_5_reg_374;
        else 
            grp_fu_219_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_223_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage0, C_data_V_data_00_status, ap_condition_316, ap_condition_312, ap_condition_392, ap_CS_fsm_pp0_stage7)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) or (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_316 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_312 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_condition_392 = ap_const_boolean_1))))))) then 
            grp_fu_223_ce <= ap_const_logic_1;
        else 
            grp_fu_223_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_223_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, F_vector_data_3_reg_339, V_vector_data_3_reg_359, F_vector_data_3_1_reg_399, V_vector_data_3_1_reg_419, F_vector_data_3_2_reg_459, V_vector_data_3_2_reg_479, F_vector_data_3_3_reg_499, V_vector_data_3_3_reg_519, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_223_p0 <= V_vector_data_3_3_reg_519;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_223_p0 <= F_vector_data_3_3_reg_499;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_223_p0 <= V_vector_data_3_2_reg_479;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_223_p0 <= F_vector_data_3_2_reg_459;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_223_p0 <= V_vector_data_3_1_reg_419;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_223_p0 <= F_vector_data_3_1_reg_399;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_223_p0 <= V_vector_data_3_reg_359;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_223_p0 <= F_vector_data_3_reg_339;
        else 
            grp_fu_223_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_223_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, tmp_data_3_5_reg_379, tmp_data_3_6_reg_439, tmp_data_3_7_reg_559, tmp_data_3_8_reg_599, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_223_p1 <= tmp_data_3_8_reg_599;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_223_p1 <= tmp_data_3_7_reg_559;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_223_p1 <= tmp_data_3_6_reg_439;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_223_p1 <= tmp_data_3_5_reg_379;
        else 
            grp_fu_223_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_283_ce_assign_proc : process(ap_CS_fsm_state1, ap_condition_267, ap_CS_fsm_state7, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_267 = ap_const_boolean_1))) or (ap_const_lv1_1 = ap_CS_fsm_state7) or (ap_const_lv1_1 = ap_CS_fsm_state2) or (ap_const_lv1_1 = ap_CS_fsm_state3) or (ap_const_lv1_1 = ap_CS_fsm_state4) or (ap_const_lv1_1 = ap_CS_fsm_state5) or (ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            grp_fu_283_ce <= ap_const_logic_1;
        else 
            grp_fu_283_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_283_p0 <= grp_fu_283_p00(27 - 1 downto 0);
    grp_fu_283_p00 <= std_logic_vector(resize(unsigned(simConfig_BLOCK_NUMBERS_V_dout),54));
    grp_fu_283_p1 <= grp_fu_283_p10(27 - 1 downto 0);
    grp_fu_283_p10 <= std_logic_vector(resize(unsigned(simConfig_rowsToSimulate_V_dout),54));

    grp_readCalcData_fu_179_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_315, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, C_data_V_data_00_status)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)))) or ((exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_315 = ap_const_lv1_0) and (C_data_V_data_00_status = ap_const_logic_0)))) or ((exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_readCalcData_fu_179_ap_ce <= ap_const_logic_1;
        else 
            grp_readCalcData_fu_179_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_readCalcData_fu_179_ap_start <= ap_reg_grp_readCalcData_fu_179_ap_start;
    indvar_flatten_next_fu_294_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_172_p4) + unsigned(ap_const_lv54_1));

    indvar_flatten_phi_fu_172_p4_assign_proc : process(exitcond_flatten_reg_315, indvar_flatten_reg_168, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_319, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_reg_315 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            indvar_flatten_phi_fu_172_p4 <= indvar_flatten_next_reg_319;
        else 
            indvar_flatten_phi_fu_172_p4 <= indvar_flatten_reg_168;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(ap_CS_fsm_state38)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state38))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, real_start_status_reg)
    begin
        if ((ap_const_logic_1 = real_start_status_reg)) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    simConfig_BLOCK_NUMBERS_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, simConfig_BLOCK_NUMBERS_V_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            simConfig_BLOCK_NUMBERS_V_blk_n <= simConfig_BLOCK_NUMBERS_V_empty_n;
        else 
            simConfig_BLOCK_NUMBERS_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    simConfig_BLOCK_NUMBERS_V_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, simConfig_BLOCK_NUMBERS_V_out_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            simConfig_BLOCK_NUMBERS_V_out_blk_n <= simConfig_BLOCK_NUMBERS_V_out_full_n;
        else 
            simConfig_BLOCK_NUMBERS_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    simConfig_BLOCK_NUMBERS_V_out_din <= simConfig_BLOCK_NUMBERS_V_dout;

    simConfig_BLOCK_NUMBERS_V_out_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_267)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_267 = ap_const_boolean_1)))) then 
            simConfig_BLOCK_NUMBERS_V_out_write <= ap_const_logic_1;
        else 
            simConfig_BLOCK_NUMBERS_V_out_write <= ap_const_logic_0;
        end if; 
    end process;


    simConfig_BLOCK_NUMBERS_V_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_267)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_267 = ap_const_boolean_1)))) then 
            simConfig_BLOCK_NUMBERS_V_read <= ap_const_logic_1;
        else 
            simConfig_BLOCK_NUMBERS_V_read <= ap_const_logic_0;
        end if; 
    end process;


    simConfig_rowsToSimulate_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, simConfig_rowsToSimulate_V_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            simConfig_rowsToSimulate_V_blk_n <= simConfig_rowsToSimulate_V_empty_n;
        else 
            simConfig_rowsToSimulate_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    simConfig_rowsToSimulate_V_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, simConfig_rowsToSimulate_V_out_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            simConfig_rowsToSimulate_V_out_blk_n <= simConfig_rowsToSimulate_V_out_full_n;
        else 
            simConfig_rowsToSimulate_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    simConfig_rowsToSimulate_V_out_din <= simConfig_rowsToSimulate_V_dout;

    simConfig_rowsToSimulate_V_out_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_267)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_267 = ap_const_boolean_1)))) then 
            simConfig_rowsToSimulate_V_out_write <= ap_const_logic_1;
        else 
            simConfig_rowsToSimulate_V_out_write <= ap_const_logic_0;
        end if; 
    end process;


    simConfig_rowsToSimulate_V_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_267)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_267 = ap_const_boolean_1)))) then 
            simConfig_rowsToSimulate_V_read <= ap_const_logic_1;
        else 
            simConfig_rowsToSimulate_V_read <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;
    start_write <= (ap_start and start_control_reg);
end behav;
