-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity I_calc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    output_r_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_r_TVALID : OUT STD_LOGIC;
    output_r_TREADY : IN STD_LOGIC;
    output_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    simConfig_rowsToSimu_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    simConfig_rowsToSimu_empty_n : IN STD_LOGIC;
    simConfig_rowsToSimu_read : OUT STD_LOGIC;
    simConfig_BLOCK_NUMBERS_V_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    simConfig_BLOCK_NUMBERS_V_empty_n : IN STD_LOGIC;
    simConfig_BLOCK_NUMBERS_V_read : OUT STD_LOGIC;
    F_acc_V_data_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    F_acc_V_data_0_empty_n : IN STD_LOGIC;
    F_acc_V_data_0_read : OUT STD_LOGIC;
    F_acc_V_data_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    F_acc_V_data_1_empty_n : IN STD_LOGIC;
    F_acc_V_data_1_read : OUT STD_LOGIC;
    F_acc_V_data_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    F_acc_V_data_2_empty_n : IN STD_LOGIC;
    F_acc_V_data_2_read : OUT STD_LOGIC;
    F_acc_V_data_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    F_acc_V_data_3_empty_n : IN STD_LOGIC;
    F_acc_V_data_3_read : OUT STD_LOGIC;
    V_acc_V_data_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    V_acc_V_data_0_empty_n : IN STD_LOGIC;
    V_acc_V_data_0_read : OUT STD_LOGIC;
    V_acc_V_data_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    V_acc_V_data_1_empty_n : IN STD_LOGIC;
    V_acc_V_data_1_read : OUT STD_LOGIC;
    V_acc_V_data_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    V_acc_V_data_2_empty_n : IN STD_LOGIC;
    V_acc_V_data_2_read : OUT STD_LOGIC;
    V_acc_V_data_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    V_acc_V_data_3_empty_n : IN STD_LOGIC;
    V_acc_V_data_3_read : OUT STD_LOGIC );
end;


architecture behav of I_calc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv26_1 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal simConfig_rowsToSimu_blk_n : STD_LOGIC;
    signal simConfig_BLOCK_NUMBERS_V_blk_n : STD_LOGIC;
    signal F_acc_V_data_0_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_35_i_i_reg_525 : STD_LOGIC_VECTOR (0 downto 0);
    signal F_acc_V_data_1_blk_n : STD_LOGIC;
    signal F_acc_V_data_2_blk_n : STD_LOGIC;
    signal F_acc_V_data_3_blk_n : STD_LOGIC;
    signal V_acc_V_data_0_blk_n : STD_LOGIC;
    signal V_acc_V_data_1_blk_n : STD_LOGIC;
    signal V_acc_V_data_2_blk_n : STD_LOGIC;
    signal V_acc_V_data_3_blk_n : STD_LOGIC;
    signal V_temp_data_i_i_load_3_reg_238 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_temp_data_i_i_load_3_reg_250 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_temp_data_i_i_load_2_reg_262 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_temp_data_i_i_load_2_reg_274 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_temp_data_i_i_load_1_reg_286 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_temp_data_i_i_load_1_reg_298 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_temp_data_i_i_load_reg_310 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_temp_data_i_i_load_reg_322 : STD_LOGIC_VECTOR (31 downto 0);
    signal block_i_i_reg_334 : STD_LOGIC_VECTOR (25 downto 0);
    signal simConfig_BLOCK_NUMB_reg_458 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_condition_135 : BOOLEAN;
    signal simConfig_rowsToSimu_8_reg_463 : STD_LOGIC_VECTOR (26 downto 0);
    signal RowOfBlocks_V_1_fu_393_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal RowOfBlocks_V_1_reg_520 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_35_i_i_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_35_i_i_reg_525 : STD_LOGIC_VECTOR (0 downto 0);
    signal block_fu_408_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal block_reg_529 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_data_0_reg_534 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_acc_V_data_00_status : STD_LOGIC;
    signal V_acc_V_data_00_status : STD_LOGIC;
    signal ap_condition_188 : BOOLEAN;
    signal tmp_data_1_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_reg_544 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_reg_549 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_0_9_reg_554 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_1_9_reg_559 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_9_reg_564 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_9_reg_569 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_372_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_i_i_reg_574 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_54_i_i_reg_580 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal tmp_53_1_i_i_reg_586 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal tmp_54_1_i_i_reg_592 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal tmp_53_2_i_i_reg_598 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal tmp_54_2_i_i_reg_604 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal tmp_53_3_i_i_reg_610 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal tmp_54_3_i_i_reg_616 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal row_fu_452_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg_625 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal F_temp_data_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal F_temp_data_ce0 : STD_LOGIC;
    signal F_temp_data_we0 : STD_LOGIC;
    signal F_temp_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_temp_data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_temp_data_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal F_temp_data_ce1 : STD_LOGIC;
    signal F_temp_data_we1 : STD_LOGIC;
    signal F_temp_data_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_temp_data_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal V_temp_data_ce0 : STD_LOGIC;
    signal V_temp_data_we0 : STD_LOGIC;
    signal V_temp_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_temp_data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_temp_data_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal V_temp_data_ce1 : STD_LOGIC;
    signal V_temp_data_we1 : STD_LOGIC;
    signal V_temp_data_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getTotalCurrent_fu_357_ap_start : STD_LOGIC;
    signal grp_getTotalCurrent_fu_357_ap_done : STD_LOGIC;
    signal grp_getTotalCurrent_fu_357_ap_idle : STD_LOGIC;
    signal grp_getTotalCurrent_fu_357_ap_ready : STD_LOGIC;
    signal grp_getTotalCurrent_fu_357_output_r_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getTotalCurrent_fu_357_output_r_TVALID : STD_LOGIC;
    signal grp_getTotalCurrent_fu_357_output_r_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getTotalCurrent_fu_357_F_temp_data_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getTotalCurrent_fu_357_F_temp_data_ce0 : STD_LOGIC;
    signal grp_getTotalCurrent_fu_357_V_temp_data_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getTotalCurrent_fu_357_V_temp_data_ce0 : STD_LOGIC;
    signal RowOfBlocks_V_reg_226 : STD_LOGIC_VECTOR (25 downto 0);
    signal exitcond_i_i_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal V_temp_data_i_i_load_3_phi_fu_242_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_temp_data_i_i_load_3_phi_fu_254_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_temp_data_i_i_load_2_phi_fu_266_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_temp_data_i_i_load_2_phi_fu_278_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_temp_data_i_i_load_1_phi_fu_290_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_temp_data_i_i_load_1_phi_fu_302_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_temp_data_i_i_load_phi_fu_314_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal F_temp_data_i_i_load_phi_fu_326_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal block_i_i_phi_fu_338_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal val_assign_reg_345 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_reg_grp_getTotalCurrent_fu_357_ap_start : STD_LOGIC := '0';
    signal F_acc_V_data_00_update : STD_LOGIC;
    signal V_acc_V_data_00_update : STD_LOGIC;
    signal tmp_i_i_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_372_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_372_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal RowOfBlocks_V_cast_i_fu_384_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal block_i_i_cast_fu_399_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_372_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);

    component getTotalCurrent IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        row_V : IN STD_LOGIC_VECTOR (2 downto 0);
        output_r_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_r_TVALID : OUT STD_LOGIC;
        output_r_TREADY : IN STD_LOGIC;
        output_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        RowOfBlocks_V_read : IN STD_LOGIC_VECTOR (25 downto 0);
        simConfig_rowsToSimulate_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        F_temp_data_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        F_temp_data_ce0 : OUT STD_LOGIC;
        F_temp_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        V_temp_data_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        V_temp_data_ce0 : OUT STD_LOGIC;
        V_temp_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GapJunctionIP_fadvdy IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component I_calc_F_temp_data IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    F_temp_data_U : component I_calc_F_temp_data
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => F_temp_data_address0,
        ce0 => F_temp_data_ce0,
        we0 => F_temp_data_we0,
        d0 => F_temp_data_d0,
        q0 => F_temp_data_q0,
        address1 => F_temp_data_address1,
        ce1 => F_temp_data_ce1,
        we1 => F_temp_data_we1,
        d1 => F_temp_data_d1);

    V_temp_data_U : component I_calc_F_temp_data
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => V_temp_data_address0,
        ce0 => V_temp_data_ce0,
        we0 => V_temp_data_we0,
        d0 => V_temp_data_d0,
        q0 => V_temp_data_q0,
        address1 => V_temp_data_address1,
        ce1 => V_temp_data_ce1,
        we1 => V_temp_data_we1,
        d1 => V_temp_data_d1);

    grp_getTotalCurrent_fu_357 : component getTotalCurrent
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_getTotalCurrent_fu_357_ap_start,
        ap_done => grp_getTotalCurrent_fu_357_ap_done,
        ap_idle => grp_getTotalCurrent_fu_357_ap_idle,
        ap_ready => grp_getTotalCurrent_fu_357_ap_ready,
        row_V => val_assign_reg_345,
        output_r_TDATA => grp_getTotalCurrent_fu_357_output_r_TDATA,
        output_r_TVALID => grp_getTotalCurrent_fu_357_output_r_TVALID,
        output_r_TREADY => output_r_TREADY,
        output_r_TLAST => grp_getTotalCurrent_fu_357_output_r_TLAST,
        RowOfBlocks_V_read => RowOfBlocks_V_reg_226,
        simConfig_rowsToSimulate_V_read => simConfig_rowsToSimu_8_reg_463,
        F_temp_data_address0 => grp_getTotalCurrent_fu_357_F_temp_data_address0,
        F_temp_data_ce0 => grp_getTotalCurrent_fu_357_F_temp_data_ce0,
        F_temp_data_q0 => F_temp_data_q0,
        V_temp_data_address0 => grp_getTotalCurrent_fu_357_V_temp_data_address0,
        V_temp_data_ce0 => grp_getTotalCurrent_fu_357_V_temp_data_ce0,
        V_temp_data_q0 => V_temp_data_q0);

    GapJunctionIP_fadvdy_x_U201 : component GapJunctionIP_fadvdy
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_372_p0,
        din1 => grp_fu_372_p1,
        ce => grp_fu_372_ce,
        dout => grp_fu_372_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = tmp_i_i_fu_388_p2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = tmp_35_i_i_fu_403_p2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((not((tmp_35_i_i_reg_525 = ap_const_lv1_0)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((tmp_35_i_i_reg_525 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_getTotalCurrent_fu_357_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_getTotalCurrent_fu_357_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state23) and (ap_const_lv1_0 = exitcond_i_i_fu_446_p2))) then 
                    ap_reg_grp_getTotalCurrent_fu_357_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_getTotalCurrent_fu_357_ap_ready)) then 
                    ap_reg_grp_getTotalCurrent_fu_357_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    F_temp_data_i_i_load_1_reg_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                F_temp_data_i_i_load_1_reg_298 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
                F_temp_data_i_i_load_1_reg_298 <= tmp_53_1_i_i_reg_586;
            end if; 
        end if;
    end process;

    F_temp_data_i_i_load_2_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                F_temp_data_i_i_load_2_reg_274 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
                F_temp_data_i_i_load_2_reg_274 <= tmp_53_2_i_i_reg_598;
            end if; 
        end if;
    end process;

    F_temp_data_i_i_load_3_reg_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                F_temp_data_i_i_load_3_reg_250 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
                F_temp_data_i_i_load_3_reg_250 <= tmp_53_3_i_i_reg_610;
            end if; 
        end if;
    end process;

    F_temp_data_i_i_load_reg_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                F_temp_data_i_i_load_reg_322 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
                F_temp_data_i_i_load_reg_322 <= tmp_53_i_i_reg_574;
            end if; 
        end if;
    end process;

    RowOfBlocks_V_reg_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_135 = ap_const_boolean_1)))) then 
                RowOfBlocks_V_reg_226 <= ap_const_lv26_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state23) and not((ap_const_lv1_0 = exitcond_i_i_fu_446_p2)))) then 
                RowOfBlocks_V_reg_226 <= RowOfBlocks_V_1_reg_520;
            end if; 
        end if;
    end process;

    V_temp_data_i_i_load_1_reg_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                V_temp_data_i_i_load_1_reg_286 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
                V_temp_data_i_i_load_1_reg_286 <= tmp_54_1_i_i_reg_592;
            end if; 
        end if;
    end process;

    V_temp_data_i_i_load_2_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                V_temp_data_i_i_load_2_reg_262 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
                V_temp_data_i_i_load_2_reg_262 <= tmp_54_2_i_i_reg_604;
            end if; 
        end if;
    end process;

    V_temp_data_i_i_load_3_reg_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                V_temp_data_i_i_load_3_reg_238 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_188 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_tmp_35_i_i_reg_525)))) then 
                V_temp_data_i_i_load_3_reg_238 <= tmp_54_3_i_i_reg_616;
            end if; 
        end if;
    end process;

    V_temp_data_i_i_load_reg_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                V_temp_data_i_i_load_reg_310 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
                V_temp_data_i_i_load_reg_310 <= tmp_54_i_i_reg_580;
            end if; 
        end if;
    end process;

    block_i_i_reg_334_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                block_i_i_reg_334 <= ap_const_lv26_0;
            elsif ((not((tmp_35_i_i_reg_525 = ap_const_lv1_0)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                block_i_i_reg_334 <= block_reg_529;
            end if; 
        end if;
    end process;

    val_assign_reg_345_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state22))) then 
                val_assign_reg_345 <= ap_const_lv3_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state24) and not((ap_const_logic_0 = grp_getTotalCurrent_fu_357_ap_done)))) then 
                val_assign_reg_345 <= row_reg_625;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then
                RowOfBlocks_V_1_reg_520 <= RowOfBlocks_V_1_fu_393_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525 <= tmp_35_i_i_reg_525;
                ap_pipeline_reg_pp0_iter2_tmp_35_i_i_reg_525 <= ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525;
                tmp_35_i_i_reg_525 <= tmp_35_i_i_fu_403_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                block_reg_529 <= block_fu_408_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state23))) then
                row_reg_625 <= row_fu_452_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_135 = ap_const_boolean_1)))) then
                simConfig_BLOCK_NUMB_reg_458 <= simConfig_BLOCK_NUMBERS_V_dout;
                simConfig_rowsToSimu_8_reg_463 <= simConfig_rowsToSimu_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_53_1_i_i_reg_586 <= grp_fu_372_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_53_2_i_i_reg_598 <= grp_fu_372_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then
                tmp_53_3_i_i_reg_610 <= grp_fu_372_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_188 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)))) then
                tmp_53_i_i_reg_574 <= grp_fu_372_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then
                tmp_54_1_i_i_reg_592 <= grp_fu_372_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_54_2_i_i_reg_604 <= grp_fu_372_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then
                tmp_54_3_i_i_reg_616 <= grp_fu_372_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_54_i_i_reg_580 <= grp_fu_372_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not((tmp_35_i_i_reg_525 = ap_const_lv1_0)) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_188 = ap_const_boolean_1))))) then
                tmp_data_0_9_reg_554 <= V_acc_V_data_0_dout;
                tmp_data_0_reg_534 <= F_acc_V_data_0_dout;
                tmp_data_1_9_reg_559 <= V_acc_V_data_1_dout;
                tmp_data_1_reg_539 <= F_acc_V_data_1_dout;
                tmp_data_2_9_reg_564 <= V_acc_V_data_2_dout;
                tmp_data_2_reg_544 <= F_acc_V_data_2_dout;
                tmp_data_3_9_reg_569 <= V_acc_V_data_3_dout;
                tmp_data_3_reg_549 <= F_acc_V_data_3_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_condition_135, tmp_35_i_i_fu_403_p2, ap_condition_188, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, grp_getTotalCurrent_fu_357_ap_done, exitcond_i_i_fu_446_p2, tmp_i_i_fu_388_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_condition_135 = ap_const_boolean_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((ap_const_lv1_0 = tmp_i_i_fu_388_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = tmp_35_i_i_fu_403_p2) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_188 = ap_const_boolean_1))) and not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_188 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_188 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
            when ap_ST_fsm_pp0_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
            when ap_ST_fsm_pp0_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
            when ap_ST_fsm_pp0_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
            when ap_ST_fsm_pp0_stage6 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
            when ap_ST_fsm_pp0_stage7 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (not((ap_const_lv1_0 = exitcond_i_i_fu_446_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                if (not((ap_const_logic_0 = grp_getTotalCurrent_fu_357_ap_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    F_acc_V_data_00_status <= (F_acc_V_data_0_empty_n and F_acc_V_data_1_empty_n and F_acc_V_data_2_empty_n and F_acc_V_data_3_empty_n);

    F_acc_V_data_00_update_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_35_i_i_reg_525, ap_condition_188)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((tmp_35_i_i_reg_525 = ap_const_lv1_0)) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_188 = ap_const_boolean_1))))) then 
            F_acc_V_data_00_update <= ap_const_logic_1;
        else 
            F_acc_V_data_00_update <= ap_const_logic_0;
        end if; 
    end process;


    F_acc_V_data_0_blk_n_assign_proc : process(F_acc_V_data_0_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_35_i_i_reg_525)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((tmp_35_i_i_reg_525 = ap_const_lv1_0)))) then 
            F_acc_V_data_0_blk_n <= F_acc_V_data_0_empty_n;
        else 
            F_acc_V_data_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    F_acc_V_data_0_read <= F_acc_V_data_00_update;

    F_acc_V_data_1_blk_n_assign_proc : process(F_acc_V_data_1_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_35_i_i_reg_525)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((tmp_35_i_i_reg_525 = ap_const_lv1_0)))) then 
            F_acc_V_data_1_blk_n <= F_acc_V_data_1_empty_n;
        else 
            F_acc_V_data_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    F_acc_V_data_1_read <= F_acc_V_data_00_update;

    F_acc_V_data_2_blk_n_assign_proc : process(F_acc_V_data_2_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_35_i_i_reg_525)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((tmp_35_i_i_reg_525 = ap_const_lv1_0)))) then 
            F_acc_V_data_2_blk_n <= F_acc_V_data_2_empty_n;
        else 
            F_acc_V_data_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    F_acc_V_data_2_read <= F_acc_V_data_00_update;

    F_acc_V_data_3_blk_n_assign_proc : process(F_acc_V_data_3_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_35_i_i_reg_525)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((tmp_35_i_i_reg_525 = ap_const_lv1_0)))) then 
            F_acc_V_data_3_blk_n <= F_acc_V_data_3_empty_n;
        else 
            F_acc_V_data_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    F_acc_V_data_3_read <= F_acc_V_data_00_update;

    F_temp_data_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter2, ap_CS_fsm_state3, grp_getTotalCurrent_fu_357_F_temp_data_address0, ap_CS_fsm_state24)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            F_temp_data_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            F_temp_data_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            F_temp_data_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            F_temp_data_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state24))) then 
            F_temp_data_address0 <= grp_getTotalCurrent_fu_357_F_temp_data_address0;
        else 
            F_temp_data_address0 <= "XX";
        end if; 
    end process;


    F_temp_data_address1_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage6, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            F_temp_data_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            F_temp_data_address1 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            F_temp_data_address1 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            F_temp_data_address1 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            F_temp_data_address1 <= "XX";
        end if; 
    end process;


    F_temp_data_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter2, ap_CS_fsm_state3, grp_getTotalCurrent_fu_357_F_temp_data_ce0, ap_CS_fsm_state24)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or ((ap_const_lv1_1 = ap_CS_fsm_state3)))) then 
            F_temp_data_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state24))) then 
            F_temp_data_ce0 <= grp_getTotalCurrent_fu_357_F_temp_data_ce0;
        else 
            F_temp_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    F_temp_data_ce1_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage6, ap_CS_fsm_state3)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_lv1_1 = ap_CS_fsm_state3)))) then 
            F_temp_data_ce1 <= ap_const_logic_1;
        else 
            F_temp_data_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    F_temp_data_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_53_1_i_i_reg_586, ap_CS_fsm_pp0_stage4, tmp_53_3_i_i_reg_610, ap_enable_reg_pp0_iter2, ap_CS_fsm_state3)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            F_temp_data_d0 <= tmp_53_3_i_i_reg_610;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            F_temp_data_d0 <= tmp_53_1_i_i_reg_586;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_lv1_1 = ap_CS_fsm_state3)))) then 
            F_temp_data_d0 <= ap_const_lv32_0;
        else 
            F_temp_data_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    F_temp_data_d1_assign_proc : process(ap_CS_fsm_state2, tmp_53_i_i_reg_574, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, tmp_53_2_i_i_reg_598, ap_CS_fsm_pp0_stage6, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            F_temp_data_d1 <= tmp_53_2_i_i_reg_598;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            F_temp_data_d1 <= tmp_53_i_i_reg_574;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_lv1_1 = ap_CS_fsm_state3)))) then 
            F_temp_data_d1 <= ap_const_lv32_0;
        else 
            F_temp_data_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    F_temp_data_i_i_load_1_phi_fu_302_p4_assign_proc : process(F_temp_data_i_i_load_1_reg_298, ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525, ap_enable_reg_pp0_iter1, tmp_53_1_i_i_reg_586, ap_CS_fsm_pp0_stage4)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            F_temp_data_i_i_load_1_phi_fu_302_p4 <= tmp_53_1_i_i_reg_586;
        else 
            F_temp_data_i_i_load_1_phi_fu_302_p4 <= F_temp_data_i_i_load_1_reg_298;
        end if; 
    end process;


    F_temp_data_i_i_load_2_phi_fu_278_p4_assign_proc : process(F_temp_data_i_i_load_2_reg_274, ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525, ap_enable_reg_pp0_iter1, tmp_53_2_i_i_reg_598, ap_CS_fsm_pp0_stage6)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            F_temp_data_i_i_load_2_phi_fu_278_p4 <= tmp_53_2_i_i_reg_598;
        else 
            F_temp_data_i_i_load_2_phi_fu_278_p4 <= F_temp_data_i_i_load_2_reg_274;
        end if; 
    end process;


    F_temp_data_i_i_load_3_phi_fu_254_p4_assign_proc : process(F_temp_data_i_i_load_3_reg_250, ap_CS_fsm_pp0_stage0, ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525, tmp_53_3_i_i_reg_610, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            F_temp_data_i_i_load_3_phi_fu_254_p4 <= tmp_53_3_i_i_reg_610;
        else 
            F_temp_data_i_i_load_3_phi_fu_254_p4 <= F_temp_data_i_i_load_3_reg_250;
        end if; 
    end process;


    F_temp_data_i_i_load_phi_fu_326_p4_assign_proc : process(F_temp_data_i_i_load_reg_322, ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525, tmp_53_i_i_reg_574, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            F_temp_data_i_i_load_phi_fu_326_p4 <= tmp_53_i_i_reg_574;
        else 
            F_temp_data_i_i_load_phi_fu_326_p4 <= F_temp_data_i_i_load_reg_322;
        end if; 
    end process;


    F_temp_data_we0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp0_stage0, ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter2, ap_CS_fsm_state3, tmp_i_i_fu_388_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or ((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = tmp_i_i_fu_388_p2))))) then 
            F_temp_data_we0 <= ap_const_logic_1;
        else 
            F_temp_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    F_temp_data_we1_assign_proc : process(ap_CS_fsm_state2, ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage6, ap_CS_fsm_state3, tmp_i_i_fu_388_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = tmp_i_i_fu_388_p2))))) then 
            F_temp_data_we1 <= ap_const_logic_1;
        else 
            F_temp_data_we1 <= ap_const_logic_0;
        end if; 
    end process;

    RowOfBlocks_V_1_fu_393_p2 <= std_logic_vector(unsigned(RowOfBlocks_V_reg_226) + unsigned(ap_const_lv26_1));
    RowOfBlocks_V_cast_i_fu_384_p1 <= std_logic_vector(resize(unsigned(RowOfBlocks_V_reg_226),27));
    V_acc_V_data_00_status <= (V_acc_V_data_0_empty_n and V_acc_V_data_1_empty_n and V_acc_V_data_2_empty_n and V_acc_V_data_3_empty_n);

    V_acc_V_data_00_update_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_35_i_i_reg_525, ap_condition_188)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((tmp_35_i_i_reg_525 = ap_const_lv1_0)) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_188 = ap_const_boolean_1))))) then 
            V_acc_V_data_00_update <= ap_const_logic_1;
        else 
            V_acc_V_data_00_update <= ap_const_logic_0;
        end if; 
    end process;


    V_acc_V_data_0_blk_n_assign_proc : process(V_acc_V_data_0_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_35_i_i_reg_525)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((tmp_35_i_i_reg_525 = ap_const_lv1_0)))) then 
            V_acc_V_data_0_blk_n <= V_acc_V_data_0_empty_n;
        else 
            V_acc_V_data_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_acc_V_data_0_read <= V_acc_V_data_00_update;

    V_acc_V_data_1_blk_n_assign_proc : process(V_acc_V_data_1_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_35_i_i_reg_525)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((tmp_35_i_i_reg_525 = ap_const_lv1_0)))) then 
            V_acc_V_data_1_blk_n <= V_acc_V_data_1_empty_n;
        else 
            V_acc_V_data_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_acc_V_data_1_read <= V_acc_V_data_00_update;

    V_acc_V_data_2_blk_n_assign_proc : process(V_acc_V_data_2_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_35_i_i_reg_525)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((tmp_35_i_i_reg_525 = ap_const_lv1_0)))) then 
            V_acc_V_data_2_blk_n <= V_acc_V_data_2_empty_n;
        else 
            V_acc_V_data_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_acc_V_data_2_read <= V_acc_V_data_00_update;

    V_acc_V_data_3_blk_n_assign_proc : process(V_acc_V_data_3_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_35_i_i_reg_525)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((tmp_35_i_i_reg_525 = ap_const_lv1_0)))) then 
            V_acc_V_data_3_blk_n <= V_acc_V_data_3_empty_n;
        else 
            V_acc_V_data_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_acc_V_data_3_read <= V_acc_V_data_00_update;

    V_temp_data_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_state2, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter2, ap_CS_fsm_state3, grp_getTotalCurrent_fu_357_V_temp_data_address0, ap_CS_fsm_state24)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            V_temp_data_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            V_temp_data_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            V_temp_data_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            V_temp_data_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state24))) then 
            V_temp_data_address0 <= grp_getTotalCurrent_fu_357_V_temp_data_address0;
        else 
            V_temp_data_address0 <= "XX";
        end if; 
    end process;


    V_temp_data_address1_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage7, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            V_temp_data_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            V_temp_data_address1 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            V_temp_data_address1 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            V_temp_data_address1 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            V_temp_data_address1 <= "XX";
        end if; 
    end process;


    V_temp_data_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_state2, ap_condition_188, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter2, ap_CS_fsm_state3, grp_getTotalCurrent_fu_357_V_temp_data_ce0, ap_CS_fsm_state24)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_188 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)))) then 
            V_temp_data_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state24))) then 
            V_temp_data_ce0 <= grp_getTotalCurrent_fu_357_V_temp_data_ce0;
        else 
            V_temp_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    V_temp_data_ce1_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage7, ap_CS_fsm_state3)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_lv1_1 = ap_CS_fsm_state3)))) then 
            V_temp_data_ce1 <= ap_const_logic_1;
        else 
            V_temp_data_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    V_temp_data_d0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_state2, ap_enable_reg_pp0_iter1, tmp_54_1_i_i_reg_592, ap_CS_fsm_pp0_stage5, tmp_54_3_i_i_reg_616, ap_enable_reg_pp0_iter2, ap_CS_fsm_state3)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            V_temp_data_d0 <= tmp_54_3_i_i_reg_616;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            V_temp_data_d0 <= tmp_54_1_i_i_reg_592;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_lv1_1 = ap_CS_fsm_state3)))) then 
            V_temp_data_d0 <= ap_const_lv32_0;
        else 
            V_temp_data_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    V_temp_data_d1_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp0_iter1, tmp_54_i_i_reg_580, ap_CS_fsm_pp0_stage3, tmp_54_2_i_i_reg_604, ap_CS_fsm_pp0_stage7, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            V_temp_data_d1 <= tmp_54_2_i_i_reg_604;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            V_temp_data_d1 <= tmp_54_i_i_reg_580;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_lv1_1 = ap_CS_fsm_state3)))) then 
            V_temp_data_d1 <= ap_const_lv32_0;
        else 
            V_temp_data_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    V_temp_data_i_i_load_1_phi_fu_290_p4_assign_proc : process(V_temp_data_i_i_load_1_reg_286, ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525, ap_enable_reg_pp0_iter1, tmp_54_1_i_i_reg_592, ap_CS_fsm_pp0_stage5)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            V_temp_data_i_i_load_1_phi_fu_290_p4 <= tmp_54_1_i_i_reg_592;
        else 
            V_temp_data_i_i_load_1_phi_fu_290_p4 <= V_temp_data_i_i_load_1_reg_286;
        end if; 
    end process;


    V_temp_data_i_i_load_2_phi_fu_266_p4_assign_proc : process(V_temp_data_i_i_load_2_reg_262, ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525, ap_enable_reg_pp0_iter1, tmp_54_2_i_i_reg_604, ap_CS_fsm_pp0_stage7)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            V_temp_data_i_i_load_2_phi_fu_266_p4 <= tmp_54_2_i_i_reg_604;
        else 
            V_temp_data_i_i_load_2_phi_fu_266_p4 <= V_temp_data_i_i_load_2_reg_262;
        end if; 
    end process;


    V_temp_data_i_i_load_3_phi_fu_242_p4_assign_proc : process(ap_CS_fsm_pp0_stage1, V_temp_data_i_i_load_3_reg_238, ap_pipeline_reg_pp0_iter2_tmp_35_i_i_reg_525, tmp_54_3_i_i_reg_616, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_tmp_35_i_i_reg_525)))) then 
            V_temp_data_i_i_load_3_phi_fu_242_p4 <= tmp_54_3_i_i_reg_616;
        else 
            V_temp_data_i_i_load_3_phi_fu_242_p4 <= V_temp_data_i_i_load_3_reg_238;
        end if; 
    end process;


    V_temp_data_i_i_load_phi_fu_314_p4_assign_proc : process(V_temp_data_i_i_load_reg_310, ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525, ap_enable_reg_pp0_iter1, tmp_54_i_i_reg_580, ap_CS_fsm_pp0_stage3)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            V_temp_data_i_i_load_phi_fu_314_p4 <= tmp_54_i_i_reg_580;
        else 
            V_temp_data_i_i_load_phi_fu_314_p4 <= V_temp_data_i_i_load_reg_310;
        end if; 
    end process;


    V_temp_data_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_state2, ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525, ap_pipeline_reg_pp0_iter2_tmp_35_i_i_reg_525, ap_condition_188, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter2, ap_CS_fsm_state3, tmp_i_i_fu_388_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_188 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_tmp_35_i_i_reg_525))) or ((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = tmp_i_i_fu_388_p2))))) then 
            V_temp_data_we0 <= ap_const_logic_1;
        else 
            V_temp_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    V_temp_data_we1_assign_proc : process(ap_CS_fsm_state2, ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage7, ap_CS_fsm_state3, tmp_i_i_fu_388_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_35_i_i_reg_525)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = tmp_i_i_fu_388_p2))))) then 
            V_temp_data_we1 <= ap_const_logic_1;
        else 
            V_temp_data_we1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state22 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_state23 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_state24 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);

    ap_condition_135_assign_proc : process(ap_start, ap_done_reg, simConfig_rowsToSimu_empty_n, simConfig_BLOCK_NUMBERS_V_empty_n)
    begin
                ap_condition_135 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimu_empty_n = ap_const_logic_0));
    end process;


    ap_condition_188_assign_proc : process(tmp_35_i_i_reg_525, F_acc_V_data_00_status, V_acc_V_data_00_status)
    begin
                ap_condition_188 <= ((not((tmp_35_i_i_reg_525 = ap_const_lv1_0)) and (F_acc_V_data_00_status = ap_const_logic_0)) or (not((tmp_35_i_i_reg_525 = ap_const_lv1_0)) and (V_acc_V_data_00_status = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, tmp_i_i_fu_388_p2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = tmp_i_i_fu_388_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, tmp_i_i_fu_388_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = tmp_i_i_fu_388_p2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    block_fu_408_p2 <= std_logic_vector(unsigned(block_i_i_phi_fu_338_p4) + unsigned(ap_const_lv26_1));
    block_i_i_cast_fu_399_p1 <= std_logic_vector(resize(unsigned(block_i_i_phi_fu_338_p4),27));

    block_i_i_phi_fu_338_p4_assign_proc : process(tmp_35_i_i_reg_525, block_i_i_reg_334, ap_CS_fsm_pp0_stage0, block_reg_529, ap_enable_reg_pp0_iter1)
    begin
        if ((not((tmp_35_i_i_reg_525 = ap_const_lv1_0)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            block_i_i_phi_fu_338_p4 <= block_reg_529;
        else 
            block_i_i_phi_fu_338_p4 <= block_i_i_reg_334;
        end if; 
    end process;

    exitcond_i_i_fu_446_p2 <= "1" when (val_assign_reg_345 = ap_const_lv3_4) else "0";

    grp_fu_372_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_condition_188, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_188 = ap_const_boolean_1)))) or (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) or (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) or (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) or (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) or (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) or (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_372_ce <= ap_const_logic_1;
        else 
            grp_fu_372_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_372_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, V_temp_data_i_i_load_3_phi_fu_242_p4, F_temp_data_i_i_load_3_phi_fu_254_p4, V_temp_data_i_i_load_2_phi_fu_266_p4, F_temp_data_i_i_load_2_phi_fu_278_p4, V_temp_data_i_i_load_1_phi_fu_290_p4, F_temp_data_i_i_load_1_phi_fu_302_p4, V_temp_data_i_i_load_phi_fu_314_p4, F_temp_data_i_i_load_phi_fu_326_p4)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_372_p0 <= V_temp_data_i_i_load_3_phi_fu_242_p4;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_372_p0 <= F_temp_data_i_i_load_3_phi_fu_254_p4;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_372_p0 <= V_temp_data_i_i_load_2_phi_fu_266_p4;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_372_p0 <= F_temp_data_i_i_load_2_phi_fu_278_p4;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_372_p0 <= V_temp_data_i_i_load_1_phi_fu_290_p4;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_372_p0 <= F_temp_data_i_i_load_1_phi_fu_302_p4;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_372_p0 <= V_temp_data_i_i_load_phi_fu_314_p4;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_372_p0 <= F_temp_data_i_i_load_phi_fu_326_p4;
        else 
            grp_fu_372_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_372_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, tmp_data_0_reg_534, tmp_data_1_reg_539, tmp_data_2_reg_544, tmp_data_3_reg_549, tmp_data_0_9_reg_554, tmp_data_1_9_reg_559, tmp_data_2_9_reg_564, tmp_data_3_9_reg_569, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_372_p1 <= tmp_data_3_9_reg_569;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_372_p1 <= tmp_data_3_reg_549;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_372_p1 <= tmp_data_2_9_reg_564;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_372_p1 <= tmp_data_2_reg_544;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_372_p1 <= tmp_data_1_9_reg_559;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_372_p1 <= tmp_data_1_reg_539;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_372_p1 <= tmp_data_0_9_reg_554;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_372_p1 <= tmp_data_0_reg_534;
        else 
            grp_fu_372_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_getTotalCurrent_fu_357_ap_start <= ap_reg_grp_getTotalCurrent_fu_357_ap_start;
    output_r_TDATA <= grp_getTotalCurrent_fu_357_output_r_TDATA;
    output_r_TLAST <= grp_getTotalCurrent_fu_357_output_r_TLAST;
    output_r_TVALID <= grp_getTotalCurrent_fu_357_output_r_TVALID;
    row_fu_452_p2 <= std_logic_vector(unsigned(val_assign_reg_345) + unsigned(ap_const_lv3_1));

    simConfig_BLOCK_NUMBERS_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, simConfig_BLOCK_NUMBERS_V_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            simConfig_BLOCK_NUMBERS_V_blk_n <= simConfig_BLOCK_NUMBERS_V_empty_n;
        else 
            simConfig_BLOCK_NUMBERS_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    simConfig_BLOCK_NUMBERS_V_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_135)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_135 = ap_const_boolean_1)))) then 
            simConfig_BLOCK_NUMBERS_V_read <= ap_const_logic_1;
        else 
            simConfig_BLOCK_NUMBERS_V_read <= ap_const_logic_0;
        end if; 
    end process;


    simConfig_rowsToSimu_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, simConfig_rowsToSimu_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            simConfig_rowsToSimu_blk_n <= simConfig_rowsToSimu_empty_n;
        else 
            simConfig_rowsToSimu_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    simConfig_rowsToSimu_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_135)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_135 = ap_const_boolean_1)))) then 
            simConfig_rowsToSimu_read <= ap_const_logic_1;
        else 
            simConfig_rowsToSimu_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_35_i_i_fu_403_p2 <= "1" when (signed(block_i_i_cast_fu_399_p1) < signed(simConfig_BLOCK_NUMB_reg_458)) else "0";
    tmp_i_i_fu_388_p2 <= "1" when (signed(RowOfBlocks_V_cast_i_fu_384_p1) < signed(simConfig_rowsToSimu_8_reg_463)) else "0";
end behav;
