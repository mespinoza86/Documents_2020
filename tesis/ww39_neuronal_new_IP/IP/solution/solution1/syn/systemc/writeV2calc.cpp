// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "writeV2calc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic writeV2calc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic writeV2calc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> writeV2calc::ap_ST_fsm_state1 = "1";
const sc_lv<9> writeV2calc::ap_ST_fsm_state2 = "10";
const sc_lv<9> writeV2calc::ap_ST_fsm_state3 = "100";
const sc_lv<9> writeV2calc::ap_ST_fsm_state4 = "1000";
const sc_lv<9> writeV2calc::ap_ST_fsm_pp0_stage0 = "10000";
const sc_lv<9> writeV2calc::ap_ST_fsm_pp0_stage1 = "100000";
const sc_lv<9> writeV2calc::ap_ST_fsm_pp0_stage2 = "1000000";
const sc_lv<9> writeV2calc::ap_ST_fsm_pp0_stage3 = "10000000";
const sc_lv<9> writeV2calc::ap_ST_fsm_state12 = "100000000";
const sc_lv<32> writeV2calc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> writeV2calc::ap_const_lv1_1 = "1";
const bool writeV2calc::ap_const_boolean_1 = true;
const sc_lv<32> writeV2calc::ap_const_lv32_1 = "1";
const sc_lv<1> writeV2calc::ap_const_lv1_0 = "0";
const sc_lv<32> writeV2calc::ap_const_lv32_7 = "111";
const sc_lv<32> writeV2calc::ap_const_lv32_4 = "100";
const sc_lv<32> writeV2calc::ap_const_lv32_5 = "101";
const sc_lv<32> writeV2calc::ap_const_lv32_6 = "110";
const sc_lv<32> writeV2calc::ap_const_lv32_2 = "10";
const sc_lv<32> writeV2calc::ap_const_lv32_3 = "11";
const sc_lv<12> writeV2calc::ap_const_lv12_0 = "000000000000";
const sc_lv<32> writeV2calc::ap_const_lv32_8 = "1000";
const sc_lv<26> writeV2calc::ap_const_lv26_0 = "00000000000000000000000000";
const sc_lv<12> writeV2calc::ap_const_lv12_1 = "1";
const sc_lv<26> writeV2calc::ap_const_lv26_1 = "1";

writeV2calc::writeV2calc(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Vi_idx_V_data_V_00_status);
    sensitive << ( Vi_idx_V_data_V_0_empty_n );
    sensitive << ( Vi_idx_V_data_V_1_empty_n );
    sensitive << ( Vi_idx_V_data_V_2_empty_n );
    sensitive << ( Vi_idx_V_data_V_3_empty_n );

    SC_METHOD(thread_Vi_idx_V_data_V_00_update);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_3_i_i_fu_250_p2 );
    sensitive << ( Vi_idx_V_data_V_00_status );

    SC_METHOD(thread_Vi_idx_V_data_V_0_blk_n);
    sensitive << ( Vi_idx_V_data_V_0_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_3_i_i_fu_250_p2 );

    SC_METHOD(thread_Vi_idx_V_data_V_0_read);
    sensitive << ( Vi_idx_V_data_V_00_update );

    SC_METHOD(thread_Vi_idx_V_data_V_1_blk_n);
    sensitive << ( Vi_idx_V_data_V_1_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_3_i_i_fu_250_p2 );

    SC_METHOD(thread_Vi_idx_V_data_V_1_read);
    sensitive << ( Vi_idx_V_data_V_00_update );

    SC_METHOD(thread_Vi_idx_V_data_V_2_blk_n);
    sensitive << ( Vi_idx_V_data_V_2_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_3_i_i_fu_250_p2 );

    SC_METHOD(thread_Vi_idx_V_data_V_2_read);
    sensitive << ( Vi_idx_V_data_V_00_update );

    SC_METHOD(thread_Vi_idx_V_data_V_3_blk_n);
    sensitive << ( Vi_idx_V_data_V_3_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_3_i_i_fu_250_p2 );

    SC_METHOD(thread_Vi_idx_V_data_V_3_read);
    sensitive << ( Vi_idx_V_data_V_00_update );

    SC_METHOD(thread_Vj_idx_V_data_V_00_status);
    sensitive << ( Vj_idx_V_data_V_0_empty_n );
    sensitive << ( Vj_idx_V_data_V_1_empty_n );
    sensitive << ( Vj_idx_V_data_V_2_empty_n );
    sensitive << ( Vj_idx_V_data_V_3_empty_n );

    SC_METHOD(thread_Vj_idx_V_data_V_00_update);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( Vj_idx_V_data_V_00_status );
    sensitive << ( ap_condition_261 );

    SC_METHOD(thread_Vj_idx_V_data_V_0_blk_n);
    sensitive << ( Vj_idx_V_data_V_0_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );

    SC_METHOD(thread_Vj_idx_V_data_V_0_read);
    sensitive << ( Vj_idx_V_data_V_00_update );

    SC_METHOD(thread_Vj_idx_V_data_V_1_blk_n);
    sensitive << ( Vj_idx_V_data_V_1_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );

    SC_METHOD(thread_Vj_idx_V_data_V_1_read);
    sensitive << ( Vj_idx_V_data_V_00_update );

    SC_METHOD(thread_Vj_idx_V_data_V_2_blk_n);
    sensitive << ( Vj_idx_V_data_V_2_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );

    SC_METHOD(thread_Vj_idx_V_data_V_2_read);
    sensitive << ( Vj_idx_V_data_V_00_update );

    SC_METHOD(thread_Vj_idx_V_data_V_3_blk_n);
    sensitive << ( Vj_idx_V_data_V_3_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );

    SC_METHOD(thread_Vj_idx_V_data_V_3_read);
    sensitive << ( Vj_idx_V_data_V_00_update );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_condition_190);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( simConfig_rowsToSimu_empty_n );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );

    SC_METHOD(thread_ap_condition_241);
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( fixedData_V_data1_status );
    sensitive << ( processedData_V_data1_status );

    SC_METHOD(thread_ap_condition_261);
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412 );
    sensitive << ( fixedData_V_data1_status );
    sensitive << ( processedData_V_data1_status );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_3_i_i_fu_250_p2 );
    sensitive << ( Vi_idx_V_data_V_00_status );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_3_i_i_fu_250_p2 );
    sensitive << ( Vi_idx_V_data_V_00_status );

    SC_METHOD(thread_fixedData_V_data1_status);
    sensitive << ( fixedData_V_data_full_n );
    sensitive << ( fixedData_V_tlast_V_full_n );

    SC_METHOD(thread_fixedData_V_data1_update);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_condition_241 );
    sensitive << ( Vj_idx_V_data_V_00_status );
    sensitive << ( ap_condition_261 );

    SC_METHOD(thread_fixedData_V_data_blk_n);
    sensitive << ( fixedData_V_data_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );

    SC_METHOD(thread_fixedData_V_data_din);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_data_reg_382 );
    sensitive << ( tmp_data_1_reg_387 );
    sensitive << ( tmp_data_2_reg_402 );
    sensitive << ( tmp_data_3_reg_407 );
    sensitive << ( ap_condition_241 );
    sensitive << ( Vj_idx_V_data_V_00_status );
    sensitive << ( ap_condition_261 );

    SC_METHOD(thread_fixedData_V_data_write);
    sensitive << ( fixedData_V_data1_update );

    SC_METHOD(thread_fixedData_V_tlast_V_blk_n);
    sensitive << ( fixedData_V_tlast_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );

    SC_METHOD(thread_fixedData_V_tlast_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_condition_241 );
    sensitive << ( Vj_idx_V_data_V_00_status );
    sensitive << ( ap_condition_261 );

    SC_METHOD(thread_fixedData_V_tlast_V_write);
    sensitive << ( fixedData_V_data1_update );

    SC_METHOD(thread_i_V_fu_255_p2);
    sensitive << ( p_i_i_reg_224 );

    SC_METHOD(thread_j_V_fu_304_p2);
    sensitive << ( p_1_i_i_phi_fu_239_p4 );

    SC_METHOD(thread_p_1_i_i_cast_fu_295_p1);
    sensitive << ( p_1_i_i_phi_fu_239_p4 );

    SC_METHOD(thread_p_1_i_i_phi_fu_239_p4);
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( p_1_i_i_reg_235 );
    sensitive << ( j_V_reg_416 );

    SC_METHOD(thread_p_i_i_cast_fu_246_p1);
    sensitive << ( p_i_i_reg_224 );

    SC_METHOD(thread_processedData_V_data1_status);
    sensitive << ( processedData_V_data_full_n );
    sensitive << ( processedData_V_data_1_full_n );
    sensitive << ( processedData_V_data_2_full_n );
    sensitive << ( processedData_V_data_3_full_n );

    SC_METHOD(thread_processedData_V_data1_update);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_condition_241 );
    sensitive << ( Vj_idx_V_data_V_00_status );
    sensitive << ( ap_condition_261 );

    SC_METHOD(thread_processedData_V_data_1_blk_n);
    sensitive << ( processedData_V_data_1_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );

    SC_METHOD(thread_processedData_V_data_1_din);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_condition_241 );
    sensitive << ( Vj_idx_V_data_V_00_status );
    sensitive << ( ap_condition_261 );
    sensitive << ( tmp_data_1_12_reg_446 );

    SC_METHOD(thread_processedData_V_data_1_write);
    sensitive << ( processedData_V_data1_update );

    SC_METHOD(thread_processedData_V_data_2_blk_n);
    sensitive << ( processedData_V_data_2_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );

    SC_METHOD(thread_processedData_V_data_2_din);
    sensitive << ( voltagesBackup_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_condition_241 );
    sensitive << ( Vj_idx_V_data_V_00_status );
    sensitive << ( ap_condition_261 );
    sensitive << ( tmp_data_2_13_reg_461 );

    SC_METHOD(thread_processedData_V_data_2_write);
    sensitive << ( processedData_V_data1_update );

    SC_METHOD(thread_processedData_V_data_3_blk_n);
    sensitive << ( processedData_V_data_3_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );

    SC_METHOD(thread_processedData_V_data_3_din);
    sensitive << ( voltagesBackup_q1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_condition_241 );
    sensitive << ( Vj_idx_V_data_V_00_status );
    sensitive << ( ap_condition_261 );
    sensitive << ( tmp_data_3_14_reg_466 );

    SC_METHOD(thread_processedData_V_data_3_write);
    sensitive << ( processedData_V_data1_update );

    SC_METHOD(thread_processedData_V_data_blk_n);
    sensitive << ( processedData_V_data_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );

    SC_METHOD(thread_processedData_V_data_din);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_condition_241 );
    sensitive << ( Vj_idx_V_data_V_00_status );
    sensitive << ( ap_condition_261 );
    sensitive << ( tmp_data_0_reg_441 );

    SC_METHOD(thread_processedData_V_data_write);
    sensitive << ( processedData_V_data1_update );

    SC_METHOD(thread_simConfig_BLOCK_NUMBERS_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );

    SC_METHOD(thread_simConfig_BLOCK_NUMBERS_V_read);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_190 );

    SC_METHOD(thread_simConfig_rowsToSimu_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_rowsToSimu_empty_n );

    SC_METHOD(thread_simConfig_rowsToSimu_read);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_190 );

    SC_METHOD(thread_tmp_13_1_i_i_fu_331_p1);
    sensitive << ( Vj_idx_V_data_V_1_dout );

    SC_METHOD(thread_tmp_13_2_i_i_fu_336_p1);
    sensitive << ( tmp_data_2_V_1_reg_421 );

    SC_METHOD(thread_tmp_13_3_i_i_fu_340_p1);
    sensitive << ( tmp_data_3_V_1_reg_426 );

    SC_METHOD(thread_tmp_13_i_i_fu_326_p1);
    sensitive << ( Vj_idx_V_data_V_0_dout );

    SC_METHOD(thread_tmp_3_i_i_fu_250_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_3_i_i_fu_250_p2 );
    sensitive << ( simConfig_rowsToSimu_1_reg_349 );
    sensitive << ( Vi_idx_V_data_V_00_status );
    sensitive << ( p_i_i_cast_fu_246_p1 );

    SC_METHOD(thread_tmp_5_i_i_fu_277_p1);
    sensitive << ( Vi_idx_V_data_V_0_dout );

    SC_METHOD(thread_tmp_6_i_i_fu_282_p1);
    sensitive << ( Vi_idx_V_data_V_1_dout );

    SC_METHOD(thread_tmp_7_i_i_fu_287_p1);
    sensitive << ( tmp_data_2_V_reg_362 );

    SC_METHOD(thread_tmp_8_i_i_fu_291_p1);
    sensitive << ( tmp_data_3_V_reg_367 );

    SC_METHOD(thread_tmp_9_i_i_fu_299_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( simConfig_BLOCK_NUMB_reg_344 );
    sensitive << ( ap_condition_241 );
    sensitive << ( p_1_i_i_cast_fu_295_p1 );

    SC_METHOD(thread_voltagesBackup_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_5_i_i_fu_277_p1 );
    sensitive << ( tmp_7_i_i_fu_287_p1 );
    sensitive << ( tmp_13_i_i_fu_326_p1 );
    sensitive << ( tmp_13_2_i_i_fu_336_p1 );

    SC_METHOD(thread_voltagesBackup_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_i_i_fu_282_p1 );
    sensitive << ( tmp_8_i_i_fu_291_p1 );
    sensitive << ( tmp_13_1_i_i_fu_331_p1 );
    sensitive << ( tmp_13_3_i_i_fu_340_p1 );

    SC_METHOD(thread_voltagesBackup_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_3_i_i_fu_250_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( Vi_idx_V_data_V_00_status );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( Vj_idx_V_data_V_00_status );
    sensitive << ( ap_condition_261 );

    SC_METHOD(thread_voltagesBackup_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_3_i_i_fu_250_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( Vi_idx_V_data_V_00_status );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( Vj_idx_V_data_V_00_status );
    sensitive << ( ap_condition_261 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_i_i_fu_250_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_i_i_reg_412 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_condition_190 );
    sensitive << ( Vi_idx_V_data_V_00_status );
    sensitive << ( tmp_9_i_i_fu_299_p2 );
    sensitive << ( ap_condition_241 );
    sensitive << ( Vj_idx_V_data_V_00_status );
    sensitive << ( ap_condition_261 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "writeV2calc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, voltagesBackup_address0, "(port)voltagesBackup_address0");
    sc_trace(mVcdFile, voltagesBackup_ce0, "(port)voltagesBackup_ce0");
    sc_trace(mVcdFile, voltagesBackup_q0, "(port)voltagesBackup_q0");
    sc_trace(mVcdFile, voltagesBackup_address1, "(port)voltagesBackup_address1");
    sc_trace(mVcdFile, voltagesBackup_ce1, "(port)voltagesBackup_ce1");
    sc_trace(mVcdFile, voltagesBackup_q1, "(port)voltagesBackup_q1");
    sc_trace(mVcdFile, simConfig_rowsToSimu_dout, "(port)simConfig_rowsToSimu_dout");
    sc_trace(mVcdFile, simConfig_rowsToSimu_empty_n, "(port)simConfig_rowsToSimu_empty_n");
    sc_trace(mVcdFile, simConfig_rowsToSimu_read, "(port)simConfig_rowsToSimu_read");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_dout, "(port)simConfig_BLOCK_NUMBERS_V_dout");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_empty_n, "(port)simConfig_BLOCK_NUMBERS_V_empty_n");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_read, "(port)simConfig_BLOCK_NUMBERS_V_read");
    sc_trace(mVcdFile, Vi_idx_V_data_V_0_dout, "(port)Vi_idx_V_data_V_0_dout");
    sc_trace(mVcdFile, Vi_idx_V_data_V_0_empty_n, "(port)Vi_idx_V_data_V_0_empty_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_0_read, "(port)Vi_idx_V_data_V_0_read");
    sc_trace(mVcdFile, Vi_idx_V_data_V_1_dout, "(port)Vi_idx_V_data_V_1_dout");
    sc_trace(mVcdFile, Vi_idx_V_data_V_1_empty_n, "(port)Vi_idx_V_data_V_1_empty_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_1_read, "(port)Vi_idx_V_data_V_1_read");
    sc_trace(mVcdFile, Vi_idx_V_data_V_2_dout, "(port)Vi_idx_V_data_V_2_dout");
    sc_trace(mVcdFile, Vi_idx_V_data_V_2_empty_n, "(port)Vi_idx_V_data_V_2_empty_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_2_read, "(port)Vi_idx_V_data_V_2_read");
    sc_trace(mVcdFile, Vi_idx_V_data_V_3_dout, "(port)Vi_idx_V_data_V_3_dout");
    sc_trace(mVcdFile, Vi_idx_V_data_V_3_empty_n, "(port)Vi_idx_V_data_V_3_empty_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_3_read, "(port)Vi_idx_V_data_V_3_read");
    sc_trace(mVcdFile, fixedData_V_data_din, "(port)fixedData_V_data_din");
    sc_trace(mVcdFile, fixedData_V_data_full_n, "(port)fixedData_V_data_full_n");
    sc_trace(mVcdFile, fixedData_V_data_write, "(port)fixedData_V_data_write");
    sc_trace(mVcdFile, fixedData_V_tlast_V_din, "(port)fixedData_V_tlast_V_din");
    sc_trace(mVcdFile, fixedData_V_tlast_V_full_n, "(port)fixedData_V_tlast_V_full_n");
    sc_trace(mVcdFile, fixedData_V_tlast_V_write, "(port)fixedData_V_tlast_V_write");
    sc_trace(mVcdFile, Vj_idx_V_data_V_0_dout, "(port)Vj_idx_V_data_V_0_dout");
    sc_trace(mVcdFile, Vj_idx_V_data_V_0_empty_n, "(port)Vj_idx_V_data_V_0_empty_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_0_read, "(port)Vj_idx_V_data_V_0_read");
    sc_trace(mVcdFile, Vj_idx_V_data_V_1_dout, "(port)Vj_idx_V_data_V_1_dout");
    sc_trace(mVcdFile, Vj_idx_V_data_V_1_empty_n, "(port)Vj_idx_V_data_V_1_empty_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_1_read, "(port)Vj_idx_V_data_V_1_read");
    sc_trace(mVcdFile, Vj_idx_V_data_V_2_dout, "(port)Vj_idx_V_data_V_2_dout");
    sc_trace(mVcdFile, Vj_idx_V_data_V_2_empty_n, "(port)Vj_idx_V_data_V_2_empty_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_2_read, "(port)Vj_idx_V_data_V_2_read");
    sc_trace(mVcdFile, Vj_idx_V_data_V_3_dout, "(port)Vj_idx_V_data_V_3_dout");
    sc_trace(mVcdFile, Vj_idx_V_data_V_3_empty_n, "(port)Vj_idx_V_data_V_3_empty_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_3_read, "(port)Vj_idx_V_data_V_3_read");
    sc_trace(mVcdFile, processedData_V_data_din, "(port)processedData_V_data_din");
    sc_trace(mVcdFile, processedData_V_data_full_n, "(port)processedData_V_data_full_n");
    sc_trace(mVcdFile, processedData_V_data_write, "(port)processedData_V_data_write");
    sc_trace(mVcdFile, processedData_V_data_1_din, "(port)processedData_V_data_1_din");
    sc_trace(mVcdFile, processedData_V_data_1_full_n, "(port)processedData_V_data_1_full_n");
    sc_trace(mVcdFile, processedData_V_data_1_write, "(port)processedData_V_data_1_write");
    sc_trace(mVcdFile, processedData_V_data_2_din, "(port)processedData_V_data_2_din");
    sc_trace(mVcdFile, processedData_V_data_2_full_n, "(port)processedData_V_data_2_full_n");
    sc_trace(mVcdFile, processedData_V_data_2_write, "(port)processedData_V_data_2_write");
    sc_trace(mVcdFile, processedData_V_data_3_din, "(port)processedData_V_data_3_din");
    sc_trace(mVcdFile, processedData_V_data_3_full_n, "(port)processedData_V_data_3_full_n");
    sc_trace(mVcdFile, processedData_V_data_3_write, "(port)processedData_V_data_3_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, simConfig_rowsToSimu_blk_n, "simConfig_rowsToSimu_blk_n");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_blk_n, "simConfig_BLOCK_NUMBERS_V_blk_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_0_blk_n, "Vi_idx_V_data_V_0_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_3_i_i_fu_250_p2, "tmp_3_i_i_fu_250_p2");
    sc_trace(mVcdFile, Vi_idx_V_data_V_1_blk_n, "Vi_idx_V_data_V_1_blk_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_2_blk_n, "Vi_idx_V_data_V_2_blk_n");
    sc_trace(mVcdFile, Vi_idx_V_data_V_3_blk_n, "Vi_idx_V_data_V_3_blk_n");
    sc_trace(mVcdFile, fixedData_V_data_blk_n, "fixedData_V_data_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_9_i_i_reg_412, "tmp_9_i_i_reg_412");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412, "ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, fixedData_V_tlast_V_blk_n, "fixedData_V_tlast_V_blk_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_0_blk_n, "Vj_idx_V_data_V_0_blk_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_1_blk_n, "Vj_idx_V_data_V_1_blk_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_2_blk_n, "Vj_idx_V_data_V_2_blk_n");
    sc_trace(mVcdFile, Vj_idx_V_data_V_3_blk_n, "Vj_idx_V_data_V_3_blk_n");
    sc_trace(mVcdFile, processedData_V_data_blk_n, "processedData_V_data_blk_n");
    sc_trace(mVcdFile, processedData_V_data_1_blk_n, "processedData_V_data_1_blk_n");
    sc_trace(mVcdFile, processedData_V_data_2_blk_n, "processedData_V_data_2_blk_n");
    sc_trace(mVcdFile, processedData_V_data_3_blk_n, "processedData_V_data_3_blk_n");
    sc_trace(mVcdFile, p_1_i_i_reg_235, "p_1_i_i_reg_235");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMB_reg_344, "simConfig_BLOCK_NUMB_reg_344");
    sc_trace(mVcdFile, ap_condition_190, "ap_condition_190");
    sc_trace(mVcdFile, simConfig_rowsToSimu_1_reg_349, "simConfig_rowsToSimu_1_reg_349");
    sc_trace(mVcdFile, i_V_fu_255_p2, "i_V_fu_255_p2");
    sc_trace(mVcdFile, i_V_reg_357, "i_V_reg_357");
    sc_trace(mVcdFile, Vi_idx_V_data_V_00_status, "Vi_idx_V_data_V_00_status");
    sc_trace(mVcdFile, tmp_data_2_V_reg_362, "tmp_data_2_V_reg_362");
    sc_trace(mVcdFile, tmp_data_3_V_reg_367, "tmp_data_3_V_reg_367");
    sc_trace(mVcdFile, tmp_data_reg_382, "tmp_data_reg_382");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_data_1_reg_387, "tmp_data_1_reg_387");
    sc_trace(mVcdFile, tmp_data_2_reg_402, "tmp_data_2_reg_402");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_data_3_reg_407, "tmp_data_3_reg_407");
    sc_trace(mVcdFile, tmp_9_i_i_fu_299_p2, "tmp_9_i_i_fu_299_p2");
    sc_trace(mVcdFile, fixedData_V_data1_status, "fixedData_V_data1_status");
    sc_trace(mVcdFile, processedData_V_data1_status, "processedData_V_data1_status");
    sc_trace(mVcdFile, ap_condition_241, "ap_condition_241");
    sc_trace(mVcdFile, j_V_fu_304_p2, "j_V_fu_304_p2");
    sc_trace(mVcdFile, j_V_reg_416, "j_V_reg_416");
    sc_trace(mVcdFile, tmp_data_2_V_1_reg_421, "tmp_data_2_V_1_reg_421");
    sc_trace(mVcdFile, Vj_idx_V_data_V_00_status, "Vj_idx_V_data_V_00_status");
    sc_trace(mVcdFile, ap_condition_261, "ap_condition_261");
    sc_trace(mVcdFile, tmp_data_3_V_1_reg_426, "tmp_data_3_V_1_reg_426");
    sc_trace(mVcdFile, tmp_data_0_reg_441, "tmp_data_0_reg_441");
    sc_trace(mVcdFile, tmp_data_1_12_reg_446, "tmp_data_1_12_reg_446");
    sc_trace(mVcdFile, tmp_data_2_13_reg_461, "tmp_data_2_13_reg_461");
    sc_trace(mVcdFile, tmp_data_3_14_reg_466, "tmp_data_3_14_reg_466");
    sc_trace(mVcdFile, p_i_i_reg_224, "p_i_i_reg_224");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, p_1_i_i_phi_fu_239_p4, "p_1_i_i_phi_fu_239_p4");
    sc_trace(mVcdFile, tmp_5_i_i_fu_277_p1, "tmp_5_i_i_fu_277_p1");
    sc_trace(mVcdFile, tmp_6_i_i_fu_282_p1, "tmp_6_i_i_fu_282_p1");
    sc_trace(mVcdFile, tmp_7_i_i_fu_287_p1, "tmp_7_i_i_fu_287_p1");
    sc_trace(mVcdFile, tmp_8_i_i_fu_291_p1, "tmp_8_i_i_fu_291_p1");
    sc_trace(mVcdFile, tmp_13_i_i_fu_326_p1, "tmp_13_i_i_fu_326_p1");
    sc_trace(mVcdFile, tmp_13_1_i_i_fu_331_p1, "tmp_13_1_i_i_fu_331_p1");
    sc_trace(mVcdFile, tmp_13_2_i_i_fu_336_p1, "tmp_13_2_i_i_fu_336_p1");
    sc_trace(mVcdFile, tmp_13_3_i_i_fu_340_p1, "tmp_13_3_i_i_fu_340_p1");
    sc_trace(mVcdFile, Vi_idx_V_data_V_00_update, "Vi_idx_V_data_V_00_update");
    sc_trace(mVcdFile, Vj_idx_V_data_V_00_update, "Vj_idx_V_data_V_00_update");
    sc_trace(mVcdFile, fixedData_V_data1_update, "fixedData_V_data1_update");
    sc_trace(mVcdFile, processedData_V_data1_update, "processedData_V_data1_update");
    sc_trace(mVcdFile, p_i_i_cast_fu_246_p1, "p_i_i_cast_fu_246_p1");
    sc_trace(mVcdFile, p_1_i_i_cast_fu_295_p1, "p_1_i_i_cast_fu_295_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

writeV2calc::~writeV2calc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void writeV2calc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0) && 
                    !(!esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(Vi_idx_V_data_V_00_status.read(), ap_const_logic_0)))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1)) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_fu_299_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1)))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1))))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        p_1_i_i_reg_235 = ap_const_lv26_0;
    } else if ((!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1)))) {
        p_1_i_i_reg_235 = j_V_reg_416.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        p_i_i_reg_224 = i_V_reg_357.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_condition_190.read(), ap_const_boolean_1))) {
        p_i_i_reg_224 = ap_const_lv12_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1)))) {
        ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412 = tmp_9_i_i_reg_412.read();
        tmp_9_i_i_reg_412 = tmp_9_i_i_fu_299_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && !(!esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(Vi_idx_V_data_V_00_status.read(), ap_const_logic_0)))) {
        i_V_reg_357 = i_V_fu_255_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1)))) {
        j_V_reg_416 = j_V_fu_304_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && !esl_seteq<1,1,1>(ap_condition_190.read(), ap_const_boolean_1))) {
        simConfig_BLOCK_NUMB_reg_344 = simConfig_BLOCK_NUMBERS_V_dout.read();
        simConfig_rowsToSimu_1_reg_349 = simConfig_rowsToSimu_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1)))) {
        tmp_data_0_reg_441 = voltagesBackup_q0.read();
        tmp_data_1_12_reg_446 = voltagesBackup_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        tmp_data_1_reg_387 = voltagesBackup_q1.read();
        tmp_data_reg_382 = voltagesBackup_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1)))) {
        tmp_data_2_13_reg_461 = voltagesBackup_q0.read();
        tmp_data_3_14_reg_466 = voltagesBackup_q1.read();
    }
    if ((!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
  esl_seteq<1,1,1>(Vj_idx_V_data_V_00_status.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1))))) {
        tmp_data_2_V_1_reg_421 = Vj_idx_V_data_V_2_dout.read();
        tmp_data_3_V_1_reg_426 = Vj_idx_V_data_V_3_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && !esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0) && !(!esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(Vi_idx_V_data_V_00_status.read(), ap_const_logic_0)))) {
        tmp_data_2_V_reg_362 = Vi_idx_V_data_V_2_dout.read();
        tmp_data_3_V_reg_367 = Vi_idx_V_data_V_3_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        tmp_data_2_reg_402 = voltagesBackup_q0.read();
        tmp_data_3_reg_407 = voltagesBackup_q1.read();
    }
}

void writeV2calc::thread_Vi_idx_V_data_V_00_status() {
    Vi_idx_V_data_V_00_status = (Vi_idx_V_data_V_0_empty_n.read() & Vi_idx_V_data_V_1_empty_n.read() & Vi_idx_V_data_V_2_empty_n.read() & Vi_idx_V_data_V_3_empty_n.read());
}

void writeV2calc::thread_Vi_idx_V_data_V_00_update() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         !esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0) && 
         !(!esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(Vi_idx_V_data_V_00_status.read(), ap_const_logic_0)))) {
        Vi_idx_V_data_V_00_update = ap_const_logic_1;
    } else {
        Vi_idx_V_data_V_00_update = ap_const_logic_0;
    }
}

void writeV2calc::thread_Vi_idx_V_data_V_0_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         !esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0))) {
        Vi_idx_V_data_V_0_blk_n = Vi_idx_V_data_V_0_empty_n.read();
    } else {
        Vi_idx_V_data_V_0_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_Vi_idx_V_data_V_0_read() {
    Vi_idx_V_data_V_0_read = Vi_idx_V_data_V_00_update.read();
}

void writeV2calc::thread_Vi_idx_V_data_V_1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         !esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0))) {
        Vi_idx_V_data_V_1_blk_n = Vi_idx_V_data_V_1_empty_n.read();
    } else {
        Vi_idx_V_data_V_1_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_Vi_idx_V_data_V_1_read() {
    Vi_idx_V_data_V_1_read = Vi_idx_V_data_V_00_update.read();
}

void writeV2calc::thread_Vi_idx_V_data_V_2_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         !esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0))) {
        Vi_idx_V_data_V_2_blk_n = Vi_idx_V_data_V_2_empty_n.read();
    } else {
        Vi_idx_V_data_V_2_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_Vi_idx_V_data_V_2_read() {
    Vi_idx_V_data_V_2_read = Vi_idx_V_data_V_00_update.read();
}

void writeV2calc::thread_Vi_idx_V_data_V_3_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         !esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0))) {
        Vi_idx_V_data_V_3_blk_n = Vi_idx_V_data_V_3_empty_n.read();
    } else {
        Vi_idx_V_data_V_3_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_Vi_idx_V_data_V_3_read() {
    Vi_idx_V_data_V_3_read = Vi_idx_V_data_V_00_update.read();
}

void writeV2calc::thread_Vj_idx_V_data_V_00_status() {
    Vj_idx_V_data_V_00_status = (Vj_idx_V_data_V_0_empty_n.read() & Vj_idx_V_data_V_1_empty_n.read() & Vj_idx_V_data_V_2_empty_n.read() & Vj_idx_V_data_V_3_empty_n.read());
}

void writeV2calc::thread_Vj_idx_V_data_V_00_update() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
  esl_seteq<1,1,1>(Vj_idx_V_data_V_00_status.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1))))) {
        Vj_idx_V_data_V_00_update = ap_const_logic_1;
    } else {
        Vj_idx_V_data_V_00_update = ap_const_logic_0;
    }
}

void writeV2calc::thread_Vj_idx_V_data_V_0_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        Vj_idx_V_data_V_0_blk_n = Vj_idx_V_data_V_0_empty_n.read();
    } else {
        Vj_idx_V_data_V_0_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_Vj_idx_V_data_V_0_read() {
    Vj_idx_V_data_V_0_read = Vj_idx_V_data_V_00_update.read();
}

void writeV2calc::thread_Vj_idx_V_data_V_1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        Vj_idx_V_data_V_1_blk_n = Vj_idx_V_data_V_1_empty_n.read();
    } else {
        Vj_idx_V_data_V_1_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_Vj_idx_V_data_V_1_read() {
    Vj_idx_V_data_V_1_read = Vj_idx_V_data_V_00_update.read();
}

void writeV2calc::thread_Vj_idx_V_data_V_2_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        Vj_idx_V_data_V_2_blk_n = Vj_idx_V_data_V_2_empty_n.read();
    } else {
        Vj_idx_V_data_V_2_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_Vj_idx_V_data_V_2_read() {
    Vj_idx_V_data_V_2_read = Vj_idx_V_data_V_00_update.read();
}

void writeV2calc::thread_Vj_idx_V_data_V_3_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        Vj_idx_V_data_V_3_blk_n = Vj_idx_V_data_V_3_empty_n.read();
    } else {
        Vj_idx_V_data_V_3_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_Vj_idx_V_data_V_3_read() {
    Vj_idx_V_data_V_3_read = Vj_idx_V_data_V_00_update.read();
}

void writeV2calc::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(4, 4);
}

void writeV2calc::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read().range(5, 5);
}

void writeV2calc::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read().range(6, 6);
}

void writeV2calc::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read().range(7, 7);
}

void writeV2calc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void writeV2calc::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read().range(8, 8);
}

void writeV2calc::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void writeV2calc::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void writeV2calc::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void writeV2calc::thread_ap_condition_190() {
    ap_condition_190 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(simConfig_BLOCK_NUMBERS_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(simConfig_rowsToSimu_empty_n.read(), ap_const_logic_0));
}

void writeV2calc::thread_ap_condition_241() {
    ap_condition_241 = ((!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
  esl_seteq<1,1,1>(fixedData_V_data1_status.read(), ap_const_logic_0)) || (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
  esl_seteq<1,1,1>(processedData_V_data1_status.read(), ap_const_logic_0)));
}

void writeV2calc::thread_ap_condition_261() {
    ap_condition_261 = ((!esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read()) && 
  esl_seteq<1,1,1>(fixedData_V_data1_status.read(), ap_const_logic_0)) || (!esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read()) && 
  esl_seteq<1,1,1>(processedData_V_data1_status.read(), ap_const_logic_0)));
}

void writeV2calc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_done_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0) && 
          !(!esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(Vi_idx_V_data_V_00_status.read(), ap_const_logic_0))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void writeV2calc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void writeV2calc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0) && 
         !(!esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(Vi_idx_V_data_V_00_status.read(), ap_const_logic_0)))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void writeV2calc::thread_fixedData_V_data1_status() {
    fixedData_V_data1_status = (fixedData_V_data_full_n.read() & fixedData_V_tlast_V_full_n.read());
}

void writeV2calc::thread_fixedData_V_data1_update() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1))) || 
         (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
  esl_seteq<1,1,1>(Vj_idx_V_data_V_00_status.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1)))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1))))) {
        fixedData_V_data1_update = ap_const_logic_1;
    } else {
        fixedData_V_data1_update = ap_const_logic_0;
    }
}

void writeV2calc::thread_fixedData_V_data_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read())) || 
         (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())))) {
        fixedData_V_data_blk_n = fixedData_V_data_full_n.read();
    } else {
        fixedData_V_data_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_fixedData_V_data_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1)))) {
        fixedData_V_data_din = tmp_data_3_reg_407.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
  esl_seteq<1,1,1>(Vj_idx_V_data_V_00_status.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1))))) {
        fixedData_V_data_din = tmp_data_2_reg_402.read();
    } else if ((!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1)))) {
        fixedData_V_data_din = tmp_data_1_reg_387.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1)))) {
        fixedData_V_data_din = tmp_data_reg_382.read();
    } else {
        fixedData_V_data_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void writeV2calc::thread_fixedData_V_data_write() {
    fixedData_V_data_write = fixedData_V_data1_update.read();
}

void writeV2calc::thread_fixedData_V_tlast_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read())) || 
         (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())))) {
        fixedData_V_tlast_V_blk_n = fixedData_V_tlast_V_full_n.read();
    } else {
        fixedData_V_tlast_V_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_fixedData_V_tlast_V_din() {
    fixedData_V_tlast_V_din = ap_const_lv1_0;
}

void writeV2calc::thread_fixedData_V_tlast_V_write() {
    fixedData_V_tlast_V_write = fixedData_V_data1_update.read();
}

void writeV2calc::thread_i_V_fu_255_p2() {
    i_V_fu_255_p2 = (!p_i_i_reg_224.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(p_i_i_reg_224.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void writeV2calc::thread_j_V_fu_304_p2() {
    j_V_fu_304_p2 = (!p_1_i_i_phi_fu_239_p4.read().is_01() || !ap_const_lv26_1.is_01())? sc_lv<26>(): (sc_biguint<26>(p_1_i_i_phi_fu_239_p4.read()) + sc_biguint<26>(ap_const_lv26_1));
}

void writeV2calc::thread_p_1_i_i_cast_fu_295_p1() {
    p_1_i_i_cast_fu_295_p1 = esl_zext<27,26>(p_1_i_i_phi_fu_239_p4.read());
}

void writeV2calc::thread_p_1_i_i_phi_fu_239_p4() {
    if ((!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        p_1_i_i_phi_fu_239_p4 = j_V_reg_416.read();
    } else {
        p_1_i_i_phi_fu_239_p4 = p_1_i_i_reg_235.read();
    }
}

void writeV2calc::thread_p_i_i_cast_fu_246_p1() {
    p_i_i_cast_fu_246_p1 = esl_zext<27,12>(p_i_i_reg_224.read());
}

void writeV2calc::thread_processedData_V_data1_status() {
    processedData_V_data1_status = (processedData_V_data_full_n.read() & processedData_V_data_1_full_n.read() & processedData_V_data_2_full_n.read() & processedData_V_data_3_full_n.read());
}

void writeV2calc::thread_processedData_V_data1_update() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1))) || 
         (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
  esl_seteq<1,1,1>(Vj_idx_V_data_V_00_status.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1)))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1))))) {
        processedData_V_data1_update = ap_const_logic_1;
    } else {
        processedData_V_data1_update = ap_const_logic_0;
    }
}

void writeV2calc::thread_processedData_V_data_1_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read())) || 
         (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())))) {
        processedData_V_data_1_blk_n = processedData_V_data_1_full_n.read();
    } else {
        processedData_V_data_1_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_processedData_V_data_1_din() {
    processedData_V_data_1_din = tmp_data_1_12_reg_446.read();
}

void writeV2calc::thread_processedData_V_data_1_write() {
    processedData_V_data_1_write = processedData_V_data1_update.read();
}

void writeV2calc::thread_processedData_V_data_2_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read())) || 
         (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())))) {
        processedData_V_data_2_blk_n = processedData_V_data_2_full_n.read();
    } else {
        processedData_V_data_2_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_processedData_V_data_2_din() {
    if (((!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
  esl_seteq<1,1,1>(Vj_idx_V_data_V_00_status.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1)))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1))))) {
        processedData_V_data_2_din = tmp_data_2_13_reg_461.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1)))) {
        processedData_V_data_2_din = voltagesBackup_q0.read();
    } else {
        processedData_V_data_2_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void writeV2calc::thread_processedData_V_data_2_write() {
    processedData_V_data_2_write = processedData_V_data1_update.read();
}

void writeV2calc::thread_processedData_V_data_3_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read())) || 
         (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())))) {
        processedData_V_data_3_blk_n = processedData_V_data_3_full_n.read();
    } else {
        processedData_V_data_3_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_processedData_V_data_3_din() {
    if (((!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
  esl_seteq<1,1,1>(Vj_idx_V_data_V_00_status.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1)))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1))))) {
        processedData_V_data_3_din = tmp_data_3_14_reg_466.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1)))) {
        processedData_V_data_3_din = voltagesBackup_q1.read();
    } else {
        processedData_V_data_3_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void writeV2calc::thread_processedData_V_data_3_write() {
    processedData_V_data_3_write = processedData_V_data1_update.read();
}

void writeV2calc::thread_processedData_V_data_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read())) || 
         (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_9_i_i_reg_412.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())))) {
        processedData_V_data_blk_n = processedData_V_data_full_n.read();
    } else {
        processedData_V_data_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_processedData_V_data_din() {
    processedData_V_data_din = tmp_data_0_reg_441.read();
}

void writeV2calc::thread_processedData_V_data_write() {
    processedData_V_data_write = processedData_V_data1_update.read();
}

void writeV2calc::thread_simConfig_BLOCK_NUMBERS_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        simConfig_BLOCK_NUMBERS_V_blk_n = simConfig_BLOCK_NUMBERS_V_empty_n.read();
    } else {
        simConfig_BLOCK_NUMBERS_V_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_simConfig_BLOCK_NUMBERS_V_read() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_190.read(), ap_const_boolean_1))) {
        simConfig_BLOCK_NUMBERS_V_read = ap_const_logic_1;
    } else {
        simConfig_BLOCK_NUMBERS_V_read = ap_const_logic_0;
    }
}

void writeV2calc::thread_simConfig_rowsToSimu_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        simConfig_rowsToSimu_blk_n = simConfig_rowsToSimu_empty_n.read();
    } else {
        simConfig_rowsToSimu_blk_n = ap_const_logic_1;
    }
}

void writeV2calc::thread_simConfig_rowsToSimu_read() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_190.read(), ap_const_boolean_1))) {
        simConfig_rowsToSimu_read = ap_const_logic_1;
    } else {
        simConfig_rowsToSimu_read = ap_const_logic_0;
    }
}

void writeV2calc::thread_tmp_13_1_i_i_fu_331_p1() {
    tmp_13_1_i_i_fu_331_p1 = esl_zext<64,27>(Vj_idx_V_data_V_1_dout.read());
}

void writeV2calc::thread_tmp_13_2_i_i_fu_336_p1() {
    tmp_13_2_i_i_fu_336_p1 = esl_zext<64,27>(tmp_data_2_V_1_reg_421.read());
}

void writeV2calc::thread_tmp_13_3_i_i_fu_340_p1() {
    tmp_13_3_i_i_fu_340_p1 = esl_zext<64,27>(tmp_data_3_V_1_reg_426.read());
}

void writeV2calc::thread_tmp_13_i_i_fu_326_p1() {
    tmp_13_i_i_fu_326_p1 = esl_zext<64,27>(Vj_idx_V_data_V_0_dout.read());
}

void writeV2calc::thread_tmp_3_i_i_fu_250_p2() {
    tmp_3_i_i_fu_250_p2 = (!p_i_i_cast_fu_246_p1.read().is_01() || !simConfig_rowsToSimu_1_reg_349.read().is_01())? sc_lv<1>(): (sc_bigint<27>(p_i_i_cast_fu_246_p1.read()) < sc_bigint<27>(simConfig_rowsToSimu_1_reg_349.read()));
}

void writeV2calc::thread_tmp_5_i_i_fu_277_p1() {
    tmp_5_i_i_fu_277_p1 = esl_zext<64,27>(Vi_idx_V_data_V_0_dout.read());
}

void writeV2calc::thread_tmp_6_i_i_fu_282_p1() {
    tmp_6_i_i_fu_282_p1 = esl_zext<64,27>(Vi_idx_V_data_V_1_dout.read());
}

void writeV2calc::thread_tmp_7_i_i_fu_287_p1() {
    tmp_7_i_i_fu_287_p1 = esl_zext<64,27>(tmp_data_2_V_reg_362.read());
}

void writeV2calc::thread_tmp_8_i_i_fu_291_p1() {
    tmp_8_i_i_fu_291_p1 = esl_zext<64,27>(tmp_data_3_V_reg_367.read());
}

void writeV2calc::thread_tmp_9_i_i_fu_299_p2() {
    tmp_9_i_i_fu_299_p2 = (!p_1_i_i_cast_fu_295_p1.read().is_01() || !simConfig_BLOCK_NUMB_reg_344.read().is_01())? sc_lv<1>(): (sc_bigint<27>(p_1_i_i_cast_fu_295_p1.read()) < sc_bigint<27>(simConfig_BLOCK_NUMB_reg_344.read()));
}

void writeV2calc::thread_voltagesBackup_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        voltagesBackup_address0 =  (sc_lv<14>) (tmp_13_2_i_i_fu_336_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        voltagesBackup_address0 =  (sc_lv<14>) (tmp_13_i_i_fu_326_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        voltagesBackup_address0 =  (sc_lv<14>) (tmp_7_i_i_fu_287_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        voltagesBackup_address0 =  (sc_lv<14>) (tmp_5_i_i_fu_277_p1.read());
    } else {
        voltagesBackup_address0 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void writeV2calc::thread_voltagesBackup_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        voltagesBackup_address1 =  (sc_lv<14>) (tmp_13_3_i_i_fu_340_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        voltagesBackup_address1 =  (sc_lv<14>) (tmp_13_1_i_i_fu_331_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        voltagesBackup_address1 =  (sc_lv<14>) (tmp_8_i_i_fu_291_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        voltagesBackup_address1 =  (sc_lv<14>) (tmp_6_i_i_fu_282_p1.read());
    } else {
        voltagesBackup_address1 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void writeV2calc::thread_voltagesBackup_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
          !(!esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(Vi_idx_V_data_V_00_status.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
  esl_seteq<1,1,1>(Vj_idx_V_data_V_00_status.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1)))))) {
        voltagesBackup_ce0 = ap_const_logic_1;
    } else {
        voltagesBackup_ce0 = ap_const_logic_0;
    }
}

void writeV2calc::thread_voltagesBackup_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
          !(!esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(Vi_idx_V_data_V_00_status.read(), ap_const_logic_0))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
  esl_seteq<1,1,1>(Vj_idx_V_data_V_00_status.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1)))))) {
        voltagesBackup_ce1 = ap_const_logic_1;
    } else {
        voltagesBackup_ce1 = ap_const_logic_0;
    }
}

void writeV2calc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_condition_190.read(), ap_const_boolean_1)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0) && !(!esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(Vi_idx_V_data_V_00_status.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((!esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0) && !(!esl_seteq<1,1,1>(tmp_3_i_i_fu_250_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(Vi_idx_V_data_V_00_status.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 16 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1)) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_fu_299_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1)) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_fu_299_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 32 : 
            if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_i_i_reg_412.read()) && 
  esl_seteq<1,1,1>(Vj_idx_V_data_V_00_status.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 64 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1)) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_condition_261.read(), ap_const_boolean_1)) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 128 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_241.read(), ap_const_boolean_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

}

