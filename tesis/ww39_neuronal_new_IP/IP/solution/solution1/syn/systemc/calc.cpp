// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "calc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic calc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic calc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> calc::ap_ST_fsm_state1 = "1";
const sc_lv<10> calc::ap_ST_fsm_state2 = "10";
const sc_lv<10> calc::ap_ST_fsm_state3 = "100";
const sc_lv<10> calc::ap_ST_fsm_state4 = "1000";
const sc_lv<10> calc::ap_ST_fsm_state5 = "10000";
const sc_lv<10> calc::ap_ST_fsm_state6 = "100000";
const sc_lv<10> calc::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> calc::ap_ST_fsm_pp0_stage0 = "10000000";
const sc_lv<10> calc::ap_ST_fsm_pp0_stage1 = "100000000";
const sc_lv<10> calc::ap_ST_fsm_state45 = "1000000000";
const sc_lv<32> calc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> calc::ap_const_lv1_1 = "1";
const bool calc::ap_const_boolean_1 = true;
const sc_lv<32> calc::ap_const_lv32_8 = "1000";
const sc_lv<1> calc::ap_const_lv1_0 = "0";
const sc_lv<32> calc::ap_const_lv32_7 = "111";
const sc_lv<32> calc::ap_const_lv32_6 = "110";
const sc_lv<56> calc::ap_const_lv56_0 = "00000000000000000000000000000000000000000000000000000000";
const sc_lv<32> calc::ap_const_lv32_BC23D70A = "10111100001000111101011100001010";
const sc_lv<2> calc::ap_const_lv2_0 = "00";
const sc_lv<56> calc::ap_const_lv56_1 = "1";
const sc_lv<32> calc::ap_const_lv32_9 = "1001";

calc::calc(sc_module_name name) : sc_module(name), mVcdFile(0) {
    GapJunctionIP_fsurcU_U119 = new GapJunctionIP_fsurcU<1,8,32,32,32>("GapJunctionIP_fsurcU_U119");
    GapJunctionIP_fsurcU_U119->clk(ap_clk);
    GapJunctionIP_fsurcU_U119->reset(ap_rst);
    GapJunctionIP_fsurcU_U119->din0(tmp_data_reg_322);
    GapJunctionIP_fsurcU_U119->din1(grp_fu_181_p1);
    GapJunctionIP_fsurcU_U119->ce(grp_fu_181_ce);
    GapJunctionIP_fsurcU_U119->dout(grp_fu_181_p2);
    GapJunctionIP_fsurcU_U120 = new GapJunctionIP_fsurcU<1,8,32,32,32>("GapJunctionIP_fsurcU_U120");
    GapJunctionIP_fsurcU_U120->clk(ap_clk);
    GapJunctionIP_fsurcU_U120->reset(ap_rst);
    GapJunctionIP_fsurcU_U120->din0(tmp_data_reg_322);
    GapJunctionIP_fsurcU_U120->din1(grp_fu_185_p1);
    GapJunctionIP_fsurcU_U120->ce(grp_fu_185_ce);
    GapJunctionIP_fsurcU_U120->dout(grp_fu_185_p2);
    GapJunctionIP_fmusc4_U121 = new GapJunctionIP_fmusc4<1,4,32,32,32>("GapJunctionIP_fmusc4_U121");
    GapJunctionIP_fmusc4_U121->clk(ap_clk);
    GapJunctionIP_fmusc4_U121->reset(ap_rst);
    GapJunctionIP_fmusc4_U121->din0(grp_fu_189_p0);
    GapJunctionIP_fmusc4_U121->din1(grp_fu_189_p1);
    GapJunctionIP_fmusc4_U121->ce(grp_fu_189_ce);
    GapJunctionIP_fmusc4_U121->dout(grp_fu_189_p2);
    GapJunctionIP_fmusc4_U122 = new GapJunctionIP_fmusc4<1,4,32,32,32>("GapJunctionIP_fmusc4_U122");
    GapJunctionIP_fmusc4_U122->clk(ap_clk);
    GapJunctionIP_fmusc4_U122->reset(ap_rst);
    GapJunctionIP_fmusc4_U122->din0(grp_fu_193_p0);
    GapJunctionIP_fmusc4_U122->din1(grp_fu_193_p1);
    GapJunctionIP_fmusc4_U122->ce(grp_fu_193_ce);
    GapJunctionIP_fmusc4_U122->dout(grp_fu_193_p2);
    GapJunctionIP_fmusc4_U123 = new GapJunctionIP_fmusc4<1,4,32,32,32>("GapJunctionIP_fmusc4_U123");
    GapJunctionIP_fmusc4_U123->clk(ap_clk);
    GapJunctionIP_fmusc4_U123->reset(ap_rst);
    GapJunctionIP_fmusc4_U123->din0(grp_fu_197_p0);
    GapJunctionIP_fmusc4_U123->din1(ap_var_for_const0);
    GapJunctionIP_fmusc4_U123->ce(grp_fu_197_ce);
    GapJunctionIP_fmusc4_U123->dout(grp_fu_197_p2);
    GapJunctionIP_fmusc4_U124 = new GapJunctionIP_fmusc4<1,4,32,32,32>("GapJunctionIP_fmusc4_U124");
    GapJunctionIP_fmusc4_U124->clk(ap_clk);
    GapJunctionIP_fmusc4_U124->reset(ap_rst);
    GapJunctionIP_fmusc4_U124->din0(grp_fu_202_p0);
    GapJunctionIP_fmusc4_U124->din1(ap_var_for_const0);
    GapJunctionIP_fmusc4_U124->ce(grp_fu_202_ce);
    GapJunctionIP_fmusc4_U124->dout(grp_fu_202_p2);
    GapJunctionIP_fmusc4_U125 = new GapJunctionIP_fmusc4<1,4,32,32,32>("GapJunctionIP_fmusc4_U125");
    GapJunctionIP_fmusc4_U125->clk(ap_clk);
    GapJunctionIP_fmusc4_U125->reset(ap_rst);
    GapJunctionIP_fmusc4_U125->din0(grp_fu_207_p0);
    GapJunctionIP_fmusc4_U125->din1(grp_fu_207_p1);
    GapJunctionIP_fmusc4_U125->ce(grp_fu_207_ce);
    GapJunctionIP_fmusc4_U125->dout(grp_fu_207_p2);
    GapJunctionIP_fmusc4_U126 = new GapJunctionIP_fmusc4<1,4,32,32,32>("GapJunctionIP_fmusc4_U126");
    GapJunctionIP_fmusc4_U126->clk(ap_clk);
    GapJunctionIP_fmusc4_U126->reset(ap_rst);
    GapJunctionIP_fmusc4_U126->din0(grp_fu_211_p0);
    GapJunctionIP_fmusc4_U126->din1(grp_fu_211_p1);
    GapJunctionIP_fmusc4_U126->ce(grp_fu_211_ce);
    GapJunctionIP_fmusc4_U126->dout(grp_fu_211_p2);
    GapJunctionIP_fextde_U127 = new GapJunctionIP_fextde<1,13,32,32,32>("GapJunctionIP_fextde_U127");
    GapJunctionIP_fextde_U127->clk(ap_clk);
    GapJunctionIP_fextde_U127->reset(ap_rst);
    GapJunctionIP_fextde_U127->din0(ap_var_for_const1);
    GapJunctionIP_fextde_U127->din1(grp_fu_215_p1);
    GapJunctionIP_fextde_U127->ce(grp_fu_215_ce);
    GapJunctionIP_fextde_U127->dout(grp_fu_215_p2);
    GapJunctionIP_fextde_U128 = new GapJunctionIP_fextde<1,13,32,32,32>("GapJunctionIP_fextde_U128");
    GapJunctionIP_fextde_U128->clk(ap_clk);
    GapJunctionIP_fextde_U128->reset(ap_rst);
    GapJunctionIP_fextde_U128->din0(ap_var_for_const1);
    GapJunctionIP_fextde_U128->din1(grp_fu_220_p1);
    GapJunctionIP_fextde_U128->ce(grp_fu_220_ce);
    GapJunctionIP_fextde_U128->dout(grp_fu_220_p2);
    GapJunctionIP_muludo_U129 = new GapJunctionIP_muludo<1,7,27,29,56>("GapJunctionIP_muludo_U129");
    GapJunctionIP_muludo_U129->clk(ap_clk);
    GapJunctionIP_muludo_U129->reset(ap_rst);
    GapJunctionIP_muludo_U129->din0(grp_fu_241_p0);
    GapJunctionIP_muludo_U129->din1(grp_fu_241_p1);
    GapJunctionIP_muludo_U129->ce(grp_fu_241_ce);
    GapJunctionIP_muludo_U129->dout(grp_fu_241_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_F_V_data_01_status);
    sensitive << ( F_V_data_0_full_n );
    sensitive << ( F_V_data_1_full_n );
    sensitive << ( F_V_data_2_full_n );
    sensitive << ( F_V_data_3_full_n );

    SC_METHOD(thread_F_V_data_01_update);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 );
    sensitive << ( ap_condition_188 );

    SC_METHOD(thread_F_V_data_0_blk_n);
    sensitive << ( F_V_data_0_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 );

    SC_METHOD(thread_F_V_data_0_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 );
    sensitive << ( ap_condition_188 );
    sensitive << ( tmp_data_0_reg_420 );

    SC_METHOD(thread_F_V_data_0_write);
    sensitive << ( F_V_data_01_update );

    SC_METHOD(thread_F_V_data_1_blk_n);
    sensitive << ( F_V_data_1_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 );

    SC_METHOD(thread_F_V_data_1_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 );
    sensitive << ( ap_condition_188 );
    sensitive << ( tmp_data_1_reg_425 );

    SC_METHOD(thread_F_V_data_1_write);
    sensitive << ( F_V_data_01_update );

    SC_METHOD(thread_F_V_data_2_blk_n);
    sensitive << ( F_V_data_2_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 );

    SC_METHOD(thread_F_V_data_2_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 );
    sensitive << ( ap_condition_188 );
    sensitive << ( tmp_data_2_reg_430 );

    SC_METHOD(thread_F_V_data_2_write);
    sensitive << ( F_V_data_01_update );

    SC_METHOD(thread_F_V_data_3_blk_n);
    sensitive << ( F_V_data_3_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 );

    SC_METHOD(thread_F_V_data_3_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 );
    sensitive << ( ap_condition_188 );
    sensitive << ( tmp_data_3_reg_435 );

    SC_METHOD(thread_F_V_data_3_write);
    sensitive << ( F_V_data_01_update );

    SC_METHOD(thread_V_V_data_01_status);
    sensitive << ( V_V_data_0_full_n );
    sensitive << ( V_V_data_1_full_n );
    sensitive << ( V_V_data_2_full_n );
    sensitive << ( V_V_data_3_full_n );

    SC_METHOD(thread_V_V_data_01_update);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 );
    sensitive << ( ap_condition_188 );

    SC_METHOD(thread_V_V_data_0_blk_n);
    sensitive << ( V_V_data_0_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 );

    SC_METHOD(thread_V_V_data_0_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 );
    sensitive << ( ap_condition_188 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_tmp_data_0_3_reg_328 );

    SC_METHOD(thread_V_V_data_0_write);
    sensitive << ( V_V_data_01_update );

    SC_METHOD(thread_V_V_data_1_blk_n);
    sensitive << ( V_V_data_1_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 );

    SC_METHOD(thread_V_V_data_1_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 );
    sensitive << ( ap_condition_188 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_tmp_data_1_3_reg_336 );

    SC_METHOD(thread_V_V_data_1_write);
    sensitive << ( V_V_data_01_update );

    SC_METHOD(thread_V_V_data_2_blk_n);
    sensitive << ( V_V_data_2_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 );

    SC_METHOD(thread_V_V_data_2_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 );
    sensitive << ( ap_condition_188 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_tmp_data_2_3_reg_344 );

    SC_METHOD(thread_V_V_data_2_write);
    sensitive << ( V_V_data_01_update );

    SC_METHOD(thread_V_V_data_3_blk_n);
    sensitive << ( V_V_data_3_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 );

    SC_METHOD(thread_V_V_data_3_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 );
    sensitive << ( ap_condition_188 );
    sensitive << ( ap_pipeline_reg_pp0_iter17_tmp_data_3_3_reg_352 );

    SC_METHOD(thread_V_V_data_3_write);
    sensitive << ( V_V_data_01_update );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_condition_165);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( simConfig_rowsToSimulate_V_empty_n );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );
    sensitive << ( simConfig_rowsToSimulate_V_out_full_n );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_out_full_n );

    SC_METHOD(thread_ap_condition_188);
    sensitive << ( ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 );
    sensitive << ( V_V_data_01_status );
    sensitive << ( F_V_data_01_status );

    SC_METHOD(thread_ap_condition_224);
    sensitive << ( exitcond_flatten_reg_293 );
    sensitive << ( processedData_V_data0_status );
    sensitive << ( fixedData_V_data0_status );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_exitcond_flatten_fu_247_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( bound_reg_288 );
    sensitive << ( ap_condition_188 );
    sensitive << ( indvar_flatten_phi_fu_174_p4 );

    SC_METHOD(thread_fixedData_V_data0_status);
    sensitive << ( fixedData_V_data_empty_n );
    sensitive << ( fixedData_V_tlast_V_empty_n );

    SC_METHOD(thread_fixedData_V_data0_update);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_293 );
    sensitive << ( ap_condition_224 );

    SC_METHOD(thread_fixedData_V_data_blk_n);
    sensitive << ( fixedData_V_data_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_293 );

    SC_METHOD(thread_fixedData_V_data_read);
    sensitive << ( fixedData_V_data0_update );

    SC_METHOD(thread_fixedData_V_tlast_V_blk_n);
    sensitive << ( fixedData_V_tlast_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_293 );

    SC_METHOD(thread_fixedData_V_tlast_V_read);
    sensitive << ( fixedData_V_data0_update );

    SC_METHOD(thread_grp_fu_181_ce);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_condition_188 );
    sensitive << ( ap_condition_224 );

    SC_METHOD(thread_grp_fu_181_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_data_0_2_reg_302 );
    sensitive << ( tmp_data_2_2_reg_312 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_grp_fu_185_ce);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_condition_188 );
    sensitive << ( ap_condition_224 );

    SC_METHOD(thread_grp_fu_185_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_data_1_2_reg_307 );
    sensitive << ( tmp_data_3_2_reg_317 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_grp_fu_189_ce);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_condition_188 );
    sensitive << ( ap_condition_224 );

    SC_METHOD(thread_grp_fu_189_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_data_0_3_reg_328 );
    sensitive << ( tmp_data_2_3_reg_344 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_grp_fu_189_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_data_0_3_reg_328 );
    sensitive << ( tmp_data_2_3_reg_344 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_grp_fu_193_ce);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_condition_188 );
    sensitive << ( ap_condition_224 );

    SC_METHOD(thread_grp_fu_193_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_data_1_3_reg_336 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_data_3_3_reg_352 );

    SC_METHOD(thread_grp_fu_193_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_data_1_3_reg_336 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_data_3_3_reg_352 );

    SC_METHOD(thread_grp_fu_197_ce);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_condition_188 );
    sensitive << ( ap_condition_224 );

    SC_METHOD(thread_grp_fu_197_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_60_i_i_i_reg_360 );
    sensitive << ( tmp_60_2_i_i_i_reg_370 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_grp_fu_202_ce);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_condition_188 );
    sensitive << ( ap_condition_224 );

    SC_METHOD(thread_grp_fu_202_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_60_1_i_i_i_reg_365 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( tmp_60_3_i_i_i_reg_375 );

    SC_METHOD(thread_grp_fu_207_ce);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_condition_188 );
    sensitive << ( ap_condition_224 );

    SC_METHOD(thread_grp_fu_207_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_62_i_i_i_reg_400 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( tmp_62_2_i_i_i_reg_410 );
    sensitive << ( ap_enable_reg_pp0_iter16 );

    SC_METHOD(thread_grp_fu_207_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_pipeline_reg_pp0_iter14_tmp_data_0_3_reg_328 );
    sensitive << ( ap_pipeline_reg_pp0_iter15_tmp_data_2_3_reg_344 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_enable_reg_pp0_iter16 );

    SC_METHOD(thread_grp_fu_211_ce);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_condition_188 );
    sensitive << ( ap_condition_224 );

    SC_METHOD(thread_grp_fu_211_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( tmp_62_1_i_i_i_reg_405 );
    sensitive << ( tmp_62_3_i_i_i_reg_415 );
    sensitive << ( ap_enable_reg_pp0_iter16 );

    SC_METHOD(thread_grp_fu_211_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_pipeline_reg_pp0_iter14_tmp_data_1_3_reg_336 );
    sensitive << ( ap_pipeline_reg_pp0_iter15_tmp_data_3_3_reg_352 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_enable_reg_pp0_iter16 );

    SC_METHOD(thread_grp_fu_215_ce);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_condition_188 );
    sensitive << ( ap_condition_224 );

    SC_METHOD(thread_grp_fu_215_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_61_i_i_i_reg_380 );
    sensitive << ( tmp_61_2_i_i_i_reg_390 );
    sensitive << ( ap_enable_reg_pp0_iter9 );

    SC_METHOD(thread_grp_fu_220_ce);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_condition_188 );
    sensitive << ( ap_condition_224 );

    SC_METHOD(thread_grp_fu_220_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_61_1_i_i_i_reg_385 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( tmp_61_3_i_i_i_reg_395 );

    SC_METHOD(thread_grp_fu_241_ce);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_condition_165 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_grp_fu_241_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_fu_241_p00 );

    SC_METHOD(thread_grp_fu_241_p00);
    sensitive << ( simConfig_rowsToSimulate_V_dout );

    SC_METHOD(thread_grp_fu_241_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_fu_241_p10 );

    SC_METHOD(thread_grp_fu_241_p10);
    sensitive << ( r_V_fu_225_p3 );

    SC_METHOD(thread_indvar_flatten_next_fu_252_p2);
    sensitive << ( indvar_flatten_phi_fu_174_p4 );

    SC_METHOD(thread_indvar_flatten_phi_fu_174_p4);
    sensitive << ( exitcond_flatten_reg_293 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_170 );
    sensitive << ( indvar_flatten_next_reg_297 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_processedData_V_data0_status);
    sensitive << ( processedData_V_data_empty_n );
    sensitive << ( processedData_V_data_1_empty_n );
    sensitive << ( processedData_V_data_2_empty_n );
    sensitive << ( processedData_V_data_3_empty_n );

    SC_METHOD(thread_processedData_V_data0_update);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_293 );
    sensitive << ( ap_condition_224 );

    SC_METHOD(thread_processedData_V_data_1_blk_n);
    sensitive << ( processedData_V_data_1_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_293 );

    SC_METHOD(thread_processedData_V_data_1_read);
    sensitive << ( processedData_V_data0_update );

    SC_METHOD(thread_processedData_V_data_2_blk_n);
    sensitive << ( processedData_V_data_2_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_293 );

    SC_METHOD(thread_processedData_V_data_2_read);
    sensitive << ( processedData_V_data0_update );

    SC_METHOD(thread_processedData_V_data_3_blk_n);
    sensitive << ( processedData_V_data_3_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_293 );

    SC_METHOD(thread_processedData_V_data_3_read);
    sensitive << ( processedData_V_data0_update );

    SC_METHOD(thread_processedData_V_data_blk_n);
    sensitive << ( processedData_V_data_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_293 );

    SC_METHOD(thread_processedData_V_data_read);
    sensitive << ( processedData_V_data0_update );

    SC_METHOD(thread_r_V_fu_225_p3);
    sensitive << ( simConfig_BLOCK_NUMBERS_V_dout );

    SC_METHOD(thread_simConfig_BLOCK_NUMBERS_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_empty_n );

    SC_METHOD(thread_simConfig_BLOCK_NUMBERS_V_out_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_out_full_n );

    SC_METHOD(thread_simConfig_BLOCK_NUMBERS_V_out_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_BLOCK_NUMBERS_V_dout );
    sensitive << ( ap_condition_165 );

    SC_METHOD(thread_simConfig_BLOCK_NUMBERS_V_out_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_165 );

    SC_METHOD(thread_simConfig_BLOCK_NUMBERS_V_read);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_165 );

    SC_METHOD(thread_simConfig_rowsToSimulate_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_rowsToSimulate_V_empty_n );

    SC_METHOD(thread_simConfig_rowsToSimulate_V_out_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_rowsToSimulate_V_out_full_n );

    SC_METHOD(thread_simConfig_rowsToSimulate_V_out_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( simConfig_rowsToSimulate_V_dout );
    sensitive << ( ap_condition_165 );

    SC_METHOD(thread_simConfig_rowsToSimulate_V_out_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_165 );

    SC_METHOD(thread_simConfig_rowsToSimulate_V_read);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_condition_165 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_condition_165 );
    sensitive << ( exitcond_flatten_fu_247_p2 );
    sensitive << ( ap_condition_188 );
    sensitive << ( ap_condition_224 );
    sensitive << ( ap_enable_reg_pp0_iter17 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const0);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter18 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter15 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter17 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter14 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter16 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "calc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, simConfig_rowsToSimulate_V_dout, "(port)simConfig_rowsToSimulate_V_dout");
    sc_trace(mVcdFile, simConfig_rowsToSimulate_V_empty_n, "(port)simConfig_rowsToSimulate_V_empty_n");
    sc_trace(mVcdFile, simConfig_rowsToSimulate_V_read, "(port)simConfig_rowsToSimulate_V_read");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_dout, "(port)simConfig_BLOCK_NUMBERS_V_dout");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_empty_n, "(port)simConfig_BLOCK_NUMBERS_V_empty_n");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_read, "(port)simConfig_BLOCK_NUMBERS_V_read");
    sc_trace(mVcdFile, simConfig_rowsToSimulate_V_out_din, "(port)simConfig_rowsToSimulate_V_out_din");
    sc_trace(mVcdFile, simConfig_rowsToSimulate_V_out_full_n, "(port)simConfig_rowsToSimulate_V_out_full_n");
    sc_trace(mVcdFile, simConfig_rowsToSimulate_V_out_write, "(port)simConfig_rowsToSimulate_V_out_write");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_out_din, "(port)simConfig_BLOCK_NUMBERS_V_out_din");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_out_full_n, "(port)simConfig_BLOCK_NUMBERS_V_out_full_n");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_out_write, "(port)simConfig_BLOCK_NUMBERS_V_out_write");
    sc_trace(mVcdFile, processedData_V_data_dout, "(port)processedData_V_data_dout");
    sc_trace(mVcdFile, processedData_V_data_empty_n, "(port)processedData_V_data_empty_n");
    sc_trace(mVcdFile, processedData_V_data_read, "(port)processedData_V_data_read");
    sc_trace(mVcdFile, processedData_V_data_1_dout, "(port)processedData_V_data_1_dout");
    sc_trace(mVcdFile, processedData_V_data_1_empty_n, "(port)processedData_V_data_1_empty_n");
    sc_trace(mVcdFile, processedData_V_data_1_read, "(port)processedData_V_data_1_read");
    sc_trace(mVcdFile, processedData_V_data_2_dout, "(port)processedData_V_data_2_dout");
    sc_trace(mVcdFile, processedData_V_data_2_empty_n, "(port)processedData_V_data_2_empty_n");
    sc_trace(mVcdFile, processedData_V_data_2_read, "(port)processedData_V_data_2_read");
    sc_trace(mVcdFile, processedData_V_data_3_dout, "(port)processedData_V_data_3_dout");
    sc_trace(mVcdFile, processedData_V_data_3_empty_n, "(port)processedData_V_data_3_empty_n");
    sc_trace(mVcdFile, processedData_V_data_3_read, "(port)processedData_V_data_3_read");
    sc_trace(mVcdFile, fixedData_V_data_dout, "(port)fixedData_V_data_dout");
    sc_trace(mVcdFile, fixedData_V_data_empty_n, "(port)fixedData_V_data_empty_n");
    sc_trace(mVcdFile, fixedData_V_data_read, "(port)fixedData_V_data_read");
    sc_trace(mVcdFile, fixedData_V_tlast_V_dout, "(port)fixedData_V_tlast_V_dout");
    sc_trace(mVcdFile, fixedData_V_tlast_V_empty_n, "(port)fixedData_V_tlast_V_empty_n");
    sc_trace(mVcdFile, fixedData_V_tlast_V_read, "(port)fixedData_V_tlast_V_read");
    sc_trace(mVcdFile, V_V_data_0_din, "(port)V_V_data_0_din");
    sc_trace(mVcdFile, V_V_data_0_full_n, "(port)V_V_data_0_full_n");
    sc_trace(mVcdFile, V_V_data_0_write, "(port)V_V_data_0_write");
    sc_trace(mVcdFile, V_V_data_1_din, "(port)V_V_data_1_din");
    sc_trace(mVcdFile, V_V_data_1_full_n, "(port)V_V_data_1_full_n");
    sc_trace(mVcdFile, V_V_data_1_write, "(port)V_V_data_1_write");
    sc_trace(mVcdFile, V_V_data_2_din, "(port)V_V_data_2_din");
    sc_trace(mVcdFile, V_V_data_2_full_n, "(port)V_V_data_2_full_n");
    sc_trace(mVcdFile, V_V_data_2_write, "(port)V_V_data_2_write");
    sc_trace(mVcdFile, V_V_data_3_din, "(port)V_V_data_3_din");
    sc_trace(mVcdFile, V_V_data_3_full_n, "(port)V_V_data_3_full_n");
    sc_trace(mVcdFile, V_V_data_3_write, "(port)V_V_data_3_write");
    sc_trace(mVcdFile, F_V_data_0_din, "(port)F_V_data_0_din");
    sc_trace(mVcdFile, F_V_data_0_full_n, "(port)F_V_data_0_full_n");
    sc_trace(mVcdFile, F_V_data_0_write, "(port)F_V_data_0_write");
    sc_trace(mVcdFile, F_V_data_1_din, "(port)F_V_data_1_din");
    sc_trace(mVcdFile, F_V_data_1_full_n, "(port)F_V_data_1_full_n");
    sc_trace(mVcdFile, F_V_data_1_write, "(port)F_V_data_1_write");
    sc_trace(mVcdFile, F_V_data_2_din, "(port)F_V_data_2_din");
    sc_trace(mVcdFile, F_V_data_2_full_n, "(port)F_V_data_2_full_n");
    sc_trace(mVcdFile, F_V_data_2_write, "(port)F_V_data_2_write");
    sc_trace(mVcdFile, F_V_data_3_din, "(port)F_V_data_3_din");
    sc_trace(mVcdFile, F_V_data_3_full_n, "(port)F_V_data_3_full_n");
    sc_trace(mVcdFile, F_V_data_3_write, "(port)F_V_data_3_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, simConfig_rowsToSimulate_V_blk_n, "simConfig_rowsToSimulate_V_blk_n");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_blk_n, "simConfig_BLOCK_NUMBERS_V_blk_n");
    sc_trace(mVcdFile, simConfig_rowsToSimulate_V_out_blk_n, "simConfig_rowsToSimulate_V_out_blk_n");
    sc_trace(mVcdFile, simConfig_BLOCK_NUMBERS_V_out_blk_n, "simConfig_BLOCK_NUMBERS_V_out_blk_n");
    sc_trace(mVcdFile, processedData_V_data_blk_n, "processedData_V_data_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, exitcond_flatten_reg_293, "exitcond_flatten_reg_293");
    sc_trace(mVcdFile, processedData_V_data_1_blk_n, "processedData_V_data_1_blk_n");
    sc_trace(mVcdFile, processedData_V_data_2_blk_n, "processedData_V_data_2_blk_n");
    sc_trace(mVcdFile, processedData_V_data_3_blk_n, "processedData_V_data_3_blk_n");
    sc_trace(mVcdFile, fixedData_V_data_blk_n, "fixedData_V_data_blk_n");
    sc_trace(mVcdFile, fixedData_V_tlast_V_blk_n, "fixedData_V_tlast_V_blk_n");
    sc_trace(mVcdFile, V_V_data_0_blk_n, "V_V_data_0_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter18, "ap_enable_reg_pp0_iter18");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293, "ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293");
    sc_trace(mVcdFile, V_V_data_1_blk_n, "V_V_data_1_blk_n");
    sc_trace(mVcdFile, V_V_data_2_blk_n, "V_V_data_2_blk_n");
    sc_trace(mVcdFile, V_V_data_3_blk_n, "V_V_data_3_blk_n");
    sc_trace(mVcdFile, F_V_data_0_blk_n, "F_V_data_0_blk_n");
    sc_trace(mVcdFile, F_V_data_1_blk_n, "F_V_data_1_blk_n");
    sc_trace(mVcdFile, F_V_data_2_blk_n, "F_V_data_2_blk_n");
    sc_trace(mVcdFile, F_V_data_3_blk_n, "F_V_data_3_blk_n");
    sc_trace(mVcdFile, indvar_flatten_reg_170, "indvar_flatten_reg_170");
    sc_trace(mVcdFile, ap_condition_165, "ap_condition_165");
    sc_trace(mVcdFile, grp_fu_241_p2, "grp_fu_241_p2");
    sc_trace(mVcdFile, bound_reg_288, "bound_reg_288");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, exitcond_flatten_fu_247_p2, "exitcond_flatten_fu_247_p2");
    sc_trace(mVcdFile, V_V_data_01_status, "V_V_data_01_status");
    sc_trace(mVcdFile, F_V_data_01_status, "F_V_data_01_status");
    sc_trace(mVcdFile, ap_condition_188, "ap_condition_188");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_293, "ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_293");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_293, "ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_293");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_293, "ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_293");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_293, "ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_293");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_293, "ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_293");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_293, "ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_293");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_293, "ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_293");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_293, "ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_293");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_293, "ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_293");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_293, "ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_293");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_293, "ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_293");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_293, "ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_293");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter13_exitcond_flatten_reg_293, "ap_pipeline_reg_pp0_iter13_exitcond_flatten_reg_293");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter14_exitcond_flatten_reg_293, "ap_pipeline_reg_pp0_iter14_exitcond_flatten_reg_293");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter15_exitcond_flatten_reg_293, "ap_pipeline_reg_pp0_iter15_exitcond_flatten_reg_293");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter16_exitcond_flatten_reg_293, "ap_pipeline_reg_pp0_iter16_exitcond_flatten_reg_293");
    sc_trace(mVcdFile, indvar_flatten_next_fu_252_p2, "indvar_flatten_next_fu_252_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_297, "indvar_flatten_next_reg_297");
    sc_trace(mVcdFile, tmp_data_0_2_reg_302, "tmp_data_0_2_reg_302");
    sc_trace(mVcdFile, processedData_V_data0_status, "processedData_V_data0_status");
    sc_trace(mVcdFile, fixedData_V_data0_status, "fixedData_V_data0_status");
    sc_trace(mVcdFile, ap_condition_224, "ap_condition_224");
    sc_trace(mVcdFile, tmp_data_1_2_reg_307, "tmp_data_1_2_reg_307");
    sc_trace(mVcdFile, tmp_data_2_2_reg_312, "tmp_data_2_2_reg_312");
    sc_trace(mVcdFile, tmp_data_3_2_reg_317, "tmp_data_3_2_reg_317");
    sc_trace(mVcdFile, tmp_data_reg_322, "tmp_data_reg_322");
    sc_trace(mVcdFile, grp_fu_181_p2, "grp_fu_181_p2");
    sc_trace(mVcdFile, tmp_data_0_3_reg_328, "tmp_data_0_3_reg_328");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter5_tmp_data_0_3_reg_328, "ap_pipeline_reg_pp0_iter5_tmp_data_0_3_reg_328");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter6_tmp_data_0_3_reg_328, "ap_pipeline_reg_pp0_iter6_tmp_data_0_3_reg_328");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter7_tmp_data_0_3_reg_328, "ap_pipeline_reg_pp0_iter7_tmp_data_0_3_reg_328");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter8_tmp_data_0_3_reg_328, "ap_pipeline_reg_pp0_iter8_tmp_data_0_3_reg_328");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter9_tmp_data_0_3_reg_328, "ap_pipeline_reg_pp0_iter9_tmp_data_0_3_reg_328");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter10_tmp_data_0_3_reg_328, "ap_pipeline_reg_pp0_iter10_tmp_data_0_3_reg_328");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter11_tmp_data_0_3_reg_328, "ap_pipeline_reg_pp0_iter11_tmp_data_0_3_reg_328");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter12_tmp_data_0_3_reg_328, "ap_pipeline_reg_pp0_iter12_tmp_data_0_3_reg_328");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter13_tmp_data_0_3_reg_328, "ap_pipeline_reg_pp0_iter13_tmp_data_0_3_reg_328");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter14_tmp_data_0_3_reg_328, "ap_pipeline_reg_pp0_iter14_tmp_data_0_3_reg_328");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter15_tmp_data_0_3_reg_328, "ap_pipeline_reg_pp0_iter15_tmp_data_0_3_reg_328");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter16_tmp_data_0_3_reg_328, "ap_pipeline_reg_pp0_iter16_tmp_data_0_3_reg_328");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter17_tmp_data_0_3_reg_328, "ap_pipeline_reg_pp0_iter17_tmp_data_0_3_reg_328");
    sc_trace(mVcdFile, grp_fu_185_p2, "grp_fu_185_p2");
    sc_trace(mVcdFile, tmp_data_1_3_reg_336, "tmp_data_1_3_reg_336");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter5_tmp_data_1_3_reg_336, "ap_pipeline_reg_pp0_iter5_tmp_data_1_3_reg_336");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter6_tmp_data_1_3_reg_336, "ap_pipeline_reg_pp0_iter6_tmp_data_1_3_reg_336");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter7_tmp_data_1_3_reg_336, "ap_pipeline_reg_pp0_iter7_tmp_data_1_3_reg_336");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter8_tmp_data_1_3_reg_336, "ap_pipeline_reg_pp0_iter8_tmp_data_1_3_reg_336");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter9_tmp_data_1_3_reg_336, "ap_pipeline_reg_pp0_iter9_tmp_data_1_3_reg_336");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter10_tmp_data_1_3_reg_336, "ap_pipeline_reg_pp0_iter10_tmp_data_1_3_reg_336");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter11_tmp_data_1_3_reg_336, "ap_pipeline_reg_pp0_iter11_tmp_data_1_3_reg_336");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter12_tmp_data_1_3_reg_336, "ap_pipeline_reg_pp0_iter12_tmp_data_1_3_reg_336");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter13_tmp_data_1_3_reg_336, "ap_pipeline_reg_pp0_iter13_tmp_data_1_3_reg_336");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter14_tmp_data_1_3_reg_336, "ap_pipeline_reg_pp0_iter14_tmp_data_1_3_reg_336");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter15_tmp_data_1_3_reg_336, "ap_pipeline_reg_pp0_iter15_tmp_data_1_3_reg_336");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter16_tmp_data_1_3_reg_336, "ap_pipeline_reg_pp0_iter16_tmp_data_1_3_reg_336");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter17_tmp_data_1_3_reg_336, "ap_pipeline_reg_pp0_iter17_tmp_data_1_3_reg_336");
    sc_trace(mVcdFile, tmp_data_2_3_reg_344, "tmp_data_2_3_reg_344");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter6_tmp_data_2_3_reg_344, "ap_pipeline_reg_pp0_iter6_tmp_data_2_3_reg_344");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter7_tmp_data_2_3_reg_344, "ap_pipeline_reg_pp0_iter7_tmp_data_2_3_reg_344");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter8_tmp_data_2_3_reg_344, "ap_pipeline_reg_pp0_iter8_tmp_data_2_3_reg_344");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter9_tmp_data_2_3_reg_344, "ap_pipeline_reg_pp0_iter9_tmp_data_2_3_reg_344");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter10_tmp_data_2_3_reg_344, "ap_pipeline_reg_pp0_iter10_tmp_data_2_3_reg_344");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter11_tmp_data_2_3_reg_344, "ap_pipeline_reg_pp0_iter11_tmp_data_2_3_reg_344");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter12_tmp_data_2_3_reg_344, "ap_pipeline_reg_pp0_iter12_tmp_data_2_3_reg_344");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter13_tmp_data_2_3_reg_344, "ap_pipeline_reg_pp0_iter13_tmp_data_2_3_reg_344");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter14_tmp_data_2_3_reg_344, "ap_pipeline_reg_pp0_iter14_tmp_data_2_3_reg_344");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter15_tmp_data_2_3_reg_344, "ap_pipeline_reg_pp0_iter15_tmp_data_2_3_reg_344");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter16_tmp_data_2_3_reg_344, "ap_pipeline_reg_pp0_iter16_tmp_data_2_3_reg_344");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter17_tmp_data_2_3_reg_344, "ap_pipeline_reg_pp0_iter17_tmp_data_2_3_reg_344");
    sc_trace(mVcdFile, tmp_data_3_3_reg_352, "tmp_data_3_3_reg_352");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter6_tmp_data_3_3_reg_352, "ap_pipeline_reg_pp0_iter6_tmp_data_3_3_reg_352");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter7_tmp_data_3_3_reg_352, "ap_pipeline_reg_pp0_iter7_tmp_data_3_3_reg_352");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter8_tmp_data_3_3_reg_352, "ap_pipeline_reg_pp0_iter8_tmp_data_3_3_reg_352");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter9_tmp_data_3_3_reg_352, "ap_pipeline_reg_pp0_iter9_tmp_data_3_3_reg_352");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter10_tmp_data_3_3_reg_352, "ap_pipeline_reg_pp0_iter10_tmp_data_3_3_reg_352");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter11_tmp_data_3_3_reg_352, "ap_pipeline_reg_pp0_iter11_tmp_data_3_3_reg_352");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter12_tmp_data_3_3_reg_352, "ap_pipeline_reg_pp0_iter12_tmp_data_3_3_reg_352");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter13_tmp_data_3_3_reg_352, "ap_pipeline_reg_pp0_iter13_tmp_data_3_3_reg_352");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter14_tmp_data_3_3_reg_352, "ap_pipeline_reg_pp0_iter14_tmp_data_3_3_reg_352");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter15_tmp_data_3_3_reg_352, "ap_pipeline_reg_pp0_iter15_tmp_data_3_3_reg_352");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter16_tmp_data_3_3_reg_352, "ap_pipeline_reg_pp0_iter16_tmp_data_3_3_reg_352");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter17_tmp_data_3_3_reg_352, "ap_pipeline_reg_pp0_iter17_tmp_data_3_3_reg_352");
    sc_trace(mVcdFile, grp_fu_189_p2, "grp_fu_189_p2");
    sc_trace(mVcdFile, tmp_60_i_i_i_reg_360, "tmp_60_i_i_i_reg_360");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, grp_fu_193_p2, "grp_fu_193_p2");
    sc_trace(mVcdFile, tmp_60_1_i_i_i_reg_365, "tmp_60_1_i_i_i_reg_365");
    sc_trace(mVcdFile, tmp_60_2_i_i_i_reg_370, "tmp_60_2_i_i_i_reg_370");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, tmp_60_3_i_i_i_reg_375, "tmp_60_3_i_i_i_reg_375");
    sc_trace(mVcdFile, grp_fu_197_p2, "grp_fu_197_p2");
    sc_trace(mVcdFile, tmp_61_i_i_i_reg_380, "tmp_61_i_i_i_reg_380");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, grp_fu_202_p2, "grp_fu_202_p2");
    sc_trace(mVcdFile, tmp_61_1_i_i_i_reg_385, "tmp_61_1_i_i_i_reg_385");
    sc_trace(mVcdFile, tmp_61_2_i_i_i_reg_390, "tmp_61_2_i_i_i_reg_390");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, tmp_61_3_i_i_i_reg_395, "tmp_61_3_i_i_i_reg_395");
    sc_trace(mVcdFile, grp_fu_215_p2, "grp_fu_215_p2");
    sc_trace(mVcdFile, tmp_62_i_i_i_reg_400, "tmp_62_i_i_i_reg_400");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter15, "ap_enable_reg_pp0_iter15");
    sc_trace(mVcdFile, grp_fu_220_p2, "grp_fu_220_p2");
    sc_trace(mVcdFile, tmp_62_1_i_i_i_reg_405, "tmp_62_1_i_i_i_reg_405");
    sc_trace(mVcdFile, tmp_62_2_i_i_i_reg_410, "tmp_62_2_i_i_i_reg_410");
    sc_trace(mVcdFile, tmp_62_3_i_i_i_reg_415, "tmp_62_3_i_i_i_reg_415");
    sc_trace(mVcdFile, grp_fu_207_p2, "grp_fu_207_p2");
    sc_trace(mVcdFile, tmp_data_0_reg_420, "tmp_data_0_reg_420");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter17, "ap_enable_reg_pp0_iter17");
    sc_trace(mVcdFile, grp_fu_211_p2, "grp_fu_211_p2");
    sc_trace(mVcdFile, tmp_data_1_reg_425, "tmp_data_1_reg_425");
    sc_trace(mVcdFile, tmp_data_2_reg_430, "tmp_data_2_reg_430");
    sc_trace(mVcdFile, tmp_data_3_reg_435, "tmp_data_3_reg_435");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter14, "ap_enable_reg_pp0_iter14");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter16, "ap_enable_reg_pp0_iter16");
    sc_trace(mVcdFile, indvar_flatten_phi_fu_174_p4, "indvar_flatten_phi_fu_174_p4");
    sc_trace(mVcdFile, processedData_V_data0_update, "processedData_V_data0_update");
    sc_trace(mVcdFile, fixedData_V_data0_update, "fixedData_V_data0_update");
    sc_trace(mVcdFile, V_V_data_01_update, "V_V_data_01_update");
    sc_trace(mVcdFile, F_V_data_01_update, "F_V_data_01_update");
    sc_trace(mVcdFile, grp_fu_181_p1, "grp_fu_181_p1");
    sc_trace(mVcdFile, grp_fu_185_p1, "grp_fu_185_p1");
    sc_trace(mVcdFile, grp_fu_189_p0, "grp_fu_189_p0");
    sc_trace(mVcdFile, grp_fu_189_p1, "grp_fu_189_p1");
    sc_trace(mVcdFile, grp_fu_193_p0, "grp_fu_193_p0");
    sc_trace(mVcdFile, grp_fu_193_p1, "grp_fu_193_p1");
    sc_trace(mVcdFile, grp_fu_197_p0, "grp_fu_197_p0");
    sc_trace(mVcdFile, grp_fu_202_p0, "grp_fu_202_p0");
    sc_trace(mVcdFile, grp_fu_207_p0, "grp_fu_207_p0");
    sc_trace(mVcdFile, grp_fu_207_p1, "grp_fu_207_p1");
    sc_trace(mVcdFile, grp_fu_211_p0, "grp_fu_211_p0");
    sc_trace(mVcdFile, grp_fu_211_p1, "grp_fu_211_p1");
    sc_trace(mVcdFile, grp_fu_215_p1, "grp_fu_215_p1");
    sc_trace(mVcdFile, grp_fu_220_p1, "grp_fu_220_p1");
    sc_trace(mVcdFile, r_V_fu_225_p3, "r_V_fu_225_p3");
    sc_trace(mVcdFile, grp_fu_241_p0, "grp_fu_241_p0");
    sc_trace(mVcdFile, grp_fu_241_p1, "grp_fu_241_p1");
    sc_trace(mVcdFile, grp_fu_181_ce, "grp_fu_181_ce");
    sc_trace(mVcdFile, grp_fu_185_ce, "grp_fu_185_ce");
    sc_trace(mVcdFile, grp_fu_189_ce, "grp_fu_189_ce");
    sc_trace(mVcdFile, grp_fu_193_ce, "grp_fu_193_ce");
    sc_trace(mVcdFile, grp_fu_197_ce, "grp_fu_197_ce");
    sc_trace(mVcdFile, grp_fu_202_ce, "grp_fu_202_ce");
    sc_trace(mVcdFile, grp_fu_207_ce, "grp_fu_207_ce");
    sc_trace(mVcdFile, grp_fu_211_ce, "grp_fu_211_ce");
    sc_trace(mVcdFile, grp_fu_215_ce, "grp_fu_215_ce");
    sc_trace(mVcdFile, grp_fu_220_ce, "grp_fu_220_ce");
    sc_trace(mVcdFile, grp_fu_241_ce, "grp_fu_241_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_241_p00, "grp_fu_241_p00");
    sc_trace(mVcdFile, grp_fu_241_p10, "grp_fu_241_p10");
#endif

    }
}

calc::~calc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete GapJunctionIP_fsurcU_U119;
    delete GapJunctionIP_fsurcU_U120;
    delete GapJunctionIP_fmusc4_U121;
    delete GapJunctionIP_fmusc4_U122;
    delete GapJunctionIP_fmusc4_U123;
    delete GapJunctionIP_fmusc4_U124;
    delete GapJunctionIP_fmusc4_U125;
    delete GapJunctionIP_fmusc4_U126;
    delete GapJunctionIP_fextde_U127;
    delete GapJunctionIP_fextde_U128;
    delete GapJunctionIP_muludo_U129;
}

void calc::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void calc::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_BC23D70A;
}

void calc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state45.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1)) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_247_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(exitcond_flatten_reg_293.read(), ap_const_lv1_0) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)) && 
                     !esl_seteq<1,1,1>(exitcond_flatten_reg_293.read(), ap_const_lv1_0)))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter14 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
            ap_enable_reg_pp0_iter14 = ap_enable_reg_pp0_iter13.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter15 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
            ap_enable_reg_pp0_iter15 = ap_enable_reg_pp0_iter14.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter16 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
            ap_enable_reg_pp0_iter16 = ap_enable_reg_pp0_iter15.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter17 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
            ap_enable_reg_pp0_iter17 = ap_enable_reg_pp0_iter16.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter18 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
            ap_enable_reg_pp0_iter18 = ap_enable_reg_pp0_iter17.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
            ap_enable_reg_pp0_iter18 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_293.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_reg_170 = indvar_flatten_next_reg_297.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        indvar_flatten_reg_170 = ap_const_lv56_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1)))) {
        ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_293 = ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_293.read();
        ap_pipeline_reg_pp0_iter10_tmp_data_2_3_reg_344 = ap_pipeline_reg_pp0_iter9_tmp_data_2_3_reg_344.read();
        ap_pipeline_reg_pp0_iter10_tmp_data_3_3_reg_352 = ap_pipeline_reg_pp0_iter9_tmp_data_3_3_reg_352.read();
        ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_293 = ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_293.read();
        ap_pipeline_reg_pp0_iter11_tmp_data_2_3_reg_344 = ap_pipeline_reg_pp0_iter10_tmp_data_2_3_reg_344.read();
        ap_pipeline_reg_pp0_iter11_tmp_data_3_3_reg_352 = ap_pipeline_reg_pp0_iter10_tmp_data_3_3_reg_352.read();
        ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_293 = ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_293.read();
        ap_pipeline_reg_pp0_iter12_tmp_data_2_3_reg_344 = ap_pipeline_reg_pp0_iter11_tmp_data_2_3_reg_344.read();
        ap_pipeline_reg_pp0_iter12_tmp_data_3_3_reg_352 = ap_pipeline_reg_pp0_iter11_tmp_data_3_3_reg_352.read();
        ap_pipeline_reg_pp0_iter13_exitcond_flatten_reg_293 = ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_293.read();
        ap_pipeline_reg_pp0_iter13_tmp_data_2_3_reg_344 = ap_pipeline_reg_pp0_iter12_tmp_data_2_3_reg_344.read();
        ap_pipeline_reg_pp0_iter13_tmp_data_3_3_reg_352 = ap_pipeline_reg_pp0_iter12_tmp_data_3_3_reg_352.read();
        ap_pipeline_reg_pp0_iter14_exitcond_flatten_reg_293 = ap_pipeline_reg_pp0_iter13_exitcond_flatten_reg_293.read();
        ap_pipeline_reg_pp0_iter14_tmp_data_2_3_reg_344 = ap_pipeline_reg_pp0_iter13_tmp_data_2_3_reg_344.read();
        ap_pipeline_reg_pp0_iter14_tmp_data_3_3_reg_352 = ap_pipeline_reg_pp0_iter13_tmp_data_3_3_reg_352.read();
        ap_pipeline_reg_pp0_iter15_exitcond_flatten_reg_293 = ap_pipeline_reg_pp0_iter14_exitcond_flatten_reg_293.read();
        ap_pipeline_reg_pp0_iter15_tmp_data_2_3_reg_344 = ap_pipeline_reg_pp0_iter14_tmp_data_2_3_reg_344.read();
        ap_pipeline_reg_pp0_iter15_tmp_data_3_3_reg_352 = ap_pipeline_reg_pp0_iter14_tmp_data_3_3_reg_352.read();
        ap_pipeline_reg_pp0_iter16_exitcond_flatten_reg_293 = ap_pipeline_reg_pp0_iter15_exitcond_flatten_reg_293.read();
        ap_pipeline_reg_pp0_iter16_tmp_data_2_3_reg_344 = ap_pipeline_reg_pp0_iter15_tmp_data_2_3_reg_344.read();
        ap_pipeline_reg_pp0_iter16_tmp_data_3_3_reg_352 = ap_pipeline_reg_pp0_iter15_tmp_data_3_3_reg_352.read();
        ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 = ap_pipeline_reg_pp0_iter16_exitcond_flatten_reg_293.read();
        ap_pipeline_reg_pp0_iter17_tmp_data_2_3_reg_344 = ap_pipeline_reg_pp0_iter16_tmp_data_2_3_reg_344.read();
        ap_pipeline_reg_pp0_iter17_tmp_data_3_3_reg_352 = ap_pipeline_reg_pp0_iter16_tmp_data_3_3_reg_352.read();
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_293 = exitcond_flatten_reg_293.read();
        ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_293 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_293.read();
        ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_293 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_293.read();
        ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_293 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_293.read();
        ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_293 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_293.read();
        ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_293 = ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_293.read();
        ap_pipeline_reg_pp0_iter6_tmp_data_2_3_reg_344 = tmp_data_2_3_reg_344.read();
        ap_pipeline_reg_pp0_iter6_tmp_data_3_3_reg_352 = tmp_data_3_3_reg_352.read();
        ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_293 = ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_293.read();
        ap_pipeline_reg_pp0_iter7_tmp_data_2_3_reg_344 = ap_pipeline_reg_pp0_iter6_tmp_data_2_3_reg_344.read();
        ap_pipeline_reg_pp0_iter7_tmp_data_3_3_reg_352 = ap_pipeline_reg_pp0_iter6_tmp_data_3_3_reg_352.read();
        ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_293 = ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_293.read();
        ap_pipeline_reg_pp0_iter8_tmp_data_2_3_reg_344 = ap_pipeline_reg_pp0_iter7_tmp_data_2_3_reg_344.read();
        ap_pipeline_reg_pp0_iter8_tmp_data_3_3_reg_352 = ap_pipeline_reg_pp0_iter7_tmp_data_3_3_reg_352.read();
        ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_293 = ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_293.read();
        ap_pipeline_reg_pp0_iter9_tmp_data_2_3_reg_344 = ap_pipeline_reg_pp0_iter8_tmp_data_2_3_reg_344.read();
        ap_pipeline_reg_pp0_iter9_tmp_data_3_3_reg_352 = ap_pipeline_reg_pp0_iter8_tmp_data_3_3_reg_352.read();
        exitcond_flatten_reg_293 = exitcond_flatten_fu_247_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
        ap_pipeline_reg_pp0_iter10_tmp_data_0_3_reg_328 = ap_pipeline_reg_pp0_iter9_tmp_data_0_3_reg_328.read();
        ap_pipeline_reg_pp0_iter10_tmp_data_1_3_reg_336 = ap_pipeline_reg_pp0_iter9_tmp_data_1_3_reg_336.read();
        ap_pipeline_reg_pp0_iter11_tmp_data_0_3_reg_328 = ap_pipeline_reg_pp0_iter10_tmp_data_0_3_reg_328.read();
        ap_pipeline_reg_pp0_iter11_tmp_data_1_3_reg_336 = ap_pipeline_reg_pp0_iter10_tmp_data_1_3_reg_336.read();
        ap_pipeline_reg_pp0_iter12_tmp_data_0_3_reg_328 = ap_pipeline_reg_pp0_iter11_tmp_data_0_3_reg_328.read();
        ap_pipeline_reg_pp0_iter12_tmp_data_1_3_reg_336 = ap_pipeline_reg_pp0_iter11_tmp_data_1_3_reg_336.read();
        ap_pipeline_reg_pp0_iter13_tmp_data_0_3_reg_328 = ap_pipeline_reg_pp0_iter12_tmp_data_0_3_reg_328.read();
        ap_pipeline_reg_pp0_iter13_tmp_data_1_3_reg_336 = ap_pipeline_reg_pp0_iter12_tmp_data_1_3_reg_336.read();
        ap_pipeline_reg_pp0_iter14_tmp_data_0_3_reg_328 = ap_pipeline_reg_pp0_iter13_tmp_data_0_3_reg_328.read();
        ap_pipeline_reg_pp0_iter14_tmp_data_1_3_reg_336 = ap_pipeline_reg_pp0_iter13_tmp_data_1_3_reg_336.read();
        ap_pipeline_reg_pp0_iter15_tmp_data_0_3_reg_328 = ap_pipeline_reg_pp0_iter14_tmp_data_0_3_reg_328.read();
        ap_pipeline_reg_pp0_iter15_tmp_data_1_3_reg_336 = ap_pipeline_reg_pp0_iter14_tmp_data_1_3_reg_336.read();
        ap_pipeline_reg_pp0_iter16_tmp_data_0_3_reg_328 = ap_pipeline_reg_pp0_iter15_tmp_data_0_3_reg_328.read();
        ap_pipeline_reg_pp0_iter16_tmp_data_1_3_reg_336 = ap_pipeline_reg_pp0_iter15_tmp_data_1_3_reg_336.read();
        ap_pipeline_reg_pp0_iter17_tmp_data_0_3_reg_328 = ap_pipeline_reg_pp0_iter16_tmp_data_0_3_reg_328.read();
        ap_pipeline_reg_pp0_iter17_tmp_data_1_3_reg_336 = ap_pipeline_reg_pp0_iter16_tmp_data_1_3_reg_336.read();
        ap_pipeline_reg_pp0_iter5_tmp_data_0_3_reg_328 = tmp_data_0_3_reg_328.read();
        ap_pipeline_reg_pp0_iter5_tmp_data_1_3_reg_336 = tmp_data_1_3_reg_336.read();
        ap_pipeline_reg_pp0_iter6_tmp_data_0_3_reg_328 = ap_pipeline_reg_pp0_iter5_tmp_data_0_3_reg_328.read();
        ap_pipeline_reg_pp0_iter6_tmp_data_1_3_reg_336 = ap_pipeline_reg_pp0_iter5_tmp_data_1_3_reg_336.read();
        ap_pipeline_reg_pp0_iter7_tmp_data_0_3_reg_328 = ap_pipeline_reg_pp0_iter6_tmp_data_0_3_reg_328.read();
        ap_pipeline_reg_pp0_iter7_tmp_data_1_3_reg_336 = ap_pipeline_reg_pp0_iter6_tmp_data_1_3_reg_336.read();
        ap_pipeline_reg_pp0_iter8_tmp_data_0_3_reg_328 = ap_pipeline_reg_pp0_iter7_tmp_data_0_3_reg_328.read();
        ap_pipeline_reg_pp0_iter8_tmp_data_1_3_reg_336 = ap_pipeline_reg_pp0_iter7_tmp_data_1_3_reg_336.read();
        ap_pipeline_reg_pp0_iter9_tmp_data_0_3_reg_328 = ap_pipeline_reg_pp0_iter8_tmp_data_0_3_reg_328.read();
        ap_pipeline_reg_pp0_iter9_tmp_data_1_3_reg_336 = ap_pipeline_reg_pp0_iter8_tmp_data_1_3_reg_336.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        bound_reg_288 = grp_fu_241_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1)))) {
        indvar_flatten_next_reg_297 = indvar_flatten_next_fu_252_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_293.read()))) {
        tmp_60_1_i_i_i_reg_365 = grp_fu_193_p2.read();
        tmp_60_i_i_i_reg_360 = grp_fu_189_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1)) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_293.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()))) {
        tmp_60_2_i_i_i_reg_370 = grp_fu_189_p2.read();
        tmp_60_3_i_i_i_reg_375 = grp_fu_193_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_293.read()))) {
        tmp_61_1_i_i_i_reg_385 = grp_fu_202_p2.read();
        tmp_61_i_i_i_reg_380 = grp_fu_197_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1)) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_293.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()))) {
        tmp_61_2_i_i_i_reg_390 = grp_fu_197_p2.read();
        tmp_61_3_i_i_i_reg_395 = grp_fu_202_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter15.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter14_exitcond_flatten_reg_293.read()))) {
        tmp_62_1_i_i_i_reg_405 = grp_fu_220_p2.read();
        tmp_62_i_i_i_reg_400 = grp_fu_215_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter15.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter15_exitcond_flatten_reg_293.read()))) {
        tmp_62_2_i_i_i_reg_410 = grp_fu_215_p2.read();
        tmp_62_3_i_i_i_reg_415 = grp_fu_220_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_293.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
        tmp_data_0_2_reg_302 = processedData_V_data_dout.read();
        tmp_data_1_2_reg_307 = processedData_V_data_1_dout.read();
        tmp_data_2_2_reg_312 = processedData_V_data_2_dout.read();
        tmp_data_3_2_reg_317 = processedData_V_data_3_dout.read();
        tmp_data_reg_322 = fixedData_V_data_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_293.read()))) {
        tmp_data_0_3_reg_328 = grp_fu_181_p2.read();
        tmp_data_1_3_reg_336 = grp_fu_185_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter17.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter16_exitcond_flatten_reg_293.read()))) {
        tmp_data_0_reg_420 = grp_fu_207_p2.read();
        tmp_data_1_reg_425 = grp_fu_211_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1)) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_293.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        tmp_data_2_3_reg_344 = grp_fu_181_p2.read();
        tmp_data_3_3_reg_352 = grp_fu_185_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter17.read()))) {
        tmp_data_2_reg_430 = grp_fu_207_p2.read();
        tmp_data_3_reg_435 = grp_fu_211_p2.read();
    }
}

void calc::thread_F_V_data_01_status() {
    F_V_data_01_status = (F_V_data_0_full_n.read() & F_V_data_1_full_n.read() & F_V_data_2_full_n.read() & F_V_data_3_full_n.read());
}

void calc::thread_F_V_data_01_update() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1)))) {
        F_V_data_01_update = ap_const_logic_1;
    } else {
        F_V_data_01_update = ap_const_logic_0;
    }
}

void calc::thread_F_V_data_0_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293.read()))) {
        F_V_data_0_blk_n = F_V_data_0_full_n.read();
    } else {
        F_V_data_0_blk_n = ap_const_logic_1;
    }
}

void calc::thread_F_V_data_0_din() {
    F_V_data_0_din = tmp_data_0_reg_420.read();
}

void calc::thread_F_V_data_0_write() {
    F_V_data_0_write = F_V_data_01_update.read();
}

void calc::thread_F_V_data_1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293.read()))) {
        F_V_data_1_blk_n = F_V_data_1_full_n.read();
    } else {
        F_V_data_1_blk_n = ap_const_logic_1;
    }
}

void calc::thread_F_V_data_1_din() {
    F_V_data_1_din = tmp_data_1_reg_425.read();
}

void calc::thread_F_V_data_1_write() {
    F_V_data_1_write = F_V_data_01_update.read();
}

void calc::thread_F_V_data_2_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293.read()))) {
        F_V_data_2_blk_n = F_V_data_2_full_n.read();
    } else {
        F_V_data_2_blk_n = ap_const_logic_1;
    }
}

void calc::thread_F_V_data_2_din() {
    F_V_data_2_din = tmp_data_2_reg_430.read();
}

void calc::thread_F_V_data_2_write() {
    F_V_data_2_write = F_V_data_01_update.read();
}

void calc::thread_F_V_data_3_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293.read()))) {
        F_V_data_3_blk_n = F_V_data_3_full_n.read();
    } else {
        F_V_data_3_blk_n = ap_const_logic_1;
    }
}

void calc::thread_F_V_data_3_din() {
    F_V_data_3_din = tmp_data_3_reg_435.read();
}

void calc::thread_F_V_data_3_write() {
    F_V_data_3_write = F_V_data_01_update.read();
}

void calc::thread_V_V_data_01_status() {
    V_V_data_01_status = (V_V_data_0_full_n.read() & V_V_data_1_full_n.read() & V_V_data_2_full_n.read() & V_V_data_3_full_n.read());
}

void calc::thread_V_V_data_01_update() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1)))) {
        V_V_data_01_update = ap_const_logic_1;
    } else {
        V_V_data_01_update = ap_const_logic_0;
    }
}

void calc::thread_V_V_data_0_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293.read()))) {
        V_V_data_0_blk_n = V_V_data_0_full_n.read();
    } else {
        V_V_data_0_blk_n = ap_const_logic_1;
    }
}

void calc::thread_V_V_data_0_din() {
    V_V_data_0_din = ap_pipeline_reg_pp0_iter17_tmp_data_0_3_reg_328.read();
}

void calc::thread_V_V_data_0_write() {
    V_V_data_0_write = V_V_data_01_update.read();
}

void calc::thread_V_V_data_1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293.read()))) {
        V_V_data_1_blk_n = V_V_data_1_full_n.read();
    } else {
        V_V_data_1_blk_n = ap_const_logic_1;
    }
}

void calc::thread_V_V_data_1_din() {
    V_V_data_1_din = ap_pipeline_reg_pp0_iter17_tmp_data_1_3_reg_336.read();
}

void calc::thread_V_V_data_1_write() {
    V_V_data_1_write = V_V_data_01_update.read();
}

void calc::thread_V_V_data_2_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293.read()))) {
        V_V_data_2_blk_n = V_V_data_2_full_n.read();
    } else {
        V_V_data_2_blk_n = ap_const_logic_1;
    }
}

void calc::thread_V_V_data_2_din() {
    V_V_data_2_din = ap_pipeline_reg_pp0_iter17_tmp_data_2_3_reg_344.read();
}

void calc::thread_V_V_data_2_write() {
    V_V_data_2_write = V_V_data_01_update.read();
}

void calc::thread_V_V_data_3_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293.read()))) {
        V_V_data_3_blk_n = V_V_data_3_full_n.read();
    } else {
        V_V_data_3_blk_n = ap_const_logic_1;
    }
}

void calc::thread_V_V_data_3_din() {
    V_V_data_3_din = ap_pipeline_reg_pp0_iter17_tmp_data_3_3_reg_352.read();
}

void calc::thread_V_V_data_3_write() {
    V_V_data_3_write = V_V_data_01_update.read();
}

void calc::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(7, 7);
}

void calc::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read().range(8, 8);
}

void calc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void calc::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read().range(9, 9);
}

void calc::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(6, 6);
}

void calc::thread_ap_condition_165() {
    ap_condition_165 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(simConfig_rowsToSimulate_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(simConfig_BLOCK_NUMBERS_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(simConfig_rowsToSimulate_V_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(simConfig_BLOCK_NUMBERS_V_out_full_n.read(), ap_const_logic_0));
}

void calc::thread_ap_condition_188() {
    ap_condition_188 = ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293.read()) && 
  esl_seteq<1,1,1>(V_V_data_01_status.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293.read()) && 
  esl_seteq<1,1,1>(F_V_data_01_status.read(), ap_const_logic_0)));
}

void calc::thread_ap_condition_224() {
    ap_condition_224 = ((esl_seteq<1,1,1>(exitcond_flatten_reg_293.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(processedData_V_data0_status.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_flatten_reg_293.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(fixedData_V_data0_status.read(), ap_const_logic_0)));
}

void calc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_done_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state45.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void calc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void calc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state45.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void calc::thread_exitcond_flatten_fu_247_p2() {
    exitcond_flatten_fu_247_p2 = (!indvar_flatten_phi_fu_174_p4.read().is_01() || !bound_reg_288.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_phi_fu_174_p4.read() == bound_reg_288.read());
}

void calc::thread_fixedData_V_data0_status() {
    fixedData_V_data0_status = (fixedData_V_data_empty_n.read() & fixedData_V_tlast_V_empty_n.read());
}

void calc::thread_fixedData_V_data0_update() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_293.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
        fixedData_V_data0_update = ap_const_logic_1;
    } else {
        fixedData_V_data0_update = ap_const_logic_0;
    }
}

void calc::thread_fixedData_V_data_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_293.read(), ap_const_lv1_0))) {
        fixedData_V_data_blk_n = fixedData_V_data_empty_n.read();
    } else {
        fixedData_V_data_blk_n = ap_const_logic_1;
    }
}

void calc::thread_fixedData_V_data_read() {
    fixedData_V_data_read = fixedData_V_data0_update.read();
}

void calc::thread_fixedData_V_tlast_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_293.read(), ap_const_lv1_0))) {
        fixedData_V_tlast_V_blk_n = fixedData_V_tlast_V_empty_n.read();
    } else {
        fixedData_V_tlast_V_blk_n = ap_const_logic_1;
    }
}

void calc::thread_fixedData_V_tlast_V_read() {
    fixedData_V_tlast_V_read = fixedData_V_data0_update.read();
}

void calc::thread_grp_fu_181_ce() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1))))) {
        grp_fu_181_ce = ap_const_logic_1;
    } else {
        grp_fu_181_ce = ap_const_logic_0;
    }
}

void calc::thread_grp_fu_181_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            grp_fu_181_p1 = tmp_data_2_2_reg_312.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            grp_fu_181_p1 = tmp_data_0_2_reg_302.read();
        } else {
            grp_fu_181_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_181_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void calc::thread_grp_fu_185_ce() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1))))) {
        grp_fu_185_ce = ap_const_logic_1;
    } else {
        grp_fu_185_ce = ap_const_logic_0;
    }
}

void calc::thread_grp_fu_185_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            grp_fu_185_p1 = tmp_data_3_2_reg_317.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            grp_fu_185_p1 = tmp_data_1_2_reg_307.read();
        } else {
            grp_fu_185_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_185_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void calc::thread_grp_fu_189_ce() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1))))) {
        grp_fu_189_ce = ap_const_logic_1;
    } else {
        grp_fu_189_ce = ap_const_logic_0;
    }
}

void calc::thread_grp_fu_189_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            grp_fu_189_p0 = tmp_data_2_3_reg_344.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            grp_fu_189_p0 = tmp_data_0_3_reg_328.read();
        } else {
            grp_fu_189_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_189_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void calc::thread_grp_fu_189_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            grp_fu_189_p1 = tmp_data_2_3_reg_344.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            grp_fu_189_p1 = tmp_data_0_3_reg_328.read();
        } else {
            grp_fu_189_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_189_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void calc::thread_grp_fu_193_ce() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1))))) {
        grp_fu_193_ce = ap_const_logic_1;
    } else {
        grp_fu_193_ce = ap_const_logic_0;
    }
}

void calc::thread_grp_fu_193_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            grp_fu_193_p0 = tmp_data_3_3_reg_352.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            grp_fu_193_p0 = tmp_data_1_3_reg_336.read();
        } else {
            grp_fu_193_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_193_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void calc::thread_grp_fu_193_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            grp_fu_193_p1 = tmp_data_3_3_reg_352.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            grp_fu_193_p1 = tmp_data_1_3_reg_336.read();
        } else {
            grp_fu_193_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_193_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void calc::thread_grp_fu_197_ce() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1))))) {
        grp_fu_197_ce = ap_const_logic_1;
    } else {
        grp_fu_197_ce = ap_const_logic_0;
    }
}

void calc::thread_grp_fu_197_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            grp_fu_197_p0 = tmp_60_2_i_i_i_reg_370.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            grp_fu_197_p0 = tmp_60_i_i_i_reg_360.read();
        } else {
            grp_fu_197_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_197_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void calc::thread_grp_fu_202_ce() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1))))) {
        grp_fu_202_ce = ap_const_logic_1;
    } else {
        grp_fu_202_ce = ap_const_logic_0;
    }
}

void calc::thread_grp_fu_202_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            grp_fu_202_p0 = tmp_60_3_i_i_i_reg_375.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            grp_fu_202_p0 = tmp_60_1_i_i_i_reg_365.read();
        } else {
            grp_fu_202_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_202_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void calc::thread_grp_fu_207_ce() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1))))) {
        grp_fu_207_ce = ap_const_logic_1;
    } else {
        grp_fu_207_ce = ap_const_logic_0;
    }
}

void calc::thread_grp_fu_207_p0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter16.read()))) {
        grp_fu_207_p0 = tmp_62_2_i_i_i_reg_410.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter15.read()))) {
        grp_fu_207_p0 = tmp_62_i_i_i_reg_400.read();
    } else {
        grp_fu_207_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void calc::thread_grp_fu_207_p1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter16.read()))) {
        grp_fu_207_p1 = ap_pipeline_reg_pp0_iter15_tmp_data_2_3_reg_344.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter15.read()))) {
        grp_fu_207_p1 = ap_pipeline_reg_pp0_iter14_tmp_data_0_3_reg_328.read();
    } else {
        grp_fu_207_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void calc::thread_grp_fu_211_ce() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1))))) {
        grp_fu_211_ce = ap_const_logic_1;
    } else {
        grp_fu_211_ce = ap_const_logic_0;
    }
}

void calc::thread_grp_fu_211_p0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter16.read()))) {
        grp_fu_211_p0 = tmp_62_3_i_i_i_reg_415.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter15.read()))) {
        grp_fu_211_p0 = tmp_62_1_i_i_i_reg_405.read();
    } else {
        grp_fu_211_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void calc::thread_grp_fu_211_p1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter16.read()))) {
        grp_fu_211_p1 = ap_pipeline_reg_pp0_iter15_tmp_data_3_3_reg_352.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter15.read()))) {
        grp_fu_211_p1 = ap_pipeline_reg_pp0_iter14_tmp_data_1_3_reg_336.read();
    } else {
        grp_fu_211_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void calc::thread_grp_fu_215_ce() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1))))) {
        grp_fu_215_ce = ap_const_logic_1;
    } else {
        grp_fu_215_ce = ap_const_logic_0;
    }
}

void calc::thread_grp_fu_215_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            grp_fu_215_p1 = tmp_61_2_i_i_i_reg_390.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            grp_fu_215_p1 = tmp_61_i_i_i_reg_380.read();
        } else {
            grp_fu_215_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_215_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void calc::thread_grp_fu_220_ce() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1))))) {
        grp_fu_220_ce = ap_const_logic_1;
    } else {
        grp_fu_220_ce = ap_const_logic_0;
    }
}

void calc::thread_grp_fu_220_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            grp_fu_220_p1 = tmp_61_3_i_i_i_reg_395.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            grp_fu_220_p1 = tmp_61_1_i_i_i_reg_385.read();
        } else {
            grp_fu_220_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_220_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void calc::thread_grp_fu_241_ce() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) || 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) || 
         (esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_condition_165.read(), ap_const_boolean_1)) || 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state45.read()))) {
        grp_fu_241_ce = ap_const_logic_0;
    } else {
        grp_fu_241_ce = ap_const_logic_1;
    }
}

void calc::thread_grp_fu_241_p0() {
    grp_fu_241_p0 =  (sc_lv<27>) (grp_fu_241_p00.read());
}

void calc::thread_grp_fu_241_p00() {
    grp_fu_241_p00 = esl_zext<56,27>(simConfig_rowsToSimulate_V_dout.read());
}

void calc::thread_grp_fu_241_p1() {
    grp_fu_241_p1 =  (sc_lv<29>) (grp_fu_241_p10.read());
}

void calc::thread_grp_fu_241_p10() {
    grp_fu_241_p10 = esl_zext<56,29>(r_V_fu_225_p3.read());
}

void calc::thread_indvar_flatten_next_fu_252_p2() {
    indvar_flatten_next_fu_252_p2 = (!indvar_flatten_phi_fu_174_p4.read().is_01() || !ap_const_lv56_1.is_01())? sc_lv<56>(): (sc_biguint<56>(indvar_flatten_phi_fu_174_p4.read()) + sc_biguint<56>(ap_const_lv56_1));
}

void calc::thread_indvar_flatten_phi_fu_174_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_293.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_phi_fu_174_p4 = indvar_flatten_next_reg_297.read();
    } else {
        indvar_flatten_phi_fu_174_p4 = indvar_flatten_reg_170.read();
    }
}

void calc::thread_processedData_V_data0_status() {
    processedData_V_data0_status = (processedData_V_data_empty_n.read() & processedData_V_data_1_empty_n.read() & processedData_V_data_2_empty_n.read() & processedData_V_data_3_empty_n.read());
}

void calc::thread_processedData_V_data0_update() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_293.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1)))) {
        processedData_V_data0_update = ap_const_logic_1;
    } else {
        processedData_V_data0_update = ap_const_logic_0;
    }
}

void calc::thread_processedData_V_data_1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_293.read(), ap_const_lv1_0))) {
        processedData_V_data_1_blk_n = processedData_V_data_1_empty_n.read();
    } else {
        processedData_V_data_1_blk_n = ap_const_logic_1;
    }
}

void calc::thread_processedData_V_data_1_read() {
    processedData_V_data_1_read = processedData_V_data0_update.read();
}

void calc::thread_processedData_V_data_2_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_293.read(), ap_const_lv1_0))) {
        processedData_V_data_2_blk_n = processedData_V_data_2_empty_n.read();
    } else {
        processedData_V_data_2_blk_n = ap_const_logic_1;
    }
}

void calc::thread_processedData_V_data_2_read() {
    processedData_V_data_2_read = processedData_V_data0_update.read();
}

void calc::thread_processedData_V_data_3_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_293.read(), ap_const_lv1_0))) {
        processedData_V_data_3_blk_n = processedData_V_data_3_empty_n.read();
    } else {
        processedData_V_data_3_blk_n = ap_const_logic_1;
    }
}

void calc::thread_processedData_V_data_3_read() {
    processedData_V_data_3_read = processedData_V_data0_update.read();
}

void calc::thread_processedData_V_data_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_293.read(), ap_const_lv1_0))) {
        processedData_V_data_blk_n = processedData_V_data_empty_n.read();
    } else {
        processedData_V_data_blk_n = ap_const_logic_1;
    }
}

void calc::thread_processedData_V_data_read() {
    processedData_V_data_read = processedData_V_data0_update.read();
}

void calc::thread_r_V_fu_225_p3() {
    r_V_fu_225_p3 = esl_concat<27,2>(simConfig_BLOCK_NUMBERS_V_dout.read(), ap_const_lv2_0);
}

void calc::thread_simConfig_BLOCK_NUMBERS_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        simConfig_BLOCK_NUMBERS_V_blk_n = simConfig_BLOCK_NUMBERS_V_empty_n.read();
    } else {
        simConfig_BLOCK_NUMBERS_V_blk_n = ap_const_logic_1;
    }
}

void calc::thread_simConfig_BLOCK_NUMBERS_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        simConfig_BLOCK_NUMBERS_V_out_blk_n = simConfig_BLOCK_NUMBERS_V_out_full_n.read();
    } else {
        simConfig_BLOCK_NUMBERS_V_out_blk_n = ap_const_logic_1;
    }
}

void calc::thread_simConfig_BLOCK_NUMBERS_V_out_din() {
    simConfig_BLOCK_NUMBERS_V_out_din = simConfig_BLOCK_NUMBERS_V_dout.read();
}

void calc::thread_simConfig_BLOCK_NUMBERS_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_165.read(), ap_const_boolean_1))) {
        simConfig_BLOCK_NUMBERS_V_out_write = ap_const_logic_1;
    } else {
        simConfig_BLOCK_NUMBERS_V_out_write = ap_const_logic_0;
    }
}

void calc::thread_simConfig_BLOCK_NUMBERS_V_read() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_165.read(), ap_const_boolean_1))) {
        simConfig_BLOCK_NUMBERS_V_read = ap_const_logic_1;
    } else {
        simConfig_BLOCK_NUMBERS_V_read = ap_const_logic_0;
    }
}

void calc::thread_simConfig_rowsToSimulate_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        simConfig_rowsToSimulate_V_blk_n = simConfig_rowsToSimulate_V_empty_n.read();
    } else {
        simConfig_rowsToSimulate_V_blk_n = ap_const_logic_1;
    }
}

void calc::thread_simConfig_rowsToSimulate_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        simConfig_rowsToSimulate_V_out_blk_n = simConfig_rowsToSimulate_V_out_full_n.read();
    } else {
        simConfig_rowsToSimulate_V_out_blk_n = ap_const_logic_1;
    }
}

void calc::thread_simConfig_rowsToSimulate_V_out_din() {
    simConfig_rowsToSimulate_V_out_din = simConfig_rowsToSimulate_V_dout.read();
}

void calc::thread_simConfig_rowsToSimulate_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_165.read(), ap_const_boolean_1))) {
        simConfig_rowsToSimulate_V_out_write = ap_const_logic_1;
    } else {
        simConfig_rowsToSimulate_V_out_write = ap_const_logic_0;
    }
}

void calc::thread_simConfig_rowsToSimulate_V_read() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_condition_165.read(), ap_const_boolean_1))) {
        simConfig_rowsToSimulate_V_read = ap_const_logic_1;
    } else {
        simConfig_rowsToSimulate_V_read = ap_const_logic_0;
    }
}

void calc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_condition_165.read(), ap_const_boolean_1)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 128 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1)) && !(esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1)) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter17.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1)) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_247_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1)) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter17.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_condition_188.read(), ap_const_boolean_1)) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_247_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
                ap_NS_fsm = ap_ST_fsm_state45;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 256 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_condition_224.read(), ap_const_boolean_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

}

