-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity calc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    simConfig_rowsToSimulate_V_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    simConfig_rowsToSimulate_V_empty_n : IN STD_LOGIC;
    simConfig_rowsToSimulate_V_read : OUT STD_LOGIC;
    simConfig_BLOCK_NUMBERS_V_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    simConfig_BLOCK_NUMBERS_V_empty_n : IN STD_LOGIC;
    simConfig_BLOCK_NUMBERS_V_read : OUT STD_LOGIC;
    simConfig_rowsToSimulate_V_out_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    simConfig_rowsToSimulate_V_out_full_n : IN STD_LOGIC;
    simConfig_rowsToSimulate_V_out_write : OUT STD_LOGIC;
    simConfig_BLOCK_NUMBERS_V_out_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    simConfig_BLOCK_NUMBERS_V_out_full_n : IN STD_LOGIC;
    simConfig_BLOCK_NUMBERS_V_out_write : OUT STD_LOGIC;
    processedData_V_data_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    processedData_V_data_empty_n : IN STD_LOGIC;
    processedData_V_data_read : OUT STD_LOGIC;
    processedData_V_data_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    processedData_V_data_1_empty_n : IN STD_LOGIC;
    processedData_V_data_1_read : OUT STD_LOGIC;
    processedData_V_data_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    processedData_V_data_2_empty_n : IN STD_LOGIC;
    processedData_V_data_2_read : OUT STD_LOGIC;
    processedData_V_data_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    processedData_V_data_3_empty_n : IN STD_LOGIC;
    processedData_V_data_3_read : OUT STD_LOGIC;
    fixedData_V_data_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fixedData_V_data_empty_n : IN STD_LOGIC;
    fixedData_V_data_read : OUT STD_LOGIC;
    fixedData_V_tlast_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    fixedData_V_tlast_V_empty_n : IN STD_LOGIC;
    fixedData_V_tlast_V_read : OUT STD_LOGIC;
    V_V_data_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    V_V_data_0_full_n : IN STD_LOGIC;
    V_V_data_0_write : OUT STD_LOGIC;
    V_V_data_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    V_V_data_1_full_n : IN STD_LOGIC;
    V_V_data_1_write : OUT STD_LOGIC;
    V_V_data_2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    V_V_data_2_full_n : IN STD_LOGIC;
    V_V_data_2_write : OUT STD_LOGIC;
    V_V_data_3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    V_V_data_3_full_n : IN STD_LOGIC;
    V_V_data_3_write : OUT STD_LOGIC;
    F_V_data_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    F_V_data_0_full_n : IN STD_LOGIC;
    F_V_data_0_write : OUT STD_LOGIC;
    F_V_data_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    F_V_data_1_full_n : IN STD_LOGIC;
    F_V_data_1_write : OUT STD_LOGIC;
    F_V_data_2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    F_V_data_2_full_n : IN STD_LOGIC;
    F_V_data_2_write : OUT STD_LOGIC;
    F_V_data_3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    F_V_data_3_full_n : IN STD_LOGIC;
    F_V_data_3_write : OUT STD_LOGIC );
end;


architecture behav of calc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv56_0 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_BC23D70A : STD_LOGIC_VECTOR (31 downto 0) := "10111100001000111101011100001010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv56_1 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal simConfig_rowsToSimulate_V_blk_n : STD_LOGIC;
    signal simConfig_BLOCK_NUMBERS_V_blk_n : STD_LOGIC;
    signal simConfig_rowsToSimulate_V_out_blk_n : STD_LOGIC;
    signal simConfig_BLOCK_NUMBERS_V_out_blk_n : STD_LOGIC;
    signal processedData_V_data_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal processedData_V_data_1_blk_n : STD_LOGIC;
    signal processedData_V_data_2_blk_n : STD_LOGIC;
    signal processedData_V_data_3_blk_n : STD_LOGIC;
    signal fixedData_V_data_blk_n : STD_LOGIC;
    signal fixedData_V_tlast_V_blk_n : STD_LOGIC;
    signal V_V_data_0_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal V_V_data_1_blk_n : STD_LOGIC;
    signal V_V_data_2_blk_n : STD_LOGIC;
    signal V_V_data_3_blk_n : STD_LOGIC;
    signal F_V_data_0_blk_n : STD_LOGIC;
    signal F_V_data_1_blk_n : STD_LOGIC;
    signal F_V_data_2_blk_n : STD_LOGIC;
    signal F_V_data_3_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_170 : STD_LOGIC_VECTOR (55 downto 0);
    signal ap_condition_165 : BOOLEAN;
    signal grp_fu_241_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal bound_reg_288 : STD_LOGIC_VECTOR (55 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal exitcond_flatten_fu_247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal V_V_data_01_status : STD_LOGIC;
    signal F_V_data_01_status : STD_LOGIC;
    signal ap_condition_188 : BOOLEAN;
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter13_exitcond_flatten_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter14_exitcond_flatten_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter15_exitcond_flatten_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter16_exitcond_flatten_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_252_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal indvar_flatten_next_reg_297 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_data_0_2_reg_302 : STD_LOGIC_VECTOR (31 downto 0);
    signal processedData_V_data0_status : STD_LOGIC;
    signal fixedData_V_data0_status : STD_LOGIC;
    signal ap_condition_224 : BOOLEAN;
    signal tmp_data_1_2_reg_307 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_2_reg_312 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_2_reg_317 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_reg_322 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_181_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_0_3_reg_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter5_tmp_data_0_3_reg_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_data_0_3_reg_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_data_0_3_reg_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_data_0_3_reg_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_data_0_3_reg_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter10_tmp_data_0_3_reg_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter11_tmp_data_0_3_reg_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter12_tmp_data_0_3_reg_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter13_tmp_data_0_3_reg_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter14_tmp_data_0_3_reg_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter15_tmp_data_0_3_reg_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter16_tmp_data_0_3_reg_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter17_tmp_data_0_3_reg_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_185_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_1_3_reg_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_data_1_3_reg_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_data_1_3_reg_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_data_1_3_reg_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_data_1_3_reg_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_data_1_3_reg_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter10_tmp_data_1_3_reg_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter11_tmp_data_1_3_reg_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter12_tmp_data_1_3_reg_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter13_tmp_data_1_3_reg_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter14_tmp_data_1_3_reg_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter15_tmp_data_1_3_reg_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter16_tmp_data_1_3_reg_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter17_tmp_data_1_3_reg_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_3_reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter6_tmp_data_2_3_reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_data_2_3_reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_data_2_3_reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_data_2_3_reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter10_tmp_data_2_3_reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter11_tmp_data_2_3_reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter12_tmp_data_2_3_reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter13_tmp_data_2_3_reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter14_tmp_data_2_3_reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter15_tmp_data_2_3_reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter16_tmp_data_2_3_reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter17_tmp_data_2_3_reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_3_reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_data_3_3_reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_data_3_3_reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_data_3_3_reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_data_3_3_reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter10_tmp_data_3_3_reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter11_tmp_data_3_3_reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter12_tmp_data_3_3_reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter13_tmp_data_3_3_reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter14_tmp_data_3_3_reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter15_tmp_data_3_3_reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter16_tmp_data_3_3_reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter17_tmp_data_3_3_reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_189_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_i_i_i_reg_360 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal grp_fu_193_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_1_i_i_i_reg_365 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_2_i_i_i_reg_370 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal tmp_60_3_i_i_i_reg_375 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_197_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_i_i_i_reg_380 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal grp_fu_202_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_1_i_i_i_reg_385 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_2_i_i_i_reg_390 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal tmp_61_3_i_i_i_reg_395 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_215_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_i_i_i_reg_400 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal grp_fu_220_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_1_i_i_i_reg_405 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_2_i_i_i_reg_410 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_3_i_i_i_reg_415 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_207_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_0_reg_420 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal grp_fu_211_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_1_reg_425 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_reg_430 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_reg_435 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal indvar_flatten_phi_fu_174_p4 : STD_LOGIC_VECTOR (55 downto 0);
    signal processedData_V_data0_update : STD_LOGIC;
    signal fixedData_V_data0_update : STD_LOGIC;
    signal V_V_data_01_update : STD_LOGIC;
    signal F_V_data_01_update : STD_LOGIC;
    signal grp_fu_181_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_185_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_189_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_189_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_193_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_193_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_197_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_202_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_207_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_207_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_211_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_211_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_215_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_220_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_fu_225_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_241_p0 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_241_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_181_ce : STD_LOGIC;
    signal grp_fu_185_ce : STD_LOGIC;
    signal grp_fu_189_ce : STD_LOGIC;
    signal grp_fu_193_ce : STD_LOGIC;
    signal grp_fu_197_ce : STD_LOGIC;
    signal grp_fu_202_ce : STD_LOGIC;
    signal grp_fu_207_ce : STD_LOGIC;
    signal grp_fu_211_ce : STD_LOGIC;
    signal grp_fu_215_ce : STD_LOGIC;
    signal grp_fu_220_ce : STD_LOGIC;
    signal grp_fu_241_ce : STD_LOGIC;
    signal ap_CS_fsm_state45 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_241_p00 : STD_LOGIC_VECTOR (55 downto 0);
    signal grp_fu_241_p10 : STD_LOGIC_VECTOR (55 downto 0);

    component GapJunctionIP_fsurcU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GapJunctionIP_fmusc4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GapJunctionIP_fextde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GapJunctionIP_muludo IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (26 downto 0);
        din1 : IN STD_LOGIC_VECTOR (28 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (55 downto 0) );
    end component;



begin
    GapJunctionIP_fsurcU_U119 : component GapJunctionIP_fsurcU
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_data_reg_322,
        din1 => grp_fu_181_p1,
        ce => grp_fu_181_ce,
        dout => grp_fu_181_p2);

    GapJunctionIP_fsurcU_U120 : component GapJunctionIP_fsurcU
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_data_reg_322,
        din1 => grp_fu_185_p1,
        ce => grp_fu_185_ce,
        dout => grp_fu_185_p2);

    GapJunctionIP_fmusc4_U121 : component GapJunctionIP_fmusc4
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_189_p0,
        din1 => grp_fu_189_p1,
        ce => grp_fu_189_ce,
        dout => grp_fu_189_p2);

    GapJunctionIP_fmusc4_U122 : component GapJunctionIP_fmusc4
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_193_p0,
        din1 => grp_fu_193_p1,
        ce => grp_fu_193_ce,
        dout => grp_fu_193_p2);

    GapJunctionIP_fmusc4_U123 : component GapJunctionIP_fmusc4
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_197_p0,
        din1 => ap_const_lv32_BC23D70A,
        ce => grp_fu_197_ce,
        dout => grp_fu_197_p2);

    GapJunctionIP_fmusc4_U124 : component GapJunctionIP_fmusc4
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_202_p0,
        din1 => ap_const_lv32_BC23D70A,
        ce => grp_fu_202_ce,
        dout => grp_fu_202_p2);

    GapJunctionIP_fmusc4_U125 : component GapJunctionIP_fmusc4
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_207_p0,
        din1 => grp_fu_207_p1,
        ce => grp_fu_207_ce,
        dout => grp_fu_207_p2);

    GapJunctionIP_fmusc4_U126 : component GapJunctionIP_fmusc4
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_211_p0,
        din1 => grp_fu_211_p1,
        ce => grp_fu_211_ce,
        dout => grp_fu_211_p2);

    GapJunctionIP_fextde_U127 : component GapJunctionIP_fextde
    generic map (
        ID => 1,
        NUM_STAGE => 13,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => grp_fu_215_p1,
        ce => grp_fu_215_ce,
        dout => grp_fu_215_p2);

    GapJunctionIP_fextde_U128 : component GapJunctionIP_fextde
    generic map (
        ID => 1,
        NUM_STAGE => 13,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => grp_fu_220_p1,
        ce => grp_fu_220_ce,
        dout => grp_fu_220_p2);

    GapJunctionIP_muludo_U129 : component GapJunctionIP_muludo
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 27,
        din1_WIDTH => 29,
        dout_WIDTH => 56)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_241_p0,
        din1 => grp_fu_241_p1,
        ce => grp_fu_241_ce,
        dout => grp_fu_241_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1))) and not((ap_const_lv1_0 = exitcond_flatten_fu_247_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_293 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))) and not((exitcond_flatten_reg_293 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                    ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_293 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                indvar_flatten_reg_170 <= indvar_flatten_next_reg_297;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                indvar_flatten_reg_170 <= ap_const_lv56_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1))))) then
                ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_293;
                ap_pipeline_reg_pp0_iter10_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter9_tmp_data_2_3_reg_344;
                ap_pipeline_reg_pp0_iter10_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter9_tmp_data_3_3_reg_352;
                ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_293;
                ap_pipeline_reg_pp0_iter11_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter10_tmp_data_2_3_reg_344;
                ap_pipeline_reg_pp0_iter11_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter10_tmp_data_3_3_reg_352;
                ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_293;
                ap_pipeline_reg_pp0_iter12_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter11_tmp_data_2_3_reg_344;
                ap_pipeline_reg_pp0_iter12_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter11_tmp_data_3_3_reg_352;
                ap_pipeline_reg_pp0_iter13_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_293;
                ap_pipeline_reg_pp0_iter13_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter12_tmp_data_2_3_reg_344;
                ap_pipeline_reg_pp0_iter13_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter12_tmp_data_3_3_reg_352;
                ap_pipeline_reg_pp0_iter14_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter13_exitcond_flatten_reg_293;
                ap_pipeline_reg_pp0_iter14_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter13_tmp_data_2_3_reg_344;
                ap_pipeline_reg_pp0_iter14_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter13_tmp_data_3_3_reg_352;
                ap_pipeline_reg_pp0_iter15_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter14_exitcond_flatten_reg_293;
                ap_pipeline_reg_pp0_iter15_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter14_tmp_data_2_3_reg_344;
                ap_pipeline_reg_pp0_iter15_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter14_tmp_data_3_3_reg_352;
                ap_pipeline_reg_pp0_iter16_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter15_exitcond_flatten_reg_293;
                ap_pipeline_reg_pp0_iter16_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter15_tmp_data_2_3_reg_344;
                ap_pipeline_reg_pp0_iter16_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter15_tmp_data_3_3_reg_352;
                ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter16_exitcond_flatten_reg_293;
                ap_pipeline_reg_pp0_iter17_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter16_tmp_data_2_3_reg_344;
                ap_pipeline_reg_pp0_iter17_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter16_tmp_data_3_3_reg_352;
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_293 <= exitcond_flatten_reg_293;
                ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_293;
                ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_293;
                ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_293;
                ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_293;
                ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_293;
                ap_pipeline_reg_pp0_iter6_tmp_data_2_3_reg_344 <= tmp_data_2_3_reg_344;
                ap_pipeline_reg_pp0_iter6_tmp_data_3_3_reg_352 <= tmp_data_3_3_reg_352;
                ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_293;
                ap_pipeline_reg_pp0_iter7_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter6_tmp_data_2_3_reg_344;
                ap_pipeline_reg_pp0_iter7_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter6_tmp_data_3_3_reg_352;
                ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_293;
                ap_pipeline_reg_pp0_iter8_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter7_tmp_data_2_3_reg_344;
                ap_pipeline_reg_pp0_iter8_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter7_tmp_data_3_3_reg_352;
                ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_293;
                ap_pipeline_reg_pp0_iter9_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter8_tmp_data_2_3_reg_344;
                ap_pipeline_reg_pp0_iter9_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter8_tmp_data_3_3_reg_352;
                exitcond_flatten_reg_293 <= exitcond_flatten_fu_247_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then
                ap_pipeline_reg_pp0_iter10_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter9_tmp_data_0_3_reg_328;
                ap_pipeline_reg_pp0_iter10_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter9_tmp_data_1_3_reg_336;
                ap_pipeline_reg_pp0_iter11_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter10_tmp_data_0_3_reg_328;
                ap_pipeline_reg_pp0_iter11_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter10_tmp_data_1_3_reg_336;
                ap_pipeline_reg_pp0_iter12_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter11_tmp_data_0_3_reg_328;
                ap_pipeline_reg_pp0_iter12_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter11_tmp_data_1_3_reg_336;
                ap_pipeline_reg_pp0_iter13_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter12_tmp_data_0_3_reg_328;
                ap_pipeline_reg_pp0_iter13_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter12_tmp_data_1_3_reg_336;
                ap_pipeline_reg_pp0_iter14_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter13_tmp_data_0_3_reg_328;
                ap_pipeline_reg_pp0_iter14_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter13_tmp_data_1_3_reg_336;
                ap_pipeline_reg_pp0_iter15_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter14_tmp_data_0_3_reg_328;
                ap_pipeline_reg_pp0_iter15_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter14_tmp_data_1_3_reg_336;
                ap_pipeline_reg_pp0_iter16_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter15_tmp_data_0_3_reg_328;
                ap_pipeline_reg_pp0_iter16_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter15_tmp_data_1_3_reg_336;
                ap_pipeline_reg_pp0_iter17_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter16_tmp_data_0_3_reg_328;
                ap_pipeline_reg_pp0_iter17_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter16_tmp_data_1_3_reg_336;
                ap_pipeline_reg_pp0_iter5_tmp_data_0_3_reg_328 <= tmp_data_0_3_reg_328;
                ap_pipeline_reg_pp0_iter5_tmp_data_1_3_reg_336 <= tmp_data_1_3_reg_336;
                ap_pipeline_reg_pp0_iter6_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter5_tmp_data_0_3_reg_328;
                ap_pipeline_reg_pp0_iter6_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter5_tmp_data_1_3_reg_336;
                ap_pipeline_reg_pp0_iter7_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter6_tmp_data_0_3_reg_328;
                ap_pipeline_reg_pp0_iter7_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter6_tmp_data_1_3_reg_336;
                ap_pipeline_reg_pp0_iter8_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter7_tmp_data_0_3_reg_328;
                ap_pipeline_reg_pp0_iter8_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter7_tmp_data_1_3_reg_336;
                ap_pipeline_reg_pp0_iter9_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter8_tmp_data_0_3_reg_328;
                ap_pipeline_reg_pp0_iter9_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter8_tmp_data_1_3_reg_336;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then
                bound_reg_288 <= grp_fu_241_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1))))) then
                indvar_flatten_next_reg_297 <= indvar_flatten_next_fu_252_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_293))) then
                tmp_60_1_i_i_i_reg_365 <= grp_fu_193_p2;
                tmp_60_i_i_i_reg_360 <= grp_fu_189_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1))) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_293) and (ap_const_logic_1 = ap_enable_reg_pp0_iter7))) then
                tmp_60_2_i_i_i_reg_370 <= grp_fu_189_p2;
                tmp_60_3_i_i_i_reg_375 <= grp_fu_193_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_293))) then
                tmp_61_1_i_i_i_reg_385 <= grp_fu_202_p2;
                tmp_61_i_i_i_reg_380 <= grp_fu_197_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1))) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_293) and (ap_const_logic_1 = ap_enable_reg_pp0_iter9))) then
                tmp_61_2_i_i_i_reg_390 <= grp_fu_197_p2;
                tmp_61_3_i_i_i_reg_395 <= grp_fu_202_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter15) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter14_exitcond_flatten_reg_293))) then
                tmp_62_1_i_i_i_reg_405 <= grp_fu_220_p2;
                tmp_62_i_i_i_reg_400 <= grp_fu_215_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter15) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter15_exitcond_flatten_reg_293))) then
                tmp_62_2_i_i_i_reg_410 <= grp_fu_215_p2;
                tmp_62_3_i_i_i_reg_415 <= grp_fu_220_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_293 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then
                tmp_data_0_2_reg_302 <= processedData_V_data_dout;
                tmp_data_1_2_reg_307 <= processedData_V_data_1_dout;
                tmp_data_2_2_reg_312 <= processedData_V_data_2_dout;
                tmp_data_3_2_reg_317 <= processedData_V_data_3_dout;
                tmp_data_reg_322 <= fixedData_V_data_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_293))) then
                tmp_data_0_3_reg_328 <= grp_fu_181_p2;
                tmp_data_1_3_reg_336 <= grp_fu_185_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter17) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter16_exitcond_flatten_reg_293))) then
                tmp_data_0_reg_420 <= grp_fu_207_p2;
                tmp_data_1_reg_425 <= grp_fu_211_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1))) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_293) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then
                tmp_data_2_3_reg_344 <= grp_fu_181_p2;
                tmp_data_3_3_reg_352 <= grp_fu_185_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter17))) then
                tmp_data_2_reg_430 <= grp_fu_207_p2;
                tmp_data_3_reg_435 <= grp_fu_211_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_condition_165, exitcond_flatten_fu_247_p2, ap_condition_188, ap_condition_224, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_condition_165 = ap_const_boolean_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1))) and not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter18) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1))) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter17)))) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1))) and not((ap_const_lv1_0 = exitcond_flatten_fu_247_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter18) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1))) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter17))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1))) and not((ap_const_lv1_0 = exitcond_flatten_fu_247_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    F_V_data_01_status <= (F_V_data_0_full_n and F_V_data_1_full_n and F_V_data_2_full_n and F_V_data_3_full_n);

    F_V_data_01_update_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293, ap_condition_188)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1))))) then 
            F_V_data_01_update <= ap_const_logic_1;
        else 
            F_V_data_01_update <= ap_const_logic_0;
        end if; 
    end process;


    F_V_data_0_blk_n_assign_proc : process(F_V_data_0_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293))) then 
            F_V_data_0_blk_n <= F_V_data_0_full_n;
        else 
            F_V_data_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    F_V_data_0_din <= tmp_data_0_reg_420;
    F_V_data_0_write <= F_V_data_01_update;

    F_V_data_1_blk_n_assign_proc : process(F_V_data_1_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293))) then 
            F_V_data_1_blk_n <= F_V_data_1_full_n;
        else 
            F_V_data_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    F_V_data_1_din <= tmp_data_1_reg_425;
    F_V_data_1_write <= F_V_data_01_update;

    F_V_data_2_blk_n_assign_proc : process(F_V_data_2_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293))) then 
            F_V_data_2_blk_n <= F_V_data_2_full_n;
        else 
            F_V_data_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    F_V_data_2_din <= tmp_data_2_reg_430;
    F_V_data_2_write <= F_V_data_01_update;

    F_V_data_3_blk_n_assign_proc : process(F_V_data_3_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293))) then 
            F_V_data_3_blk_n <= F_V_data_3_full_n;
        else 
            F_V_data_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    F_V_data_3_din <= tmp_data_3_reg_435;
    F_V_data_3_write <= F_V_data_01_update;
    V_V_data_01_status <= (V_V_data_0_full_n and V_V_data_1_full_n and V_V_data_2_full_n and V_V_data_3_full_n);

    V_V_data_01_update_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293, ap_condition_188)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1))))) then 
            V_V_data_01_update <= ap_const_logic_1;
        else 
            V_V_data_01_update <= ap_const_logic_0;
        end if; 
    end process;


    V_V_data_0_blk_n_assign_proc : process(V_V_data_0_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293))) then 
            V_V_data_0_blk_n <= V_V_data_0_full_n;
        else 
            V_V_data_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_V_data_0_din <= ap_pipeline_reg_pp0_iter17_tmp_data_0_3_reg_328;
    V_V_data_0_write <= V_V_data_01_update;

    V_V_data_1_blk_n_assign_proc : process(V_V_data_1_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293))) then 
            V_V_data_1_blk_n <= V_V_data_1_full_n;
        else 
            V_V_data_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_V_data_1_din <= ap_pipeline_reg_pp0_iter17_tmp_data_1_3_reg_336;
    V_V_data_1_write <= V_V_data_01_update;

    V_V_data_2_blk_n_assign_proc : process(V_V_data_2_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293))) then 
            V_V_data_2_blk_n <= V_V_data_2_full_n;
        else 
            V_V_data_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_V_data_2_din <= ap_pipeline_reg_pp0_iter17_tmp_data_2_3_reg_344;
    V_V_data_2_write <= V_V_data_01_update;

    V_V_data_3_blk_n_assign_proc : process(V_V_data_3_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293))) then 
            V_V_data_3_blk_n <= V_V_data_3_full_n;
        else 
            V_V_data_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_V_data_3_din <= ap_pipeline_reg_pp0_iter17_tmp_data_3_3_reg_352;
    V_V_data_3_write <= V_V_data_01_update;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state45 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_state7 <= ap_CS_fsm(6 downto 6);

    ap_condition_165_assign_proc : process(ap_start, ap_done_reg, simConfig_rowsToSimulate_V_empty_n, simConfig_BLOCK_NUMBERS_V_empty_n, simConfig_rowsToSimulate_V_out_full_n, simConfig_BLOCK_NUMBERS_V_out_full_n)
    begin
                ap_condition_165 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (simConfig_rowsToSimulate_V_empty_n = ap_const_logic_0) or (simConfig_BLOCK_NUMBERS_V_empty_n = ap_const_logic_0) or (simConfig_rowsToSimulate_V_out_full_n = ap_const_logic_0) or (simConfig_BLOCK_NUMBERS_V_out_full_n = ap_const_logic_0));
    end process;


    ap_condition_188_assign_proc : process(ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293, V_V_data_01_status, F_V_data_01_status)
    begin
                ap_condition_188 <= (((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293) and (V_V_data_01_status = ap_const_logic_0)) or ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293) and (F_V_data_01_status = ap_const_logic_0)));
    end process;


    ap_condition_224_assign_proc : process(exitcond_flatten_reg_293, processedData_V_data0_status, fixedData_V_data0_status)
    begin
                ap_condition_224 <= (((exitcond_flatten_reg_293 = ap_const_lv1_0) and (processedData_V_data0_status = ap_const_logic_0)) or ((exitcond_flatten_reg_293 = ap_const_lv1_0) and (fixedData_V_data0_status = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_lv1_1 = ap_CS_fsm_state45)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state45)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten_fu_247_p2 <= "1" when (indvar_flatten_phi_fu_174_p4 = bound_reg_288) else "0";
    fixedData_V_data0_status <= (fixedData_V_data_empty_n and fixedData_V_tlast_V_empty_n);

    fixedData_V_data0_update_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_293, ap_condition_224)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_293 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then 
            fixedData_V_data0_update <= ap_const_logic_1;
        else 
            fixedData_V_data0_update <= ap_const_logic_0;
        end if; 
    end process;


    fixedData_V_data_blk_n_assign_proc : process(fixedData_V_data_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_293)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_293 = ap_const_lv1_0))) then 
            fixedData_V_data_blk_n <= fixedData_V_data_empty_n;
        else 
            fixedData_V_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fixedData_V_data_read <= fixedData_V_data0_update;

    fixedData_V_tlast_V_blk_n_assign_proc : process(fixedData_V_tlast_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_293)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_293 = ap_const_lv1_0))) then 
            fixedData_V_tlast_V_blk_n <= fixedData_V_tlast_V_empty_n;
        else 
            fixedData_V_tlast_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fixedData_V_tlast_V_read <= fixedData_V_data0_update;

    grp_fu_181_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_condition_188, ap_condition_224)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1)))))) then 
            grp_fu_181_ce <= ap_const_logic_1;
        else 
            grp_fu_181_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_181_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, tmp_data_0_2_reg_302, tmp_data_2_2_reg_312, ap_enable_reg_pp0_iter1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter1)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_181_p1 <= tmp_data_2_2_reg_312;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                grp_fu_181_p1 <= tmp_data_0_2_reg_302;
            else 
                grp_fu_181_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_181_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_185_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_condition_188, ap_condition_224)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1)))))) then 
            grp_fu_185_ce <= ap_const_logic_1;
        else 
            grp_fu_185_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_185_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, tmp_data_1_2_reg_307, tmp_data_3_2_reg_317, ap_enable_reg_pp0_iter1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter1)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_185_p1 <= tmp_data_3_2_reg_317;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                grp_fu_185_p1 <= tmp_data_1_2_reg_307;
            else 
                grp_fu_185_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_185_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_189_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_condition_188, ap_condition_224)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1)))))) then 
            grp_fu_189_ce <= ap_const_logic_1;
        else 
            grp_fu_189_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_189_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, tmp_data_0_3_reg_328, tmp_data_2_3_reg_344, ap_enable_reg_pp0_iter5)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_189_p0 <= tmp_data_2_3_reg_344;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                grp_fu_189_p0 <= tmp_data_0_3_reg_328;
            else 
                grp_fu_189_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_189_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_189_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, tmp_data_0_3_reg_328, tmp_data_2_3_reg_344, ap_enable_reg_pp0_iter5)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_189_p1 <= tmp_data_2_3_reg_344;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                grp_fu_189_p1 <= tmp_data_0_3_reg_328;
            else 
                grp_fu_189_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_189_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_193_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_condition_188, ap_condition_224)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1)))))) then 
            grp_fu_193_ce <= ap_const_logic_1;
        else 
            grp_fu_193_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_193_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, tmp_data_1_3_reg_336, ap_enable_reg_pp0_iter5, tmp_data_3_3_reg_352)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_193_p0 <= tmp_data_3_3_reg_352;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                grp_fu_193_p0 <= tmp_data_1_3_reg_336;
            else 
                grp_fu_193_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_193_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_193_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, tmp_data_1_3_reg_336, ap_enable_reg_pp0_iter5, tmp_data_3_3_reg_352)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_193_p1 <= tmp_data_3_3_reg_352;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                grp_fu_193_p1 <= tmp_data_1_3_reg_336;
            else 
                grp_fu_193_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_193_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_197_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_condition_188, ap_condition_224)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1)))))) then 
            grp_fu_197_ce <= ap_const_logic_1;
        else 
            grp_fu_197_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_197_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, tmp_60_i_i_i_reg_360, tmp_60_2_i_i_i_reg_370, ap_enable_reg_pp0_iter7)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter7)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_197_p0 <= tmp_60_2_i_i_i_reg_370;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                grp_fu_197_p0 <= tmp_60_i_i_i_reg_360;
            else 
                grp_fu_197_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_197_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_202_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_condition_188, ap_condition_224)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1)))))) then 
            grp_fu_202_ce <= ap_const_logic_1;
        else 
            grp_fu_202_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_202_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, tmp_60_1_i_i_i_reg_365, ap_enable_reg_pp0_iter7, tmp_60_3_i_i_i_reg_375)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter7)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_202_p0 <= tmp_60_3_i_i_i_reg_375;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                grp_fu_202_p0 <= tmp_60_1_i_i_i_reg_365;
            else 
                grp_fu_202_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_202_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_207_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_condition_188, ap_condition_224)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1)))))) then 
            grp_fu_207_ce <= ap_const_logic_1;
        else 
            grp_fu_207_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_207_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, tmp_62_i_i_i_reg_400, ap_enable_reg_pp0_iter15, tmp_62_2_i_i_i_reg_410, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter16))) then 
            grp_fu_207_p0 <= tmp_62_2_i_i_i_reg_410;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter15))) then 
            grp_fu_207_p0 <= tmp_62_i_i_i_reg_400;
        else 
            grp_fu_207_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_207_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_pipeline_reg_pp0_iter14_tmp_data_0_3_reg_328, ap_pipeline_reg_pp0_iter15_tmp_data_2_3_reg_344, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter16))) then 
            grp_fu_207_p1 <= ap_pipeline_reg_pp0_iter15_tmp_data_2_3_reg_344;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter15))) then 
            grp_fu_207_p1 <= ap_pipeline_reg_pp0_iter14_tmp_data_0_3_reg_328;
        else 
            grp_fu_207_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_211_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_condition_188, ap_condition_224)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1)))))) then 
            grp_fu_211_ce <= ap_const_logic_1;
        else 
            grp_fu_211_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_211_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter15, tmp_62_1_i_i_i_reg_405, tmp_62_3_i_i_i_reg_415, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter16))) then 
            grp_fu_211_p0 <= tmp_62_3_i_i_i_reg_415;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter15))) then 
            grp_fu_211_p0 <= tmp_62_1_i_i_i_reg_405;
        else 
            grp_fu_211_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_211_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_pipeline_reg_pp0_iter14_tmp_data_1_3_reg_336, ap_pipeline_reg_pp0_iter15_tmp_data_3_3_reg_352, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter16))) then 
            grp_fu_211_p1 <= ap_pipeline_reg_pp0_iter15_tmp_data_3_3_reg_352;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter15))) then 
            grp_fu_211_p1 <= ap_pipeline_reg_pp0_iter14_tmp_data_1_3_reg_336;
        else 
            grp_fu_211_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_215_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_condition_188, ap_condition_224)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1)))))) then 
            grp_fu_215_ce <= ap_const_logic_1;
        else 
            grp_fu_215_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_215_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, tmp_61_i_i_i_reg_380, tmp_61_2_i_i_i_reg_390, ap_enable_reg_pp0_iter9)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter9)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_215_p1 <= tmp_61_2_i_i_i_reg_390;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                grp_fu_215_p1 <= tmp_61_i_i_i_reg_380;
            else 
                grp_fu_215_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_215_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_220_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_condition_188, ap_condition_224)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter18) and (ap_condition_188 = ap_const_boolean_1)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1)))))) then 
            grp_fu_220_ce <= ap_const_logic_1;
        else 
            grp_fu_220_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_220_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, tmp_61_1_i_i_i_reg_385, ap_enable_reg_pp0_iter9, tmp_61_3_i_i_i_reg_395)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter9)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_220_p1 <= tmp_61_3_i_i_i_reg_395;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                grp_fu_220_p1 <= tmp_61_1_i_i_i_reg_385;
            else 
                grp_fu_220_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_220_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_241_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_condition_165, ap_CS_fsm_state45)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) or (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) or ((ap_CS_fsm_state1 = ap_const_lv1_1) and (ap_condition_165 = ap_const_boolean_1)) or (ap_const_lv1_1 = ap_CS_fsm_state45))) then 
            grp_fu_241_ce <= ap_const_logic_0;
        else 
            grp_fu_241_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_241_p0 <= grp_fu_241_p00(27 - 1 downto 0);
    grp_fu_241_p00 <= std_logic_vector(resize(unsigned(simConfig_rowsToSimulate_V_dout),56));
    grp_fu_241_p1 <= grp_fu_241_p10(29 - 1 downto 0);
    grp_fu_241_p10 <= std_logic_vector(resize(unsigned(r_V_fu_225_p3),56));
    indvar_flatten_next_fu_252_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_174_p4) + unsigned(ap_const_lv56_1));

    indvar_flatten_phi_fu_174_p4_assign_proc : process(exitcond_flatten_reg_293, ap_CS_fsm_pp0_stage0, indvar_flatten_reg_170, indvar_flatten_next_reg_297, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_reg_293 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            indvar_flatten_phi_fu_174_p4 <= indvar_flatten_next_reg_297;
        else 
            indvar_flatten_phi_fu_174_p4 <= indvar_flatten_reg_170;
        end if; 
    end process;

    processedData_V_data0_status <= (processedData_V_data_empty_n and processedData_V_data_1_empty_n and processedData_V_data_2_empty_n and processedData_V_data_3_empty_n);

    processedData_V_data0_update_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_293, ap_condition_224)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_293 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_condition_224 = ap_const_boolean_1))))) then 
            processedData_V_data0_update <= ap_const_logic_1;
        else 
            processedData_V_data0_update <= ap_const_logic_0;
        end if; 
    end process;


    processedData_V_data_1_blk_n_assign_proc : process(processedData_V_data_1_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_293)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_293 = ap_const_lv1_0))) then 
            processedData_V_data_1_blk_n <= processedData_V_data_1_empty_n;
        else 
            processedData_V_data_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    processedData_V_data_1_read <= processedData_V_data0_update;

    processedData_V_data_2_blk_n_assign_proc : process(processedData_V_data_2_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_293)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_293 = ap_const_lv1_0))) then 
            processedData_V_data_2_blk_n <= processedData_V_data_2_empty_n;
        else 
            processedData_V_data_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    processedData_V_data_2_read <= processedData_V_data0_update;

    processedData_V_data_3_blk_n_assign_proc : process(processedData_V_data_3_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_293)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_293 = ap_const_lv1_0))) then 
            processedData_V_data_3_blk_n <= processedData_V_data_3_empty_n;
        else 
            processedData_V_data_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    processedData_V_data_3_read <= processedData_V_data0_update;

    processedData_V_data_blk_n_assign_proc : process(processedData_V_data_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_293)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_293 = ap_const_lv1_0))) then 
            processedData_V_data_blk_n <= processedData_V_data_empty_n;
        else 
            processedData_V_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    processedData_V_data_read <= processedData_V_data0_update;
    r_V_fu_225_p3 <= (simConfig_BLOCK_NUMBERS_V_dout & ap_const_lv2_0);

    simConfig_BLOCK_NUMBERS_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, simConfig_BLOCK_NUMBERS_V_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            simConfig_BLOCK_NUMBERS_V_blk_n <= simConfig_BLOCK_NUMBERS_V_empty_n;
        else 
            simConfig_BLOCK_NUMBERS_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    simConfig_BLOCK_NUMBERS_V_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, simConfig_BLOCK_NUMBERS_V_out_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            simConfig_BLOCK_NUMBERS_V_out_blk_n <= simConfig_BLOCK_NUMBERS_V_out_full_n;
        else 
            simConfig_BLOCK_NUMBERS_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    simConfig_BLOCK_NUMBERS_V_out_din <= simConfig_BLOCK_NUMBERS_V_dout;

    simConfig_BLOCK_NUMBERS_V_out_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_165)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_165 = ap_const_boolean_1)))) then 
            simConfig_BLOCK_NUMBERS_V_out_write <= ap_const_logic_1;
        else 
            simConfig_BLOCK_NUMBERS_V_out_write <= ap_const_logic_0;
        end if; 
    end process;


    simConfig_BLOCK_NUMBERS_V_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_165)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_165 = ap_const_boolean_1)))) then 
            simConfig_BLOCK_NUMBERS_V_read <= ap_const_logic_1;
        else 
            simConfig_BLOCK_NUMBERS_V_read <= ap_const_logic_0;
        end if; 
    end process;


    simConfig_rowsToSimulate_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, simConfig_rowsToSimulate_V_empty_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            simConfig_rowsToSimulate_V_blk_n <= simConfig_rowsToSimulate_V_empty_n;
        else 
            simConfig_rowsToSimulate_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    simConfig_rowsToSimulate_V_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, simConfig_rowsToSimulate_V_out_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            simConfig_rowsToSimulate_V_out_blk_n <= simConfig_rowsToSimulate_V_out_full_n;
        else 
            simConfig_rowsToSimulate_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    simConfig_rowsToSimulate_V_out_din <= simConfig_rowsToSimulate_V_dout;

    simConfig_rowsToSimulate_V_out_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_165)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_165 = ap_const_boolean_1)))) then 
            simConfig_rowsToSimulate_V_out_write <= ap_const_logic_1;
        else 
            simConfig_rowsToSimulate_V_out_write <= ap_const_logic_0;
        end if; 
    end process;


    simConfig_rowsToSimulate_V_read_assign_proc : process(ap_CS_fsm_state1, ap_condition_165)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_165 = ap_const_boolean_1)))) then 
            simConfig_rowsToSimulate_V_read <= ap_const_logic_1;
        else 
            simConfig_rowsToSimulate_V_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;
