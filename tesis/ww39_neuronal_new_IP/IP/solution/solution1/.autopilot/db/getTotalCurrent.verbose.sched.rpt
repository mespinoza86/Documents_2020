

================================================================
== Vivado HLS Report for 'getTotalCurrent'
================================================================
* Date:           Thu Jan  9 23:44:24 2020

* Version:        2016.4 (Build 1756540 on Mon Jan 23 19:31:01 MST 2017)
* Project:        solution
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      5.76|        4.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   21|   21|   21|   21|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 22
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
* FSM state operations: 

 <State 1>: 2.39ns
ST_1: row_V_read (11)  [1/1] 0.00ns
_ifconv:3  %row_V_read = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %row_V)

ST_1: tmp (12)  [1/1] 0.00ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:4  %tmp = zext i3 %row_V_read to i64

ST_1: F_temp_data_addr (13)  [1/1] 0.00ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:5  %F_temp_data_addr = getelementptr [4 x float]* %F_temp_data, i64 0, i64 %tmp

ST_1: F_temp_data_load (14)  [2/2] 2.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:6  %F_temp_data_load = load float* %F_temp_data_addr, align 4

ST_1: V_temp_data_addr (17)  [1/1] 0.00ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:9  %V_temp_data_addr = getelementptr [4 x float]* %V_temp_data, i64 0, i64 %tmp

ST_1: V_temp_data_load (18)  [2/2] 2.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:10  %V_temp_data_load = load float* %V_temp_data_addr, align 4

ST_1: tmp_i (23)  [1/1] 1.62ns  loc: modules/I_calc/I_calc.cpp:34->modules/I_calc/I_calc.cpp:44
_ifconv:15  %tmp_i = icmp eq i3 %row_V_read, 3


 <State 2>: 2.39ns
ST_2: F_temp_data_load (14)  [1/2] 2.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:6  %F_temp_data_load = load float* %F_temp_data_addr, align 4

ST_2: V_temp_data_load (18)  [1/2] 2.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:10  %V_temp_data_load = load float* %V_temp_data_addr, align 4


 <State 3>: 5.55ns
ST_3: tmp_s (15)  [1/1] 5.55ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:7  %tmp_s = fpext float %F_temp_data_load to double

ST_3: tmp_2 (19)  [1/1] 5.55ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:11  %tmp_2 = fpext float %V_temp_data_load to double


 <State 4>: 5.39ns
ST_4: tmp_1 (16)  [9/9] 5.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:8  %tmp_1 = fmul double %tmp_s, 8.000000e-01

ST_4: tmp_3 (20)  [9/9] 5.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:12  %tmp_3 = fmul double %tmp_2, 2.000000e-01


 <State 5>: 5.39ns
ST_5: tmp_1 (16)  [8/9] 5.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:8  %tmp_1 = fmul double %tmp_s, 8.000000e-01

ST_5: tmp_3 (20)  [8/9] 5.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:12  %tmp_3 = fmul double %tmp_2, 2.000000e-01


 <State 6>: 5.39ns
ST_6: tmp_1 (16)  [7/9] 5.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:8  %tmp_1 = fmul double %tmp_s, 8.000000e-01

ST_6: tmp_3 (20)  [7/9] 5.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:12  %tmp_3 = fmul double %tmp_2, 2.000000e-01


 <State 7>: 5.39ns
ST_7: tmp_1 (16)  [6/9] 5.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:8  %tmp_1 = fmul double %tmp_s, 8.000000e-01

ST_7: tmp_3 (20)  [6/9] 5.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:12  %tmp_3 = fmul double %tmp_2, 2.000000e-01


 <State 8>: 5.39ns
ST_8: tmp_1 (16)  [5/9] 5.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:8  %tmp_1 = fmul double %tmp_s, 8.000000e-01

ST_8: tmp_3 (20)  [5/9] 5.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:12  %tmp_3 = fmul double %tmp_2, 2.000000e-01


 <State 9>: 5.39ns
ST_9: tmp_1 (16)  [4/9] 5.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:8  %tmp_1 = fmul double %tmp_s, 8.000000e-01

ST_9: tmp_3 (20)  [4/9] 5.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:12  %tmp_3 = fmul double %tmp_2, 2.000000e-01


 <State 10>: 5.39ns
ST_10: tmp_1 (16)  [3/9] 5.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:8  %tmp_1 = fmul double %tmp_s, 8.000000e-01

ST_10: tmp_3 (20)  [3/9] 5.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:12  %tmp_3 = fmul double %tmp_2, 2.000000e-01


 <State 11>: 5.39ns
ST_11: tmp_1 (16)  [2/9] 5.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:8  %tmp_1 = fmul double %tmp_s, 8.000000e-01

ST_11: tmp_3 (20)  [2/9] 5.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:12  %tmp_3 = fmul double %tmp_2, 2.000000e-01


 <State 12>: 5.39ns
ST_12: tmp_1 (16)  [1/9] 5.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:8  %tmp_1 = fmul double %tmp_s, 8.000000e-01

ST_12: tmp_3 (20)  [1/9] 5.39ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:12  %tmp_3 = fmul double %tmp_2, 2.000000e-01


 <State 13>: 5.76ns
ST_13: tmp_4 (21)  [8/8] 5.76ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:13  %tmp_4 = fadd double %tmp_1, %tmp_3


 <State 14>: 5.76ns
ST_14: tmp_4 (21)  [7/8] 5.76ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:13  %tmp_4 = fadd double %tmp_1, %tmp_3


 <State 15>: 5.76ns
ST_15: tmp_4 (21)  [6/8] 5.76ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:13  %tmp_4 = fadd double %tmp_1, %tmp_3


 <State 16>: 5.76ns
ST_16: tmp_4 (21)  [5/8] 5.76ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:13  %tmp_4 = fadd double %tmp_1, %tmp_3


 <State 17>: 5.76ns
ST_17: tmp_4 (21)  [4/8] 5.76ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:13  %tmp_4 = fadd double %tmp_1, %tmp_3


 <State 18>: 5.76ns
ST_18: tmp_4 (21)  [3/8] 5.76ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:13  %tmp_4 = fadd double %tmp_1, %tmp_3


 <State 19>: 5.76ns
ST_19: tmp_4 (21)  [2/8] 5.76ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:13  %tmp_4 = fadd double %tmp_1, %tmp_3


 <State 20>: 5.76ns
ST_20: tmp_4 (21)  [1/8] 5.76ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:13  %tmp_4 = fadd double %tmp_1, %tmp_3


 <State 21>: 5.20ns
ST_21: simConfig_rowsToSimu (9)  [1/1] 0.00ns
_ifconv:1  %simConfig_rowsToSimu = call i27 @_ssdm_op_Read.ap_auto.i27(i27 %simConfig_rowsToSimulate_V_read)

ST_21: RowOfBlocks_V_read_1 (10)  [1/1] 0.00ns
_ifconv:2  %RowOfBlocks_V_read_1 = call i26 @_ssdm_op_Read.ap_auto.i26(i26 %RowOfBlocks_V_read)

ST_21: tmp_data (22)  [2/2] 5.20ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:14  %tmp_data = fptrunc double %tmp_4 to float

ST_21: lhs_V_i_cast (24)  [1/1] 0.00ns  loc: modules/I_calc/I_calc.cpp:35->modules/I_calc/I_calc.cpp:44
_ifconv:16  %lhs_V_i_cast = sext i27 %simConfig_rowsToSimu to i28

ST_21: r_V (25)  [1/1] 2.32ns  loc: modules/I_calc/I_calc.cpp:35->modules/I_calc/I_calc.cpp:44
_ifconv:17  %r_V = add i28 %lhs_V_i_cast, -1

ST_21: tmp_i_cast (26)  [1/1] 0.00ns  loc: modules/I_calc/I_calc.cpp:35->modules/I_calc/I_calc.cpp:44
_ifconv:18  %tmp_i_cast = zext i26 %RowOfBlocks_V_read_1 to i28

ST_21: tmp_10_i (27)  [1/1] 2.46ns  loc: modules/I_calc/I_calc.cpp:35->modules/I_calc/I_calc.cpp:44
_ifconv:19  %tmp_10_i = icmp eq i28 %tmp_i_cast, %r_V


 <State 22>: 5.20ns
ST_22: StgValue_67 (8)  [1/1] 0.00ns
_ifconv:0  call void (...)* @_ssdm_op_SpecInterface(float* %I_V_data, i1* %I_V_tlast_V, [5 x i8]* @p_str993, i32 0, i32 0, [5 x i8]* @p_str1094, i32 0, i32 0, [1 x i8]* @p_str286, [1 x i8]* @p_str286, [1 x i8]* @p_str286, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str286, [1 x i8]* @p_str286) nounwind

ST_22: tmp_data (22)  [1/2] 5.20ns  loc: modules/I_calc/I_calc.cpp:43
_ifconv:14  %tmp_data = fptrunc double %tmp_4 to float

ST_22: tmp_tlast_V (28)  [1/1] 1.37ns  loc: modules/I_calc/I_calc.cpp:45
_ifconv:20  %tmp_tlast_V = and i1 %tmp_i, %tmp_10_i

ST_22: StgValue_70 (29)  [1/1] 0.00ns  loc: modules/I_calc/I_calc.cpp:45
_ifconv:21  call void @_ssdm_op_Write.axis.volatile.floatP.i1P(float* %I_V_data, i1* %I_V_tlast_V, float %tmp_data, i1 %tmp_tlast_V)

ST_22: StgValue_71 (30)  [1/1] 0.00ns
_ifconv:22  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 4ns.

 <State 1>: 2.39ns
The critical path consists of the following:
	wire read on port 'row_V' [11]  (0 ns)
	'getelementptr' operation ('V_temp_data_addr', modules/I_calc/I_calc.cpp:43) [17]  (0 ns)
	'load' operation ('V_temp_data_load', modules/I_calc/I_calc.cpp:43) on array 'V_temp_data' [18]  (2.39 ns)

 <State 2>: 2.39ns
The critical path consists of the following:
	'load' operation ('F_temp_data_load', modules/I_calc/I_calc.cpp:43) on array 'F_temp_data' [14]  (2.39 ns)

 <State 3>: 5.55ns
The critical path consists of the following:
	'fpext' operation ('tmp_s', modules/I_calc/I_calc.cpp:43) [15]  (5.55 ns)

 <State 4>: 5.39ns
The critical path consists of the following:
	'dmul' operation ('tmp_1', modules/I_calc/I_calc.cpp:43) [16]  (5.39 ns)

 <State 5>: 5.39ns
The critical path consists of the following:
	'dmul' operation ('tmp_1', modules/I_calc/I_calc.cpp:43) [16]  (5.39 ns)

 <State 6>: 5.39ns
The critical path consists of the following:
	'dmul' operation ('tmp_1', modules/I_calc/I_calc.cpp:43) [16]  (5.39 ns)

 <State 7>: 5.39ns
The critical path consists of the following:
	'dmul' operation ('tmp_1', modules/I_calc/I_calc.cpp:43) [16]  (5.39 ns)

 <State 8>: 5.39ns
The critical path consists of the following:
	'dmul' operation ('tmp_1', modules/I_calc/I_calc.cpp:43) [16]  (5.39 ns)

 <State 9>: 5.39ns
The critical path consists of the following:
	'dmul' operation ('tmp_1', modules/I_calc/I_calc.cpp:43) [16]  (5.39 ns)

 <State 10>: 5.39ns
The critical path consists of the following:
	'dmul' operation ('tmp_1', modules/I_calc/I_calc.cpp:43) [16]  (5.39 ns)

 <State 11>: 5.39ns
The critical path consists of the following:
	'dmul' operation ('tmp_1', modules/I_calc/I_calc.cpp:43) [16]  (5.39 ns)

 <State 12>: 5.39ns
The critical path consists of the following:
	'dmul' operation ('tmp_1', modules/I_calc/I_calc.cpp:43) [16]  (5.39 ns)

 <State 13>: 5.76ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', modules/I_calc/I_calc.cpp:43) [21]  (5.76 ns)

 <State 14>: 5.76ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', modules/I_calc/I_calc.cpp:43) [21]  (5.76 ns)

 <State 15>: 5.76ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', modules/I_calc/I_calc.cpp:43) [21]  (5.76 ns)

 <State 16>: 5.76ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', modules/I_calc/I_calc.cpp:43) [21]  (5.76 ns)

 <State 17>: 5.76ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', modules/I_calc/I_calc.cpp:43) [21]  (5.76 ns)

 <State 18>: 5.76ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', modules/I_calc/I_calc.cpp:43) [21]  (5.76 ns)

 <State 19>: 5.76ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', modules/I_calc/I_calc.cpp:43) [21]  (5.76 ns)

 <State 20>: 5.76ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', modules/I_calc/I_calc.cpp:43) [21]  (5.76 ns)

 <State 21>: 5.2ns
The critical path consists of the following:
	'fptrunc' operation ('tmp.data', modules/I_calc/I_calc.cpp:43) [22]  (5.2 ns)

 <State 22>: 5.2ns
The critical path consists of the following:
	'fptrunc' operation ('tmp.data', modules/I_calc/I_calc.cpp:43) [22]  (5.2 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
