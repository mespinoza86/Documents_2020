// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module calc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        simConfig_rowsToSimulate_V_dout,
        simConfig_rowsToSimulate_V_empty_n,
        simConfig_rowsToSimulate_V_read,
        simConfig_BLOCK_NUMBERS_V_dout,
        simConfig_BLOCK_NUMBERS_V_empty_n,
        simConfig_BLOCK_NUMBERS_V_read,
        simConfig_rowsToSimulate_V_out_din,
        simConfig_rowsToSimulate_V_out_full_n,
        simConfig_rowsToSimulate_V_out_write,
        simConfig_BLOCK_NUMBERS_V_out_din,
        simConfig_BLOCK_NUMBERS_V_out_full_n,
        simConfig_BLOCK_NUMBERS_V_out_write,
        processedData_V_data_dout,
        processedData_V_data_empty_n,
        processedData_V_data_read,
        processedData_V_data_1_dout,
        processedData_V_data_1_empty_n,
        processedData_V_data_1_read,
        processedData_V_data_2_dout,
        processedData_V_data_2_empty_n,
        processedData_V_data_2_read,
        processedData_V_data_3_dout,
        processedData_V_data_3_empty_n,
        processedData_V_data_3_read,
        fixedData_V_data_dout,
        fixedData_V_data_empty_n,
        fixedData_V_data_read,
        fixedData_V_tlast_V_dout,
        fixedData_V_tlast_V_empty_n,
        fixedData_V_tlast_V_read,
        V_V_data_0_din,
        V_V_data_0_full_n,
        V_V_data_0_write,
        V_V_data_1_din,
        V_V_data_1_full_n,
        V_V_data_1_write,
        V_V_data_2_din,
        V_V_data_2_full_n,
        V_V_data_2_write,
        V_V_data_3_din,
        V_V_data_3_full_n,
        V_V_data_3_write,
        F_V_data_0_din,
        F_V_data_0_full_n,
        F_V_data_0_write,
        F_V_data_1_din,
        F_V_data_1_full_n,
        F_V_data_1_write,
        F_V_data_2_din,
        F_V_data_2_full_n,
        F_V_data_2_write,
        F_V_data_3_din,
        F_V_data_3_full_n,
        F_V_data_3_write
);

parameter    ap_ST_fsm_state1 = 10'b1;
parameter    ap_ST_fsm_state2 = 10'b10;
parameter    ap_ST_fsm_state3 = 10'b100;
parameter    ap_ST_fsm_state4 = 10'b1000;
parameter    ap_ST_fsm_state5 = 10'b10000;
parameter    ap_ST_fsm_state6 = 10'b100000;
parameter    ap_ST_fsm_state7 = 10'b1000000;
parameter    ap_ST_fsm_pp0_stage0 = 10'b10000000;
parameter    ap_ST_fsm_pp0_stage1 = 10'b100000000;
parameter    ap_ST_fsm_state45 = 10'b1000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv56_0 = 56'b00000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_BC23D70A = 32'b10111100001000111101011100001010;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv56_1 = 56'b1;
parameter    ap_const_lv32_9 = 32'b1001;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [26:0] simConfig_rowsToSimulate_V_dout;
input   simConfig_rowsToSimulate_V_empty_n;
output   simConfig_rowsToSimulate_V_read;
input  [26:0] simConfig_BLOCK_NUMBERS_V_dout;
input   simConfig_BLOCK_NUMBERS_V_empty_n;
output   simConfig_BLOCK_NUMBERS_V_read;
output  [26:0] simConfig_rowsToSimulate_V_out_din;
input   simConfig_rowsToSimulate_V_out_full_n;
output   simConfig_rowsToSimulate_V_out_write;
output  [26:0] simConfig_BLOCK_NUMBERS_V_out_din;
input   simConfig_BLOCK_NUMBERS_V_out_full_n;
output   simConfig_BLOCK_NUMBERS_V_out_write;
input  [31:0] processedData_V_data_dout;
input   processedData_V_data_empty_n;
output   processedData_V_data_read;
input  [31:0] processedData_V_data_1_dout;
input   processedData_V_data_1_empty_n;
output   processedData_V_data_1_read;
input  [31:0] processedData_V_data_2_dout;
input   processedData_V_data_2_empty_n;
output   processedData_V_data_2_read;
input  [31:0] processedData_V_data_3_dout;
input   processedData_V_data_3_empty_n;
output   processedData_V_data_3_read;
input  [31:0] fixedData_V_data_dout;
input   fixedData_V_data_empty_n;
output   fixedData_V_data_read;
input  [0:0] fixedData_V_tlast_V_dout;
input   fixedData_V_tlast_V_empty_n;
output   fixedData_V_tlast_V_read;
output  [31:0] V_V_data_0_din;
input   V_V_data_0_full_n;
output   V_V_data_0_write;
output  [31:0] V_V_data_1_din;
input   V_V_data_1_full_n;
output   V_V_data_1_write;
output  [31:0] V_V_data_2_din;
input   V_V_data_2_full_n;
output   V_V_data_2_write;
output  [31:0] V_V_data_3_din;
input   V_V_data_3_full_n;
output   V_V_data_3_write;
output  [31:0] F_V_data_0_din;
input   F_V_data_0_full_n;
output   F_V_data_0_write;
output  [31:0] F_V_data_1_din;
input   F_V_data_1_full_n;
output   F_V_data_1_write;
output  [31:0] F_V_data_2_din;
input   F_V_data_2_full_n;
output   F_V_data_2_write;
output  [31:0] F_V_data_3_din;
input   F_V_data_3_full_n;
output   F_V_data_3_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg simConfig_rowsToSimulate_V_read;
reg simConfig_BLOCK_NUMBERS_V_read;
reg simConfig_rowsToSimulate_V_out_write;
reg simConfig_BLOCK_NUMBERS_V_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg    simConfig_rowsToSimulate_V_blk_n;
reg    simConfig_BLOCK_NUMBERS_V_blk_n;
reg    simConfig_rowsToSimulate_V_out_blk_n;
reg    simConfig_BLOCK_NUMBERS_V_out_blk_n;
reg    processedData_V_data_blk_n;
wire   [0:0] ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] exitcond_flatten_reg_293;
reg    processedData_V_data_1_blk_n;
reg    processedData_V_data_2_blk_n;
reg    processedData_V_data_3_blk_n;
reg    fixedData_V_data_blk_n;
reg    fixedData_V_tlast_V_blk_n;
reg    V_V_data_0_blk_n;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter18;
reg   [0:0] ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293;
reg    V_V_data_1_blk_n;
reg    V_V_data_2_blk_n;
reg    V_V_data_3_blk_n;
reg    F_V_data_0_blk_n;
reg    F_V_data_1_blk_n;
reg    F_V_data_2_blk_n;
reg    F_V_data_3_blk_n;
reg   [55:0] indvar_flatten_reg_170;
reg    ap_condition_165;
wire   [55:0] grp_fu_241_p2;
reg   [55:0] bound_reg_288;
wire   [0:0] ap_CS_fsm_state7;
wire   [0:0] exitcond_flatten_fu_247_p2;
wire    V_V_data_01_status;
wire    F_V_data_01_status;
reg    ap_condition_188;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_293;
reg   [0:0] ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_293;
reg   [0:0] ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_293;
reg   [0:0] ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_293;
reg   [0:0] ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_293;
reg   [0:0] ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_293;
reg   [0:0] ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_293;
reg   [0:0] ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_293;
reg   [0:0] ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_293;
reg   [0:0] ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_293;
reg   [0:0] ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_293;
reg   [0:0] ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_293;
reg   [0:0] ap_pipeline_reg_pp0_iter13_exitcond_flatten_reg_293;
reg   [0:0] ap_pipeline_reg_pp0_iter14_exitcond_flatten_reg_293;
reg   [0:0] ap_pipeline_reg_pp0_iter15_exitcond_flatten_reg_293;
reg   [0:0] ap_pipeline_reg_pp0_iter16_exitcond_flatten_reg_293;
wire   [55:0] indvar_flatten_next_fu_252_p2;
reg   [55:0] indvar_flatten_next_reg_297;
reg   [31:0] tmp_data_0_2_reg_302;
wire    processedData_V_data0_status;
wire    fixedData_V_data0_status;
reg    ap_condition_224;
reg   [31:0] tmp_data_1_2_reg_307;
reg   [31:0] tmp_data_2_2_reg_312;
reg   [31:0] tmp_data_3_2_reg_317;
reg   [31:0] tmp_data_reg_322;
wire   [31:0] grp_fu_181_p2;
reg   [31:0] tmp_data_0_3_reg_328;
reg    ap_enable_reg_pp0_iter4;
reg   [31:0] ap_pipeline_reg_pp0_iter5_tmp_data_0_3_reg_328;
reg   [31:0] ap_pipeline_reg_pp0_iter6_tmp_data_0_3_reg_328;
reg   [31:0] ap_pipeline_reg_pp0_iter7_tmp_data_0_3_reg_328;
reg   [31:0] ap_pipeline_reg_pp0_iter8_tmp_data_0_3_reg_328;
reg   [31:0] ap_pipeline_reg_pp0_iter9_tmp_data_0_3_reg_328;
reg   [31:0] ap_pipeline_reg_pp0_iter10_tmp_data_0_3_reg_328;
reg   [31:0] ap_pipeline_reg_pp0_iter11_tmp_data_0_3_reg_328;
reg   [31:0] ap_pipeline_reg_pp0_iter12_tmp_data_0_3_reg_328;
reg   [31:0] ap_pipeline_reg_pp0_iter13_tmp_data_0_3_reg_328;
reg   [31:0] ap_pipeline_reg_pp0_iter14_tmp_data_0_3_reg_328;
reg   [31:0] ap_pipeline_reg_pp0_iter15_tmp_data_0_3_reg_328;
reg   [31:0] ap_pipeline_reg_pp0_iter16_tmp_data_0_3_reg_328;
reg   [31:0] ap_pipeline_reg_pp0_iter17_tmp_data_0_3_reg_328;
wire   [31:0] grp_fu_185_p2;
reg   [31:0] tmp_data_1_3_reg_336;
reg   [31:0] ap_pipeline_reg_pp0_iter5_tmp_data_1_3_reg_336;
reg   [31:0] ap_pipeline_reg_pp0_iter6_tmp_data_1_3_reg_336;
reg   [31:0] ap_pipeline_reg_pp0_iter7_tmp_data_1_3_reg_336;
reg   [31:0] ap_pipeline_reg_pp0_iter8_tmp_data_1_3_reg_336;
reg   [31:0] ap_pipeline_reg_pp0_iter9_tmp_data_1_3_reg_336;
reg   [31:0] ap_pipeline_reg_pp0_iter10_tmp_data_1_3_reg_336;
reg   [31:0] ap_pipeline_reg_pp0_iter11_tmp_data_1_3_reg_336;
reg   [31:0] ap_pipeline_reg_pp0_iter12_tmp_data_1_3_reg_336;
reg   [31:0] ap_pipeline_reg_pp0_iter13_tmp_data_1_3_reg_336;
reg   [31:0] ap_pipeline_reg_pp0_iter14_tmp_data_1_3_reg_336;
reg   [31:0] ap_pipeline_reg_pp0_iter15_tmp_data_1_3_reg_336;
reg   [31:0] ap_pipeline_reg_pp0_iter16_tmp_data_1_3_reg_336;
reg   [31:0] ap_pipeline_reg_pp0_iter17_tmp_data_1_3_reg_336;
reg   [31:0] tmp_data_2_3_reg_344;
reg    ap_enable_reg_pp0_iter5;
reg   [31:0] ap_pipeline_reg_pp0_iter6_tmp_data_2_3_reg_344;
reg   [31:0] ap_pipeline_reg_pp0_iter7_tmp_data_2_3_reg_344;
reg   [31:0] ap_pipeline_reg_pp0_iter8_tmp_data_2_3_reg_344;
reg   [31:0] ap_pipeline_reg_pp0_iter9_tmp_data_2_3_reg_344;
reg   [31:0] ap_pipeline_reg_pp0_iter10_tmp_data_2_3_reg_344;
reg   [31:0] ap_pipeline_reg_pp0_iter11_tmp_data_2_3_reg_344;
reg   [31:0] ap_pipeline_reg_pp0_iter12_tmp_data_2_3_reg_344;
reg   [31:0] ap_pipeline_reg_pp0_iter13_tmp_data_2_3_reg_344;
reg   [31:0] ap_pipeline_reg_pp0_iter14_tmp_data_2_3_reg_344;
reg   [31:0] ap_pipeline_reg_pp0_iter15_tmp_data_2_3_reg_344;
reg   [31:0] ap_pipeline_reg_pp0_iter16_tmp_data_2_3_reg_344;
reg   [31:0] ap_pipeline_reg_pp0_iter17_tmp_data_2_3_reg_344;
reg   [31:0] tmp_data_3_3_reg_352;
reg   [31:0] ap_pipeline_reg_pp0_iter6_tmp_data_3_3_reg_352;
reg   [31:0] ap_pipeline_reg_pp0_iter7_tmp_data_3_3_reg_352;
reg   [31:0] ap_pipeline_reg_pp0_iter8_tmp_data_3_3_reg_352;
reg   [31:0] ap_pipeline_reg_pp0_iter9_tmp_data_3_3_reg_352;
reg   [31:0] ap_pipeline_reg_pp0_iter10_tmp_data_3_3_reg_352;
reg   [31:0] ap_pipeline_reg_pp0_iter11_tmp_data_3_3_reg_352;
reg   [31:0] ap_pipeline_reg_pp0_iter12_tmp_data_3_3_reg_352;
reg   [31:0] ap_pipeline_reg_pp0_iter13_tmp_data_3_3_reg_352;
reg   [31:0] ap_pipeline_reg_pp0_iter14_tmp_data_3_3_reg_352;
reg   [31:0] ap_pipeline_reg_pp0_iter15_tmp_data_3_3_reg_352;
reg   [31:0] ap_pipeline_reg_pp0_iter16_tmp_data_3_3_reg_352;
reg   [31:0] ap_pipeline_reg_pp0_iter17_tmp_data_3_3_reg_352;
wire   [31:0] grp_fu_189_p2;
reg   [31:0] tmp_60_i_i_i_reg_360;
reg    ap_enable_reg_pp0_iter6;
wire   [31:0] grp_fu_193_p2;
reg   [31:0] tmp_60_1_i_i_i_reg_365;
reg   [31:0] tmp_60_2_i_i_i_reg_370;
reg    ap_enable_reg_pp0_iter7;
reg   [31:0] tmp_60_3_i_i_i_reg_375;
wire   [31:0] grp_fu_197_p2;
reg   [31:0] tmp_61_i_i_i_reg_380;
reg    ap_enable_reg_pp0_iter8;
wire   [31:0] grp_fu_202_p2;
reg   [31:0] tmp_61_1_i_i_i_reg_385;
reg   [31:0] tmp_61_2_i_i_i_reg_390;
reg    ap_enable_reg_pp0_iter9;
reg   [31:0] tmp_61_3_i_i_i_reg_395;
wire   [31:0] grp_fu_215_p2;
reg   [31:0] tmp_62_i_i_i_reg_400;
reg    ap_enable_reg_pp0_iter15;
wire   [31:0] grp_fu_220_p2;
reg   [31:0] tmp_62_1_i_i_i_reg_405;
reg   [31:0] tmp_62_2_i_i_i_reg_410;
reg   [31:0] tmp_62_3_i_i_i_reg_415;
wire   [31:0] grp_fu_207_p2;
reg   [31:0] tmp_data_0_reg_420;
reg    ap_enable_reg_pp0_iter17;
wire   [31:0] grp_fu_211_p2;
reg   [31:0] tmp_data_1_reg_425;
reg   [31:0] tmp_data_2_reg_430;
reg   [31:0] tmp_data_3_reg_435;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter16;
reg   [55:0] indvar_flatten_phi_fu_174_p4;
reg    processedData_V_data0_update;
reg    fixedData_V_data0_update;
reg    V_V_data_01_update;
reg    F_V_data_01_update;
reg   [31:0] grp_fu_181_p1;
reg   [31:0] grp_fu_185_p1;
reg   [31:0] grp_fu_189_p0;
reg   [31:0] grp_fu_189_p1;
reg   [31:0] grp_fu_193_p0;
reg   [31:0] grp_fu_193_p1;
reg   [31:0] grp_fu_197_p0;
reg   [31:0] grp_fu_202_p0;
reg   [31:0] grp_fu_207_p0;
reg   [31:0] grp_fu_207_p1;
reg   [31:0] grp_fu_211_p0;
reg   [31:0] grp_fu_211_p1;
reg   [31:0] grp_fu_215_p1;
reg   [31:0] grp_fu_220_p1;
wire   [28:0] r_V_fu_225_p3;
wire   [26:0] grp_fu_241_p0;
wire   [28:0] grp_fu_241_p1;
reg    grp_fu_181_ce;
reg    grp_fu_185_ce;
reg    grp_fu_189_ce;
reg    grp_fu_193_ce;
reg    grp_fu_197_ce;
reg    grp_fu_202_ce;
reg    grp_fu_207_ce;
reg    grp_fu_211_ce;
reg    grp_fu_215_ce;
reg    grp_fu_220_ce;
reg    grp_fu_241_ce;
wire   [0:0] ap_CS_fsm_state45;
reg   [9:0] ap_NS_fsm;
wire   [55:0] grp_fu_241_p00;
wire   [55:0] grp_fu_241_p10;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 10'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
end

GapJunctionIP_fsurcU #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
GapJunctionIP_fsurcU_U119(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_data_reg_322),
    .din1(grp_fu_181_p1),
    .ce(grp_fu_181_ce),
    .dout(grp_fu_181_p2)
);

GapJunctionIP_fsurcU #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
GapJunctionIP_fsurcU_U120(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_data_reg_322),
    .din1(grp_fu_185_p1),
    .ce(grp_fu_185_ce),
    .dout(grp_fu_185_p2)
);

GapJunctionIP_fmusc4 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
GapJunctionIP_fmusc4_U121(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_189_p0),
    .din1(grp_fu_189_p1),
    .ce(grp_fu_189_ce),
    .dout(grp_fu_189_p2)
);

GapJunctionIP_fmusc4 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
GapJunctionIP_fmusc4_U122(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_193_p0),
    .din1(grp_fu_193_p1),
    .ce(grp_fu_193_ce),
    .dout(grp_fu_193_p2)
);

GapJunctionIP_fmusc4 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
GapJunctionIP_fmusc4_U123(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_197_p0),
    .din1(ap_const_lv32_BC23D70A),
    .ce(grp_fu_197_ce),
    .dout(grp_fu_197_p2)
);

GapJunctionIP_fmusc4 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
GapJunctionIP_fmusc4_U124(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_202_p0),
    .din1(ap_const_lv32_BC23D70A),
    .ce(grp_fu_202_ce),
    .dout(grp_fu_202_p2)
);

GapJunctionIP_fmusc4 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
GapJunctionIP_fmusc4_U125(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_207_p0),
    .din1(grp_fu_207_p1),
    .ce(grp_fu_207_ce),
    .dout(grp_fu_207_p2)
);

GapJunctionIP_fmusc4 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
GapJunctionIP_fmusc4_U126(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_211_p0),
    .din1(grp_fu_211_p1),
    .ce(grp_fu_211_ce),
    .dout(grp_fu_211_p2)
);

GapJunctionIP_fextde #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
GapJunctionIP_fextde_U127(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_const_lv32_0),
    .din1(grp_fu_215_p1),
    .ce(grp_fu_215_ce),
    .dout(grp_fu_215_p2)
);

GapJunctionIP_fextde #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
GapJunctionIP_fextde_U128(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_const_lv32_0),
    .din1(grp_fu_220_p1),
    .ce(grp_fu_220_ce),
    .dout(grp_fu_220_p2)
);

GapJunctionIP_muludo #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 29 ),
    .dout_WIDTH( 56 ))
GapJunctionIP_muludo_U129(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_241_p0),
    .din1(grp_fu_241_p1),
    .ce(grp_fu_241_ce),
    .dout(grp_fu_241_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state45)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1)) & ~(1'b0 == exitcond_flatten_fu_247_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_293 == 1'b0) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)) & ~(exitcond_flatten_reg_293 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp0_iter18 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_293 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1)) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_reg_170 <= indvar_flatten_next_reg_297;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        indvar_flatten_reg_170 <= ap_const_lv56_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1)))) begin
        ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_293;
        ap_pipeline_reg_pp0_iter10_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter9_tmp_data_2_3_reg_344;
        ap_pipeline_reg_pp0_iter10_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter9_tmp_data_3_3_reg_352;
        ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_293;
        ap_pipeline_reg_pp0_iter11_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter10_tmp_data_2_3_reg_344;
        ap_pipeline_reg_pp0_iter11_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter10_tmp_data_3_3_reg_352;
        ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_293;
        ap_pipeline_reg_pp0_iter12_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter11_tmp_data_2_3_reg_344;
        ap_pipeline_reg_pp0_iter12_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter11_tmp_data_3_3_reg_352;
        ap_pipeline_reg_pp0_iter13_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_293;
        ap_pipeline_reg_pp0_iter13_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter12_tmp_data_2_3_reg_344;
        ap_pipeline_reg_pp0_iter13_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter12_tmp_data_3_3_reg_352;
        ap_pipeline_reg_pp0_iter14_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter13_exitcond_flatten_reg_293;
        ap_pipeline_reg_pp0_iter14_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter13_tmp_data_2_3_reg_344;
        ap_pipeline_reg_pp0_iter14_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter13_tmp_data_3_3_reg_352;
        ap_pipeline_reg_pp0_iter15_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter14_exitcond_flatten_reg_293;
        ap_pipeline_reg_pp0_iter15_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter14_tmp_data_2_3_reg_344;
        ap_pipeline_reg_pp0_iter15_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter14_tmp_data_3_3_reg_352;
        ap_pipeline_reg_pp0_iter16_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter15_exitcond_flatten_reg_293;
        ap_pipeline_reg_pp0_iter16_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter15_tmp_data_2_3_reg_344;
        ap_pipeline_reg_pp0_iter16_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter15_tmp_data_3_3_reg_352;
        ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter16_exitcond_flatten_reg_293;
        ap_pipeline_reg_pp0_iter17_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter16_tmp_data_2_3_reg_344;
        ap_pipeline_reg_pp0_iter17_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter16_tmp_data_3_3_reg_352;
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_293 <= exitcond_flatten_reg_293;
        ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_293;
        ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_293;
        ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_293;
        ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_293;
        ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_293;
        ap_pipeline_reg_pp0_iter6_tmp_data_2_3_reg_344 <= tmp_data_2_3_reg_344;
        ap_pipeline_reg_pp0_iter6_tmp_data_3_3_reg_352 <= tmp_data_3_3_reg_352;
        ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_293;
        ap_pipeline_reg_pp0_iter7_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter6_tmp_data_2_3_reg_344;
        ap_pipeline_reg_pp0_iter7_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter6_tmp_data_3_3_reg_352;
        ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_293;
        ap_pipeline_reg_pp0_iter8_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter7_tmp_data_2_3_reg_344;
        ap_pipeline_reg_pp0_iter8_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter7_tmp_data_3_3_reg_352;
        ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_293 <= ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_293;
        ap_pipeline_reg_pp0_iter9_tmp_data_2_3_reg_344 <= ap_pipeline_reg_pp0_iter8_tmp_data_2_3_reg_344;
        ap_pipeline_reg_pp0_iter9_tmp_data_3_3_reg_352 <= ap_pipeline_reg_pp0_iter8_tmp_data_3_3_reg_352;
        exitcond_flatten_reg_293 <= exitcond_flatten_fu_247_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
        ap_pipeline_reg_pp0_iter10_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter9_tmp_data_0_3_reg_328;
        ap_pipeline_reg_pp0_iter10_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter9_tmp_data_1_3_reg_336;
        ap_pipeline_reg_pp0_iter11_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter10_tmp_data_0_3_reg_328;
        ap_pipeline_reg_pp0_iter11_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter10_tmp_data_1_3_reg_336;
        ap_pipeline_reg_pp0_iter12_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter11_tmp_data_0_3_reg_328;
        ap_pipeline_reg_pp0_iter12_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter11_tmp_data_1_3_reg_336;
        ap_pipeline_reg_pp0_iter13_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter12_tmp_data_0_3_reg_328;
        ap_pipeline_reg_pp0_iter13_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter12_tmp_data_1_3_reg_336;
        ap_pipeline_reg_pp0_iter14_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter13_tmp_data_0_3_reg_328;
        ap_pipeline_reg_pp0_iter14_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter13_tmp_data_1_3_reg_336;
        ap_pipeline_reg_pp0_iter15_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter14_tmp_data_0_3_reg_328;
        ap_pipeline_reg_pp0_iter15_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter14_tmp_data_1_3_reg_336;
        ap_pipeline_reg_pp0_iter16_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter15_tmp_data_0_3_reg_328;
        ap_pipeline_reg_pp0_iter16_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter15_tmp_data_1_3_reg_336;
        ap_pipeline_reg_pp0_iter17_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter16_tmp_data_0_3_reg_328;
        ap_pipeline_reg_pp0_iter17_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter16_tmp_data_1_3_reg_336;
        ap_pipeline_reg_pp0_iter5_tmp_data_0_3_reg_328 <= tmp_data_0_3_reg_328;
        ap_pipeline_reg_pp0_iter5_tmp_data_1_3_reg_336 <= tmp_data_1_3_reg_336;
        ap_pipeline_reg_pp0_iter6_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter5_tmp_data_0_3_reg_328;
        ap_pipeline_reg_pp0_iter6_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter5_tmp_data_1_3_reg_336;
        ap_pipeline_reg_pp0_iter7_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter6_tmp_data_0_3_reg_328;
        ap_pipeline_reg_pp0_iter7_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter6_tmp_data_1_3_reg_336;
        ap_pipeline_reg_pp0_iter8_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter7_tmp_data_0_3_reg_328;
        ap_pipeline_reg_pp0_iter8_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter7_tmp_data_1_3_reg_336;
        ap_pipeline_reg_pp0_iter9_tmp_data_0_3_reg_328 <= ap_pipeline_reg_pp0_iter8_tmp_data_0_3_reg_328;
        ap_pipeline_reg_pp0_iter9_tmp_data_1_3_reg_336 <= ap_pipeline_reg_pp0_iter8_tmp_data_1_3_reg_336;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        bound_reg_288 <= grp_fu_241_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1)))) begin
        indvar_flatten_next_reg_297 <= indvar_flatten_next_fu_252_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)) & (1'b1 == ap_enable_reg_pp0_iter6) & (1'b0 == ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_293))) begin
        tmp_60_1_i_i_i_reg_365 <= grp_fu_193_p2;
        tmp_60_i_i_i_reg_360 <= grp_fu_189_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1)) & (1'b0 == ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_293) & (1'b1 == ap_enable_reg_pp0_iter7))) begin
        tmp_60_2_i_i_i_reg_370 <= grp_fu_189_p2;
        tmp_60_3_i_i_i_reg_375 <= grp_fu_193_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)) & (1'b1 == ap_enable_reg_pp0_iter8) & (1'b0 == ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_293))) begin
        tmp_61_1_i_i_i_reg_385 <= grp_fu_202_p2;
        tmp_61_i_i_i_reg_380 <= grp_fu_197_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1)) & (1'b0 == ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_293) & (1'b1 == ap_enable_reg_pp0_iter9))) begin
        tmp_61_2_i_i_i_reg_390 <= grp_fu_197_p2;
        tmp_61_3_i_i_i_reg_395 <= grp_fu_202_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1)) & (1'b1 == ap_enable_reg_pp0_iter15) & (1'b0 == ap_pipeline_reg_pp0_iter14_exitcond_flatten_reg_293))) begin
        tmp_62_1_i_i_i_reg_405 <= grp_fu_220_p2;
        tmp_62_i_i_i_reg_400 <= grp_fu_215_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)) & (1'b1 == ap_enable_reg_pp0_iter15) & (1'b0 == ap_pipeline_reg_pp0_iter15_exitcond_flatten_reg_293))) begin
        tmp_62_2_i_i_i_reg_410 <= grp_fu_215_p2;
        tmp_62_3_i_i_i_reg_415 <= grp_fu_220_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_293 == 1'b0) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
        tmp_data_0_2_reg_302 <= processedData_V_data_dout;
        tmp_data_1_2_reg_307 <= processedData_V_data_1_dout;
        tmp_data_2_2_reg_312 <= processedData_V_data_2_dout;
        tmp_data_3_2_reg_317 <= processedData_V_data_3_dout;
        tmp_data_reg_322 <= fixedData_V_data_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)) & (1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_293))) begin
        tmp_data_0_3_reg_328 <= grp_fu_181_p2;
        tmp_data_1_3_reg_336 <= grp_fu_185_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1)) & (1'b1 == ap_enable_reg_pp0_iter17) & (1'b0 == ap_pipeline_reg_pp0_iter16_exitcond_flatten_reg_293))) begin
        tmp_data_0_reg_420 <= grp_fu_207_p2;
        tmp_data_1_reg_425 <= grp_fu_211_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1)) & (1'b0 == ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_293) & (1'b1 == ap_enable_reg_pp0_iter5))) begin
        tmp_data_2_3_reg_344 <= grp_fu_181_p2;
        tmp_data_3_3_reg_352 <= grp_fu_185_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)) & (1'b1 == ap_enable_reg_pp0_iter17))) begin
        tmp_data_2_reg_430 <= grp_fu_207_p2;
        tmp_data_3_reg_435 <= grp_fu_211_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter18) & (1'b0 == ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1)))) begin
        F_V_data_01_update = 1'b1;
    end else begin
        F_V_data_01_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter18) & (1'b0 == ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293))) begin
        F_V_data_0_blk_n = F_V_data_0_full_n;
    end else begin
        F_V_data_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter18) & (1'b0 == ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293))) begin
        F_V_data_1_blk_n = F_V_data_1_full_n;
    end else begin
        F_V_data_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter18) & (1'b0 == ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293))) begin
        F_V_data_2_blk_n = F_V_data_2_full_n;
    end else begin
        F_V_data_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter18) & (1'b0 == ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293))) begin
        F_V_data_3_blk_n = F_V_data_3_full_n;
    end else begin
        F_V_data_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter18) & (1'b0 == ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1)))) begin
        V_V_data_01_update = 1'b1;
    end else begin
        V_V_data_01_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter18) & (1'b0 == ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293))) begin
        V_V_data_0_blk_n = V_V_data_0_full_n;
    end else begin
        V_V_data_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter18) & (1'b0 == ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293))) begin
        V_V_data_1_blk_n = V_V_data_1_full_n;
    end else begin
        V_V_data_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter18) & (1'b0 == ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293))) begin
        V_V_data_2_blk_n = V_V_data_2_full_n;
    end else begin
        V_V_data_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter18) & (1'b0 == ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293))) begin
        V_V_data_3_blk_n = V_V_data_3_full_n;
    end else begin
        V_V_data_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | (1'b1 == ap_CS_fsm_state45))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_293 == 1'b0) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
        fixedData_V_data0_update = 1'b1;
    end else begin
        fixedData_V_data0_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_293 == 1'b0))) begin
        fixedData_V_data_blk_n = fixedData_V_data_empty_n;
    end else begin
        fixedData_V_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_293 == 1'b0))) begin
        fixedData_V_tlast_V_blk_n = fixedData_V_tlast_V_empty_n;
    end else begin
        fixedData_V_tlast_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1))) | ((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1))))) begin
        grp_fu_181_ce = 1'b1;
    end else begin
        grp_fu_181_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter1)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            grp_fu_181_p1 = tmp_data_2_2_reg_312;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            grp_fu_181_p1 = tmp_data_0_2_reg_302;
        end else begin
            grp_fu_181_p1 = 'bx;
        end
    end else begin
        grp_fu_181_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1))) | ((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1))))) begin
        grp_fu_185_ce = 1'b1;
    end else begin
        grp_fu_185_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter1)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            grp_fu_185_p1 = tmp_data_3_2_reg_317;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            grp_fu_185_p1 = tmp_data_1_2_reg_307;
        end else begin
            grp_fu_185_p1 = 'bx;
        end
    end else begin
        grp_fu_185_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1))) | ((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1))))) begin
        grp_fu_189_ce = 1'b1;
    end else begin
        grp_fu_189_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            grp_fu_189_p0 = tmp_data_2_3_reg_344;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            grp_fu_189_p0 = tmp_data_0_3_reg_328;
        end else begin
            grp_fu_189_p0 = 'bx;
        end
    end else begin
        grp_fu_189_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            grp_fu_189_p1 = tmp_data_2_3_reg_344;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            grp_fu_189_p1 = tmp_data_0_3_reg_328;
        end else begin
            grp_fu_189_p1 = 'bx;
        end
    end else begin
        grp_fu_189_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1))) | ((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1))))) begin
        grp_fu_193_ce = 1'b1;
    end else begin
        grp_fu_193_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            grp_fu_193_p0 = tmp_data_3_3_reg_352;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            grp_fu_193_p0 = tmp_data_1_3_reg_336;
        end else begin
            grp_fu_193_p0 = 'bx;
        end
    end else begin
        grp_fu_193_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            grp_fu_193_p1 = tmp_data_3_3_reg_352;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            grp_fu_193_p1 = tmp_data_1_3_reg_336;
        end else begin
            grp_fu_193_p1 = 'bx;
        end
    end else begin
        grp_fu_193_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1))) | ((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1))))) begin
        grp_fu_197_ce = 1'b1;
    end else begin
        grp_fu_197_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter7)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            grp_fu_197_p0 = tmp_60_2_i_i_i_reg_370;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            grp_fu_197_p0 = tmp_60_i_i_i_reg_360;
        end else begin
            grp_fu_197_p0 = 'bx;
        end
    end else begin
        grp_fu_197_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1))) | ((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1))))) begin
        grp_fu_202_ce = 1'b1;
    end else begin
        grp_fu_202_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter7)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            grp_fu_202_p0 = tmp_60_3_i_i_i_reg_375;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            grp_fu_202_p0 = tmp_60_1_i_i_i_reg_365;
        end else begin
            grp_fu_202_p0 = 'bx;
        end
    end else begin
        grp_fu_202_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1))) | ((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1))))) begin
        grp_fu_207_ce = 1'b1;
    end else begin
        grp_fu_207_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter16))) begin
        grp_fu_207_p0 = tmp_62_2_i_i_i_reg_410;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter15))) begin
        grp_fu_207_p0 = tmp_62_i_i_i_reg_400;
    end else begin
        grp_fu_207_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter16))) begin
        grp_fu_207_p1 = ap_pipeline_reg_pp0_iter15_tmp_data_2_3_reg_344;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter15))) begin
        grp_fu_207_p1 = ap_pipeline_reg_pp0_iter14_tmp_data_0_3_reg_328;
    end else begin
        grp_fu_207_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1))) | ((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1))))) begin
        grp_fu_211_ce = 1'b1;
    end else begin
        grp_fu_211_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter16))) begin
        grp_fu_211_p0 = tmp_62_3_i_i_i_reg_415;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter15))) begin
        grp_fu_211_p0 = tmp_62_1_i_i_i_reg_405;
    end else begin
        grp_fu_211_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter16))) begin
        grp_fu_211_p1 = ap_pipeline_reg_pp0_iter15_tmp_data_3_3_reg_352;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter15))) begin
        grp_fu_211_p1 = ap_pipeline_reg_pp0_iter14_tmp_data_1_3_reg_336;
    end else begin
        grp_fu_211_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1))) | ((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1))))) begin
        grp_fu_215_ce = 1'b1;
    end else begin
        grp_fu_215_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter9)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            grp_fu_215_p1 = tmp_61_2_i_i_i_reg_390;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            grp_fu_215_p1 = tmp_61_i_i_i_reg_380;
        end else begin
            grp_fu_215_p1 = 'bx;
        end
    end else begin
        grp_fu_215_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1))) | ((1'b1 == ap_CS_fsm_pp0_stage1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1))))) begin
        grp_fu_220_ce = 1'b1;
    end else begin
        grp_fu_220_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter9)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            grp_fu_220_p1 = tmp_61_3_i_i_i_reg_395;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            grp_fu_220_p1 = tmp_61_1_i_i_i_reg_385;
        end else begin
            grp_fu_220_p1 = 'bx;
        end
    end else begin
        grp_fu_220_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) | (1'b1 == ap_CS_fsm_pp0_stage0) | ((ap_CS_fsm_state1 == 1'b1) & (ap_condition_165 == 1'b1)) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_241_ce = 1'b0;
    end else begin
        grp_fu_241_ce = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_293 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_phi_fu_174_p4 = indvar_flatten_next_reg_297;
    end else begin
        indvar_flatten_phi_fu_174_p4 = indvar_flatten_reg_170;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_293 == 1'b0) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1)))) begin
        processedData_V_data0_update = 1'b1;
    end else begin
        processedData_V_data0_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_293 == 1'b0))) begin
        processedData_V_data_1_blk_n = processedData_V_data_1_empty_n;
    end else begin
        processedData_V_data_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_293 == 1'b0))) begin
        processedData_V_data_2_blk_n = processedData_V_data_2_empty_n;
    end else begin
        processedData_V_data_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_293 == 1'b0))) begin
        processedData_V_data_3_blk_n = processedData_V_data_3_empty_n;
    end else begin
        processedData_V_data_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_293 == 1'b0))) begin
        processedData_V_data_blk_n = processedData_V_data_empty_n;
    end else begin
        processedData_V_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        simConfig_BLOCK_NUMBERS_V_blk_n = simConfig_BLOCK_NUMBERS_V_empty_n;
    end else begin
        simConfig_BLOCK_NUMBERS_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        simConfig_BLOCK_NUMBERS_V_out_blk_n = simConfig_BLOCK_NUMBERS_V_out_full_n;
    end else begin
        simConfig_BLOCK_NUMBERS_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_165 == 1'b1))) begin
        simConfig_BLOCK_NUMBERS_V_out_write = 1'b1;
    end else begin
        simConfig_BLOCK_NUMBERS_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_165 == 1'b1))) begin
        simConfig_BLOCK_NUMBERS_V_read = 1'b1;
    end else begin
        simConfig_BLOCK_NUMBERS_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        simConfig_rowsToSimulate_V_blk_n = simConfig_rowsToSimulate_V_empty_n;
    end else begin
        simConfig_rowsToSimulate_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        simConfig_rowsToSimulate_V_out_blk_n = simConfig_rowsToSimulate_V_out_full_n;
    end else begin
        simConfig_rowsToSimulate_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_165 == 1'b1))) begin
        simConfig_rowsToSimulate_V_out_write = 1'b1;
    end else begin
        simConfig_rowsToSimulate_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_165 == 1'b1))) begin
        simConfig_rowsToSimulate_V_read = 1'b1;
    end else begin
        simConfig_rowsToSimulate_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_condition_165 == 1'b1)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1)) & ~((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter18) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1)) & ~(1'b1 == ap_enable_reg_pp0_iter17)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1)) & ~(1'b0 == exitcond_flatten_fu_247_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter18) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1)) & ~(1'b1 == ap_enable_reg_pp0_iter17)) | ((1'b1 == ap_enable_reg_pp0_iter0) & ~((1'b1 == ap_enable_reg_pp0_iter18) & (ap_condition_188 == 1'b1)) & ~(1'b0 == exitcond_flatten_fu_247_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_condition_224 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F_V_data_01_status = (F_V_data_0_full_n & F_V_data_1_full_n & F_V_data_2_full_n & F_V_data_3_full_n);

assign F_V_data_0_din = tmp_data_0_reg_420;

assign F_V_data_0_write = F_V_data_01_update;

assign F_V_data_1_din = tmp_data_1_reg_425;

assign F_V_data_1_write = F_V_data_01_update;

assign F_V_data_2_din = tmp_data_2_reg_430;

assign F_V_data_2_write = F_V_data_01_update;

assign F_V_data_3_din = tmp_data_3_reg_435;

assign F_V_data_3_write = F_V_data_01_update;

assign V_V_data_01_status = (V_V_data_0_full_n & V_V_data_1_full_n & V_V_data_2_full_n & V_V_data_3_full_n);

assign V_V_data_0_din = ap_pipeline_reg_pp0_iter17_tmp_data_0_3_reg_328;

assign V_V_data_0_write = V_V_data_01_update;

assign V_V_data_1_din = ap_pipeline_reg_pp0_iter17_tmp_data_1_3_reg_336;

assign V_V_data_1_write = V_V_data_01_update;

assign V_V_data_2_din = ap_pipeline_reg_pp0_iter17_tmp_data_2_3_reg_344;

assign V_V_data_2_write = V_V_data_01_update;

assign V_V_data_3_din = ap_pipeline_reg_pp0_iter17_tmp_data_3_3_reg_352;

assign V_V_data_3_write = V_V_data_01_update;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state45 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_6];

always @ (*) begin
    ap_condition_165 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | (simConfig_rowsToSimulate_V_empty_n == 1'b0) | (simConfig_BLOCK_NUMBERS_V_empty_n == 1'b0) | (simConfig_rowsToSimulate_V_out_full_n == 1'b0) | (simConfig_BLOCK_NUMBERS_V_out_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_188 = (((1'b0 == ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293) & (V_V_data_01_status == 1'b0)) | ((1'b0 == ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_293) & (F_V_data_01_status == 1'b0)));
end

always @ (*) begin
    ap_condition_224 = (((exitcond_flatten_reg_293 == 1'b0) & (processedData_V_data0_status == 1'b0)) | ((exitcond_flatten_reg_293 == 1'b0) & (fixedData_V_data0_status == 1'b0)));
end

assign exitcond_flatten_fu_247_p2 = ((indvar_flatten_phi_fu_174_p4 == bound_reg_288) ? 1'b1 : 1'b0);

assign fixedData_V_data0_status = (fixedData_V_data_empty_n & fixedData_V_tlast_V_empty_n);

assign fixedData_V_data_read = fixedData_V_data0_update;

assign fixedData_V_tlast_V_read = fixedData_V_data0_update;

assign grp_fu_241_p0 = grp_fu_241_p00;

assign grp_fu_241_p00 = simConfig_rowsToSimulate_V_dout;

assign grp_fu_241_p1 = grp_fu_241_p10;

assign grp_fu_241_p10 = r_V_fu_225_p3;

assign indvar_flatten_next_fu_252_p2 = (indvar_flatten_phi_fu_174_p4 + ap_const_lv56_1);

assign processedData_V_data0_status = (processedData_V_data_empty_n & processedData_V_data_1_empty_n & processedData_V_data_2_empty_n & processedData_V_data_3_empty_n);

assign processedData_V_data_1_read = processedData_V_data0_update;

assign processedData_V_data_2_read = processedData_V_data0_update;

assign processedData_V_data_3_read = processedData_V_data0_update;

assign processedData_V_data_read = processedData_V_data0_update;

assign r_V_fu_225_p3 = {{simConfig_BLOCK_NUMBERS_V_dout}, {ap_const_lv2_0}};

assign simConfig_BLOCK_NUMBERS_V_out_din = simConfig_BLOCK_NUMBERS_V_dout;

assign simConfig_rowsToSimulate_V_out_din = simConfig_rowsToSimulate_V_dout;

endmodule //calc
